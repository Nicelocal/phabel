<?php

namespace PhabelTest\Target;

use PHPUnit\Framework\TestCase;
/**
 * @author Daniil Gentili <daniil@daniil.it>
 * @license MIT
 */
class Expression extends TestCase
{
    function test0()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test][$test];
    }
    function test1()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test][$test]);
    }
    function test2()
    {
        $this->assertTrue(0 === 0);
        fn() => [][$test];
    }
    function test3()
    {
        $this->assertTrue(0 === 0);
        fn() => isset([][$test]);
    }
    function test4()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test = $test)[$test];
    }
    function test5()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test = $test)[$test]);
    }
    function test6()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test =& $test)[$test];
    }
    function test7()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test =& $test)[$test]);
    }
    function test8()
    {
        $this->assertTrue(0 === 0);
        fn() => (~$test)[$test];
    }
    function test9()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((~$test)[$test]);
    }
    function test10()
    {
        $this->assertTrue(0 === 0);
        fn() => (!$test)[$test];
    }
    function test11()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((!$test)[$test]);
    }
    function test12()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test[$test];
    }
    function test13()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::$test[$test]);
    }
    function test14()
    {
        $this->assertTrue(0 === 0);
        fn() => (clone $test)[$test];
    }
    function test15()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((clone $test)[$test]);
    }
    function test16()
    {
        $this->assertTrue(0 === 0);
        fn() => (function () {
        })[$test];
    }
    function test17()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((function () {
        })[$test]);
    }
    function test18()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test)[$test];
    }
    function test19()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test)[$test]);
    }
    function test20()
    {
        $this->assertTrue(0 === 0);
        fn() => self[$test];
    }
    function test21()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(self[$test]);
    }
    function test22()
    {
        $this->assertTrue(0 === 0);
        fn() => (empty($test))[$test];
    }
    function test23()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((empty($test))[$test]);
    }
    function test24()
    {
        $this->assertTrue(0 === 0);
        fn() => (@$test)[$test];
    }
    function test25()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((@$test)[$test]);
    }
    function test26()
    {
        $this->assertTrue(0 === 0);
        fn() => (eval($test))[$test];
    }
    function test27()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((eval($test))[$test]);
    }
    function test28()
    {
        $this->assertTrue(0 === 0);
        fn() => $test()[$test];
    }
    function test29()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test()[$test]);
    }
    function test30()
    {
        $this->assertTrue(0 === 0);
        fn() => ( $test)[$test];
    }
    function test31()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(( $test)[$test]);
    }
    function test32()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test instanceof $test)[$test];
    }
    function test33()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test instanceof $test)[$test]);
    }
    function test34()
    {
        $this->assertTrue(0 === 0);
        fn() => (isset($test))[$test];
    }
    function test35()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((isset($test))[$test]);
    }
    function test36()
    {
        $this->assertTrue(0 === 0);
        fn() => (match ($test) {
        })[$test];
    }
    function test37()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((match ($test) {
        })[$test]);
    }
    function test38()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}()[$test];
    }
    function test39()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test}()[$test]);
    }
    function test40()
    {
        $this->assertTrue(0 === 0);
        fn() => (new $test())[$test];
    }
    function test41()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((new $test())[$test]);
    }
    function test42()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}()[$test];
    }
    function test43()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test}()[$test]);
    }
    function test44()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}[$test];
    }
    function test45()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test}[$test]);
    }
    function test46()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test--)[$test];
    }
    function test47()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test--)[$test]);
    }
    function test48()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test++)[$test];
    }
    function test49()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test++)[$test]);
    }
    function test50()
    {
        $this->assertTrue(0 === 0);
        fn() => (--$test)[$test];
    }
    function test51()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((--$test)[$test]);
    }
    function test52()
    {
        $this->assertTrue(0 === 0);
        fn() => (++$test)[$test];
    }
    function test53()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((++$test)[$test]);
    }
    function test54()
    {
        $this->assertTrue(0 === 0);
        fn() => (print $test)[$test];
    }
    function test55()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((print $test)[$test]);
    }
    function test56()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}[$test];
    }
    function test57()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test}[$test]);
    }
    function test58()
    {
        $this->assertTrue(0 === 0);
        fn() => (``)[$test];
    }
    function test59()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((``)[$test]);
    }
    function test60()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test()[$test];
    }
    function test61()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::$test()[$test]);
    }
    function test62()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test}[$test];
    }
    function test63()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test}[$test]);
    }
    function test64()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ? $test : $test)[$test];
    }
    function test65()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test ? $test : $test)[$test]);
    }
    function test66()
    {
        $this->assertTrue(0 === 0);
        fn() => (throw $test)[$test];
    }
    function test67()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((throw $test)[$test]);
    }
    function test68()
    {
        $this->assertTrue(0 === 0);
        fn() => (-$test)[$test];
    }
    function test69()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((-$test)[$test]);
    }
    function test70()
    {
        $this->assertTrue(0 === 0);
        fn() => (+$test)[$test];
    }
    function test71()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((+$test)[$test]);
    }
    function test72()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test}[$test];
    }
    function test73()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test}[$test]);
    }
    function test74()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield from $test)[$test];
    }
    function test75()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((yield from $test)[$test]);
    }
    function test76()
    {
        $this->assertTrue(0 === 0);
        fn() => ((yield $test => $test))[$test];
    }
    function test77()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(((yield $test => $test))[$test]);
    }
    function test78()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test &= $test)[$test];
    }
    function test79()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test &= $test)[$test]);
    }
    function test80()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test |= $test)[$test];
    }
    function test81()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test |= $test)[$test]);
    }
    function test82()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^= $test)[$test];
    }
    function test83()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test ^= $test)[$test]);
    }
    function test84()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ??= $test)[$test];
    }
    function test85()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test ??= $test)[$test]);
    }
    function test86()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test .= $test)[$test];
    }
    function test87()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test .= $test)[$test]);
    }
    function test88()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test /= $test)[$test];
    }
    function test89()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test /= $test)[$test]);
    }
    function test90()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test -= $test)[$test];
    }
    function test91()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test -= $test)[$test]);
    }
    function test92()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test %= $test)[$test];
    }
    function test93()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test %= $test)[$test]);
    }
    function test94()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test *= $test)[$test];
    }
    function test95()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test *= $test)[$test]);
    }
    function test96()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test += $test)[$test];
    }
    function test97()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test += $test)[$test]);
    }
    function test98()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test **= $test)[$test];
    }
    function test99()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test **= $test)[$test]);
    }
    function test100()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <<= $test)[$test];
    }
    function test101()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test <<= $test)[$test]);
    }
    function test102()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >>= $test)[$test];
    }
    function test103()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test >>= $test)[$test]);
    }
    function test104()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test & $test)[$test];
    }
    function test105()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test & $test)[$test]);
    }
    function test106()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test | $test)[$test];
    }
    function test107()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test | $test)[$test]);
    }
    function test108()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^ $test)[$test];
    }
    function test109()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test ^ $test)[$test]);
    }
    function test110()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test && $test)[$test];
    }
    function test111()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test && $test)[$test]);
    }
    function test112()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test || $test)[$test];
    }
    function test113()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test || $test)[$test]);
    }
    function test114()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ?? $test)[$test];
    }
    function test115()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test ?? $test)[$test]);
    }
    function test116()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test . $test)[$test];
    }
    function test117()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test . $test)[$test]);
    }
    function test118()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test / $test)[$test];
    }
    function test119()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test / $test)[$test]);
    }
    function test120()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test == $test)[$test];
    }
    function test121()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test == $test)[$test]);
    }
    function test122()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test > $test)[$test];
    }
    function test123()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test > $test)[$test]);
    }
    function test124()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >= $test)[$test];
    }
    function test125()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test >= $test)[$test]);
    }
    function test126()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test === $test)[$test];
    }
    function test127()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test === $test)[$test]);
    }
    function test128()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test and $test)[$test];
    }
    function test129()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test and $test)[$test]);
    }
    function test130()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test or $test)[$test];
    }
    function test131()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test or $test)[$test]);
    }
    function test132()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test xor $test)[$test];
    }
    function test133()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test xor $test)[$test]);
    }
    function test134()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test - $test)[$test];
    }
    function test135()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test - $test)[$test]);
    }
    function test136()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test % $test)[$test];
    }
    function test137()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test % $test)[$test]);
    }
    function test138()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test * $test)[$test];
    }
    function test139()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test * $test)[$test]);
    }
    function test140()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test != $test)[$test];
    }
    function test141()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test != $test)[$test]);
    }
    function test142()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test !== $test)[$test];
    }
    function test143()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test !== $test)[$test]);
    }
    function test144()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test + $test)[$test];
    }
    function test145()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test + $test)[$test]);
    }
    function test146()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ** $test)[$test];
    }
    function test147()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test ** $test)[$test]);
    }
    function test148()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test << $test)[$test];
    }
    function test149()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test << $test)[$test]);
    }
    function test150()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >> $test)[$test];
    }
    function test151()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test >> $test)[$test]);
    }
    function test152()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test < $test)[$test];
    }
    function test153()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test < $test)[$test]);
    }
    function test154()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <= $test)[$test];
    }
    function test155()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test <= $test)[$test]);
    }
    function test156()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <=> $test)[$test];
    }
    function test157()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test <=> $test)[$test]);
    }
    function test158()
    {
        $this->assertTrue(0 === 0);
        fn() => ((array) $test)[$test];
    }
    function test159()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(((array) $test)[$test]);
    }
    function test160()
    {
        $this->assertTrue(0 === 0);
        fn() => ((bool) $test)[$test];
    }
    function test161()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(((bool) $test)[$test]);
    }
    function test162()
    {
        $this->assertTrue(0 === 0);
        fn() => ((double) $test)[$test];
    }
    function test163()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(((double) $test)[$test]);
    }
    function test164()
    {
        $this->assertTrue(0 === 0);
        fn() => ((int) $test)[$test];
    }
    function test165()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(((int) $test)[$test]);
    }
    function test166()
    {
        $this->assertTrue(0 === 0);
        fn() => ((object) $test)[$test];
    }
    function test167()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(((object) $test)[$test]);
    }
    function test168()
    {
        $this->assertTrue(0 === 0);
        fn() => ((string) $test)[$test];
    }
    function test169()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(((string) $test)[$test]);
    }
    function test170()
    {
        $this->assertTrue(0 === 0);
        fn() => (0.0)[$test];
    }
    function test171()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((0.0)[$test]);
    }
    function test172()
    {
        $this->assertTrue(0 === 0);
        fn() => ("{$test}")[$test];
    }
    function test173()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(("{$test}")[$test]);
    }
    function test174()
    {
        $this->assertTrue(0 === 0);
        fn() => (0)[$test];
    }
    function test175()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((0)[$test]);
    }
    function test176()
    {
        $this->assertTrue(0 === 0);
        fn() => 'test'[$test];
    }
    function test177()
    {
        $this->assertTrue(0 === 0);
        fn() => isset('test'[$test]);
    }
    function test178()
    {
        $this->assertTrue(0 === 0);
        fn() => (__CLASS__)[$test];
    }
    function test179()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((__CLASS__)[$test]);
    }
    function test180()
    {
        $this->assertTrue(0 === 0);
        fn() => (__DIR__)[$test];
    }
    function test181()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((__DIR__)[$test]);
    }
    function test182()
    {
        $this->assertTrue(0 === 0);
        fn() => (__FILE__)[$test];
    }
    function test183()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((__FILE__)[$test]);
    }
    function test184()
    {
        $this->assertTrue(0 === 0);
        fn() => (__FUNCTION__)[$test];
    }
    function test185()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((__FUNCTION__)[$test]);
    }
    function test186()
    {
        $this->assertTrue(0 === 0);
        fn() => (__LINE__)[$test];
    }
    function test187()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((__LINE__)[$test]);
    }
    function test188()
    {
        $this->assertTrue(0 === 0);
        fn() => (__METHOD__)[$test];
    }
    function test189()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((__METHOD__)[$test]);
    }
    function test190()
    {
        $this->assertTrue(0 === 0);
        fn() => (__NAMESPACE__)[$test];
    }
    function test191()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((__NAMESPACE__)[$test]);
    }
    function test192()
    {
        $this->assertTrue(0 === 0);
        fn() => (__TRAIT__)[$test];
    }
    function test193()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((__TRAIT__)[$test]);
    }
    function test194()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test[$test]];
    }
    function test195()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test[$test]]);
    }
    function test196()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[[]];
    }
    function test197()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[[]]);
    }
    function test198()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test = $test];
    }
    function test199()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test = $test]);
    }
    function test200()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test =& $test];
    }
    function test201()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test =& $test]);
    }
    function test202()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[~$test];
    }
    function test203()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[~$test]);
    }
    function test204()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[!$test];
    }
    function test205()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[!$test]);
    }
    function test206()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test::$test];
    }
    function test207()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test::$test]);
    }
    function test208()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[clone $test];
    }
    function test209()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[clone $test]);
    }
    function test210()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[function () {
        }];
    }
    function test211()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[function () {
        }]);
    }
    function test212()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test];
    }
    function test213()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test]);
    }
    function test214()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[self];
    }
    function test215()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[self]);
    }
    function test216()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[empty($test)];
    }
    function test217()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[empty($test)]);
    }
    function test218()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[@$test];
    }
    function test219()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[@$test]);
    }
    function test220()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[eval($test)];
    }
    function test221()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[eval($test)]);
    }
    function test222()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test()];
    }
    function test223()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test()]);
    }
    function test224()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[ $test];
    }
    function test225()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[ $test]);
    }
    function test226()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test instanceof $test];
    }
    function test227()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test instanceof $test]);
    }
    function test228()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[isset($test)];
    }
    function test229()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[isset($test)]);
    }
    function test230()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[match ($test) {
        }];
    }
    function test231()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[match ($test) {
        }]);
    }
    function test232()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test->{$test}()];
    }
    function test233()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test->{$test}()]);
    }
    function test234()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[new $test()];
    }
    function test235()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[new $test()]);
    }
    function test236()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test?->{$test}()];
    }
    function test237()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test?->{$test}()]);
    }
    function test238()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test?->{$test}];
    }
    function test239()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test?->{$test}]);
    }
    function test240()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test--];
    }
    function test241()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test--]);
    }
    function test242()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test++];
    }
    function test243()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test++]);
    }
    function test244()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[--$test];
    }
    function test245()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[--$test]);
    }
    function test246()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[++$test];
    }
    function test247()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[++$test]);
    }
    function test248()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[print $test];
    }
    function test249()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[print $test]);
    }
    function test250()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test->{$test}];
    }
    function test251()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test->{$test}]);
    }
    function test252()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[``];
    }
    function test253()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[``]);
    }
    function test254()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test::$test()];
    }
    function test255()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test::$test()]);
    }
    function test256()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test::${$test}];
    }
    function test257()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test::${$test}]);
    }
    function test258()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test ? $test : $test];
    }
    function test259()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test ? $test : $test]);
    }
    function test260()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[throw $test];
    }
    function test261()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[throw $test]);
    }
    function test262()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[-$test];
    }
    function test263()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[-$test]);
    }
    function test264()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[+$test];
    }
    function test265()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[+$test]);
    }
    function test266()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[${$test}];
    }
    function test267()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[${$test}]);
    }
    function test268()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[yield from $test];
    }
    function test269()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[yield from $test]);
    }
    function test270()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[(yield $test => $test)];
    }
    function test271()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[(yield $test => $test)]);
    }
    function test272()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test &= $test];
    }
    function test273()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test &= $test]);
    }
    function test274()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test |= $test];
    }
    function test275()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test |= $test]);
    }
    function test276()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test ^= $test];
    }
    function test277()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test ^= $test]);
    }
    function test278()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test ??= $test];
    }
    function test279()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test ??= $test]);
    }
    function test280()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test .= $test];
    }
    function test281()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test .= $test]);
    }
    function test282()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test /= $test];
    }
    function test283()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test /= $test]);
    }
    function test284()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test -= $test];
    }
    function test285()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test -= $test]);
    }
    function test286()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test %= $test];
    }
    function test287()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test %= $test]);
    }
    function test288()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test *= $test];
    }
    function test289()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test *= $test]);
    }
    function test290()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test += $test];
    }
    function test291()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test += $test]);
    }
    function test292()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test **= $test];
    }
    function test293()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test **= $test]);
    }
    function test294()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test <<= $test];
    }
    function test295()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test <<= $test]);
    }
    function test296()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test >>= $test];
    }
    function test297()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test >>= $test]);
    }
    function test298()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test & $test];
    }
    function test299()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test & $test]);
    }
    function test300()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test | $test];
    }
    function test301()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test | $test]);
    }
    function test302()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test ^ $test];
    }
    function test303()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test ^ $test]);
    }
    function test304()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test && $test];
    }
    function test305()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test && $test]);
    }
    function test306()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test || $test];
    }
    function test307()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test || $test]);
    }
    function test308()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test ?? $test];
    }
    function test309()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test ?? $test]);
    }
    function test310()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test . $test];
    }
    function test311()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test . $test]);
    }
    function test312()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test / $test];
    }
    function test313()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test / $test]);
    }
    function test314()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test == $test];
    }
    function test315()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test == $test]);
    }
    function test316()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test > $test];
    }
    function test317()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test > $test]);
    }
    function test318()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test >= $test];
    }
    function test319()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test >= $test]);
    }
    function test320()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test === $test];
    }
    function test321()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test === $test]);
    }
    function test322()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test and $test];
    }
    function test323()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test and $test]);
    }
    function test324()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test or $test];
    }
    function test325()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test or $test]);
    }
    function test326()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test xor $test];
    }
    function test327()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test xor $test]);
    }
    function test328()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test - $test];
    }
    function test329()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test - $test]);
    }
    function test330()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test % $test];
    }
    function test331()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test % $test]);
    }
    function test332()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test * $test];
    }
    function test333()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test * $test]);
    }
    function test334()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test != $test];
    }
    function test335()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test != $test]);
    }
    function test336()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test !== $test];
    }
    function test337()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test !== $test]);
    }
    function test338()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test + $test];
    }
    function test339()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test + $test]);
    }
    function test340()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test ** $test];
    }
    function test341()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test ** $test]);
    }
    function test342()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test << $test];
    }
    function test343()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test << $test]);
    }
    function test344()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test >> $test];
    }
    function test345()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test >> $test]);
    }
    function test346()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test < $test];
    }
    function test347()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test < $test]);
    }
    function test348()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test <= $test];
    }
    function test349()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test <= $test]);
    }
    function test350()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test <=> $test];
    }
    function test351()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test <=> $test]);
    }
    function test352()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[(array) $test];
    }
    function test353()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[(array) $test]);
    }
    function test354()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[(bool) $test];
    }
    function test355()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[(bool) $test]);
    }
    function test356()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[(double) $test];
    }
    function test357()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[(double) $test]);
    }
    function test358()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[(int) $test];
    }
    function test359()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[(int) $test]);
    }
    function test360()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[(object) $test];
    }
    function test361()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[(object) $test]);
    }
    function test362()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[(string) $test];
    }
    function test363()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[(string) $test]);
    }
    function test364()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[0.0];
    }
    function test365()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[0.0]);
    }
    function test366()
    {
        $this->assertTrue(0 === 0);
        fn() => $test["{$test}"];
    }
    function test367()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test["{$test}"]);
    }
    function test368()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[0];
    }
    function test369()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[0]);
    }
    function test370()
    {
        $this->assertTrue(0 === 0);
        fn() => $test['test'];
    }
    function test371()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test['test']);
    }
    function test372()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[__CLASS__];
    }
    function test373()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[__CLASS__]);
    }
    function test374()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[__DIR__];
    }
    function test375()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[__DIR__]);
    }
    function test376()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[__FILE__];
    }
    function test377()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[__FILE__]);
    }
    function test378()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[__FUNCTION__];
    }
    function test379()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[__FUNCTION__]);
    }
    function test380()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[__LINE__];
    }
    function test381()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[__LINE__]);
    }
    function test382()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[__METHOD__];
    }
    function test383()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[__METHOD__]);
    }
    function test384()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[__NAMESPACE__];
    }
    function test385()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[__NAMESPACE__]);
    }
    function test386()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[__TRAIT__];
    }
    function test387()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[__TRAIT__]);
    }
    function test388()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] = $test;
    }
    function test389()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test = $test;
    }
    function test390()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test = $test;
    }
    function test391()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test = $test;
    }
    function test392()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test = $test;
    }
    function test393()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test;
    }
    function test394()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test = $test;
    }
    function test395()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} = $test;
    }
    function test396()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} = $test;
    }
    function test397()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test = $test;
    }
    function test398()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test = $test;
    }
    function test399()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test = $test;
    }
    function test400()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test = $test;
    }
    function test401()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} = $test;
    }
    function test402()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test = $test;
    }
    function test403()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test = $test;
    }
    function test404()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test = $test;
    }
    function test405()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test = $test;
    }
    function test406()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test = $test;
    }
    function test407()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test = $test;
    }
    function test408()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test = $test;
    }
    function test409()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test = $test;
    }
    function test410()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test = $test;
    }
    function test411()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test = $test;
    }
    function test412()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test = $test;
    }
    function test413()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test = $test;
    }
    function test414()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test = $test;
    }
    function test415()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test = $test;
    }
    function test416()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test = $test;
    }
    function test417()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test = $test;
    }
    function test418()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test = $test;
    }
    function test419()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test = $test;
    }
    function test420()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test = $test;
    }
    function test421()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test = $test;
    }
    function test422()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test = $test;
    }
    function test423()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test = $test;
    }
    function test424()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test = $test;
    }
    function test425()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test = $test;
    }
    function test426()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test = $test;
    }
    function test427()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test = $test;
    }
    function test428()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test = $test;
    }
    function test429()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test = $test;
    }
    function test430()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test = $test;
    }
    function test431()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test = $test;
    }
    function test432()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test[$test];
    }
    function test433()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = [];
    }
    function test434()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test = $test;
    }
    function test435()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test =& $test;
    }
    function test436()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = ~$test;
    }
    function test437()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = !$test;
    }
    function test438()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test::$test;
    }
    function test439()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = clone $test;
    }
    function test440()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = function () {
        };
    }
    function test441()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test;
    }
    function test442()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = self;
    }
    function test443()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = empty($test);
    }
    function test444()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = @$test;
    }
    function test445()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = eval($test);
    }
    function test446()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test();
    }
    function test447()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = ( $test);
    }
    function test448()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test instanceof $test;
    }
    function test449()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = isset($test);
    }
    function test450()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = match ($test) {
        };
    }
    function test451()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test->{$test}();
    }
    function test452()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = new $test();
    }
    function test453()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test?->{$test}();
    }
    function test454()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test?->{$test};
    }
    function test455()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test--;
    }
    function test456()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test++;
    }
    function test457()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = --$test;
    }
    function test458()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = ++$test;
    }
    function test459()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = (print $test);
    }
    function test460()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test->{$test};
    }
    function test461()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = ``;
    }
    function test462()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test::$test();
    }
    function test463()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test::${$test};
    }
    function test464()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test ? $test : $test;
    }
    function test465()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = throw $test;
    }
    function test466()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = -$test;
    }
    function test467()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = +$test;
    }
    function test468()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = ${$test};
    }
    function test469()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = (yield from $test);
    }
    function test470()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = (yield $test => $test);
    }
    function test471()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test &= $test;
    }
    function test472()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test |= $test;
    }
    function test473()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test ^= $test;
    }
    function test474()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test ??= $test;
    }
    function test475()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test .= $test;
    }
    function test476()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test /= $test;
    }
    function test477()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test -= $test;
    }
    function test478()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test %= $test;
    }
    function test479()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test *= $test;
    }
    function test480()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test += $test;
    }
    function test481()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test **= $test;
    }
    function test482()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test <<= $test;
    }
    function test483()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test >>= $test;
    }
    function test484()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test & $test;
    }
    function test485()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test | $test;
    }
    function test486()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test ^ $test;
    }
    function test487()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test && $test;
    }
    function test488()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test || $test;
    }
    function test489()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test ?? $test;
    }
    function test490()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test . $test;
    }
    function test491()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test / $test;
    }
    function test492()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test == $test;
    }
    function test493()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test > $test;
    }
    function test494()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test >= $test;
    }
    function test495()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test === $test;
    }
    function test496()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = ($test and $test);
    }
    function test497()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = ($test or $test);
    }
    function test498()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = ($test xor $test);
    }
    function test499()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test - $test;
    }
    function test500()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test % $test;
    }
    function test501()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test * $test;
    }
    function test502()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test != $test;
    }
    function test503()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test !== $test;
    }
    function test504()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test + $test;
    }
    function test505()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test ** $test;
    }
    function test506()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test << $test;
    }
    function test507()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test >> $test;
    }
    function test508()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test < $test;
    }
    function test509()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test <= $test;
    }
    function test510()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test <=> $test;
    }
    function test511()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = (array) $test;
    }
    function test512()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = (bool) $test;
    }
    function test513()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = (double) $test;
    }
    function test514()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = (int) $test;
    }
    function test515()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = (object) $test;
    }
    function test516()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = (string) $test;
    }
    function test517()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = 0.0;
    }
    function test518()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = "{$test}";
    }
    function test519()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = 0;
    }
    function test520()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = 'test';
    }
    function test521()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = __CLASS__;
    }
    function test522()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = __DIR__;
    }
    function test523()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = __FILE__;
    }
    function test524()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = __FUNCTION__;
    }
    function test525()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = __LINE__;
    }
    function test526()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = __METHOD__;
    }
    function test527()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = __NAMESPACE__;
    }
    function test528()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = __TRAIT__;
    }
    function test529()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] =& $test;
    }
    function test530()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test =& $test;
    }
    function test531()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test =& $test;
    }
    function test532()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test =& $test;
    }
    function test533()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test =& $test;
    }
    function test534()
    {
        $this->assertTrue(0 === 0);
        fn() => $test =& $test;
    }
    function test535()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test =& $test;
    }
    function test536()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} =& $test;
    }
    function test537()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} =& $test;
    }
    function test538()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test =& $test;
    }
    function test539()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test =& $test;
    }
    function test540()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test =& $test;
    }
    function test541()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test =& $test;
    }
    function test542()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} =& $test;
    }
    function test543()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test =& $test;
    }
    function test544()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test =& $test;
    }
    function test545()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test =& $test;
    }
    function test546()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test =& $test;
    }
    function test547()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test =& $test;
    }
    function test548()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test =& $test;
    }
    function test549()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test =& $test;
    }
    function test550()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test =& $test;
    }
    function test551()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test =& $test;
    }
    function test552()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test =& $test;
    }
    function test553()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test =& $test;
    }
    function test554()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test =& $test;
    }
    function test555()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test =& $test;
    }
    function test556()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test =& $test;
    }
    function test557()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test =& $test;
    }
    function test558()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test =& $test;
    }
    function test559()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test =& $test;
    }
    function test560()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test =& $test;
    }
    function test561()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test =& $test;
    }
    function test562()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test =& $test;
    }
    function test563()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test =& $test;
    }
    function test564()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test =& $test;
    }
    function test565()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test =& $test;
    }
    function test566()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test =& $test;
    }
    function test567()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test =& $test;
    }
    function test568()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test =& $test;
    }
    function test569()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test =& $test;
    }
    function test570()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test =& $test;
    }
    function test571()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test =& $test;
    }
    function test572()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test =& $test;
    }
    function test573()
    {
        $this->assertTrue(0 === 0);
        fn() => $test =& $test[$test];
    }
    function test574()
    {
        $this->assertTrue(0 === 0);
        fn() => $test =& $test::$test;
    }
    function test575()
    {
        $this->assertTrue(0 === 0);
        fn() => $test =& $test;
    }
    function test576()
    {
        $this->assertTrue(0 === 0);
        fn() => $test =& $test();
    }
    function test577()
    {
        $this->assertTrue(0 === 0);
        fn() => $test =& $test instanceof $test;
    }
    function test578()
    {
        $this->assertTrue(0 === 0);
        fn() => $test =& $test->{$test}();
    }
    function test579()
    {
        $this->assertTrue(0 === 0);
        fn() => $test =& $test->{$test};
    }
    function test580()
    {
        $this->assertTrue(0 === 0);
        fn() => $test =& $test::$test();
    }
    function test581()
    {
        $this->assertTrue(0 === 0);
        fn() => $test =& $test::${$test};
    }
    function test582()
    {
        $this->assertTrue(0 === 0);
        fn() => $test =& $test ? $test : $test;
    }
    function test583()
    {
        $this->assertTrue(0 === 0);
        fn() => $test =& ${$test};
    }
    function test584()
    {
        $this->assertTrue(0 === 0);
        fn() => $test =& $test & $test;
    }
    function test585()
    {
        $this->assertTrue(0 === 0);
        fn() => $test =& $test | $test;
    }
    function test586()
    {
        $this->assertTrue(0 === 0);
        fn() => $test =& $test ^ $test;
    }
    function test587()
    {
        $this->assertTrue(0 === 0);
        fn() => $test =& $test && $test;
    }
    function test588()
    {
        $this->assertTrue(0 === 0);
        fn() => $test =& $test || $test;
    }
    function test589()
    {
        $this->assertTrue(0 === 0);
        fn() => $test =& $test ?? $test;
    }
    function test590()
    {
        $this->assertTrue(0 === 0);
        fn() => $test =& $test . $test;
    }
    function test591()
    {
        $this->assertTrue(0 === 0);
        fn() => $test =& $test / $test;
    }
    function test592()
    {
        $this->assertTrue(0 === 0);
        fn() => $test =& $test == $test;
    }
    function test593()
    {
        $this->assertTrue(0 === 0);
        fn() => $test =& $test > $test;
    }
    function test594()
    {
        $this->assertTrue(0 === 0);
        fn() => $test =& $test >= $test;
    }
    function test595()
    {
        $this->assertTrue(0 === 0);
        fn() => $test =& $test === $test;
    }
    function test596()
    {
        $this->assertTrue(0 === 0);
        fn() => $test =& $test - $test;
    }
    function test597()
    {
        $this->assertTrue(0 === 0);
        fn() => $test =& $test % $test;
    }
    function test598()
    {
        $this->assertTrue(0 === 0);
        fn() => $test =& $test * $test;
    }
    function test599()
    {
        $this->assertTrue(0 === 0);
        fn() => $test =& $test != $test;
    }
    function test600()
    {
        $this->assertTrue(0 === 0);
        fn() => $test =& $test !== $test;
    }
    function test601()
    {
        $this->assertTrue(0 === 0);
        fn() => $test =& $test + $test;
    }
    function test602()
    {
        $this->assertTrue(0 === 0);
        fn() => $test =& $test ** $test;
    }
    function test603()
    {
        $this->assertTrue(0 === 0);
        fn() => $test =& $test << $test;
    }
    function test604()
    {
        $this->assertTrue(0 === 0);
        fn() => $test =& $test >> $test;
    }
    function test605()
    {
        $this->assertTrue(0 === 0);
        fn() => $test =& $test < $test;
    }
    function test606()
    {
        $this->assertTrue(0 === 0);
        fn() => $test =& $test <= $test;
    }
    function test607()
    {
        $this->assertTrue(0 === 0);
        fn() => $test =& $test <=> $test;
    }
    function test608()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test[$test];
    }
    function test609()
    {
        $this->assertTrue(0 === 0);
        fn() => ~[];
    }
    function test610()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test = $test);
    }
    function test611()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test =& $test);
    }
    function test612()
    {
        $this->assertTrue(0 === 0);
        fn() => ~~$test;
    }
    function test613()
    {
        $this->assertTrue(0 === 0);
        fn() => ~(!$test);
    }
    function test614()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test::$test;
    }
    function test615()
    {
        $this->assertTrue(0 === 0);
        fn() => ~clone $test;
    }
    function test616()
    {
        $this->assertTrue(0 === 0);
        fn() => ~function () {
        };
    }
    function test617()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test;
    }
    function test618()
    {
        $this->assertTrue(0 === 0);
        fn() => ~self;
    }
    function test619()
    {
        $this->assertTrue(0 === 0);
        fn() => ~empty($test);
    }
    function test620()
    {
        $this->assertTrue(0 === 0);
        fn() => ~@$test;
    }
    function test621()
    {
        $this->assertTrue(0 === 0);
        fn() => ~eval($test);
    }
    function test622()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test();
    }
    function test623()
    {
        $this->assertTrue(0 === 0);
        fn() => ~( $test);
    }
    function test624()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test instanceof $test);
    }
    function test625()
    {
        $this->assertTrue(0 === 0);
        fn() => ~isset($test);
    }
    function test626()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test->{$test}();
    }
    function test627()
    {
        $this->assertTrue(0 === 0);
        fn() => ~new $test();
    }
    function test628()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test?->{$test}();
    }
    function test629()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test?->{$test};
    }
    function test630()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test--;
    }
    function test631()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test++;
    }
    function test632()
    {
        $this->assertTrue(0 === 0);
        fn() => ~--$test;
    }
    function test633()
    {
        $this->assertTrue(0 === 0);
        fn() => ~++$test;
    }
    function test634()
    {
        $this->assertTrue(0 === 0);
        fn() => ~(print $test);
    }
    function test635()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test->{$test};
    }
    function test636()
    {
        $this->assertTrue(0 === 0);
        fn() => ~``;
    }
    function test637()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test::$test();
    }
    function test638()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test::${$test};
    }
    function test639()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test ? $test : $test);
    }
    function test640()
    {
        $this->assertTrue(0 === 0);
        fn() => ~-$test;
    }
    function test641()
    {
        $this->assertTrue(0 === 0);
        fn() => ~+$test;
    }
    function test642()
    {
        $this->assertTrue(0 === 0);
        fn() => ~${$test};
    }
    function test643()
    {
        $this->assertTrue(0 === 0);
        fn() => ~(yield from $test);
    }
    function test644()
    {
        $this->assertTrue(0 === 0);
        fn() => ~(yield $test => $test);
    }
    function test645()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test &= $test);
    }
    function test646()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test |= $test);
    }
    function test647()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test ^= $test);
    }
    function test648()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test ??= $test);
    }
    function test649()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test .= $test);
    }
    function test650()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test /= $test);
    }
    function test651()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test -= $test);
    }
    function test652()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test %= $test);
    }
    function test653()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test *= $test);
    }
    function test654()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test += $test);
    }
    function test655()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test **= $test);
    }
    function test656()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test <<= $test);
    }
    function test657()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test >>= $test);
    }
    function test658()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test & $test);
    }
    function test659()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test | $test);
    }
    function test660()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test ^ $test);
    }
    function test661()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test && $test);
    }
    function test662()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test || $test);
    }
    function test663()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test ?? $test);
    }
    function test664()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test . $test);
    }
    function test665()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test / $test);
    }
    function test666()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test == $test);
    }
    function test667()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test > $test);
    }
    function test668()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test >= $test);
    }
    function test669()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test === $test);
    }
    function test670()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test and $test);
    }
    function test671()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test or $test);
    }
    function test672()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test xor $test);
    }
    function test673()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test - $test);
    }
    function test674()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test % $test);
    }
    function test675()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test * $test);
    }
    function test676()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test != $test);
    }
    function test677()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test !== $test);
    }
    function test678()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test + $test);
    }
    function test679()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test ** $test;
    }
    function test680()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test << $test);
    }
    function test681()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test >> $test);
    }
    function test682()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test < $test);
    }
    function test683()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test <= $test);
    }
    function test684()
    {
        $this->assertTrue(0 === 0);
        fn() => ~($test <=> $test);
    }
    function test685()
    {
        $this->assertTrue(0 === 0);
        fn() => ~(array) $test;
    }
    function test686()
    {
        $this->assertTrue(0 === 0);
        fn() => ~(bool) $test;
    }
    function test687()
    {
        $this->assertTrue(0 === 0);
        fn() => ~(double) $test;
    }
    function test688()
    {
        $this->assertTrue(0 === 0);
        fn() => ~(int) $test;
    }
    function test689()
    {
        $this->assertTrue(0 === 0);
        fn() => ~(object) $test;
    }
    function test690()
    {
        $this->assertTrue(0 === 0);
        fn() => ~(string) $test;
    }
    function test691()
    {
        $this->assertTrue(0 === 0);
        fn() => ~0.0;
    }
    function test692()
    {
        $this->assertTrue(0 === 0);
        fn() => ~"{$test}";
    }
    function test693()
    {
        $this->assertTrue(0 === 0);
        fn() => ~0;
    }
    function test694()
    {
        $this->assertTrue(0 === 0);
        fn() => ~'test';
    }
    function test695()
    {
        $this->assertTrue(0 === 0);
        fn() => ~__CLASS__;
    }
    function test696()
    {
        $this->assertTrue(0 === 0);
        fn() => ~__DIR__;
    }
    function test697()
    {
        $this->assertTrue(0 === 0);
        fn() => ~__FILE__;
    }
    function test698()
    {
        $this->assertTrue(0 === 0);
        fn() => ~__FUNCTION__;
    }
    function test699()
    {
        $this->assertTrue(0 === 0);
        fn() => ~__LINE__;
    }
    function test700()
    {
        $this->assertTrue(0 === 0);
        fn() => ~__METHOD__;
    }
    function test701()
    {
        $this->assertTrue(0 === 0);
        fn() => ~__NAMESPACE__;
    }
    function test702()
    {
        $this->assertTrue(0 === 0);
        fn() => ~__TRAIT__;
    }
    function test703()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test[$test];
    }
    function test704()
    {
        $this->assertTrue(0 === 0);
        fn() => ![];
    }
    function test705()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test = $test);
    }
    function test706()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test =& $test);
    }
    function test707()
    {
        $this->assertTrue(0 === 0);
        fn() => !~$test;
    }
    function test708()
    {
        $this->assertTrue(0 === 0);
        fn() => !!$test;
    }
    function test709()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test::$test;
    }
    function test710()
    {
        $this->assertTrue(0 === 0);
        fn() => !clone $test;
    }
    function test711()
    {
        $this->assertTrue(0 === 0);
        fn() => !function () {
        };
    }
    function test712()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test;
    }
    function test713()
    {
        $this->assertTrue(0 === 0);
        fn() => !self;
    }
    function test714()
    {
        $this->assertTrue(0 === 0);
        fn() => !empty($test);
    }
    function test715()
    {
        $this->assertTrue(0 === 0);
        fn() => !@$test;
    }
    function test716()
    {
        $this->assertTrue(0 === 0);
        fn() => !eval($test);
    }
    function test717()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test();
    }
    function test718()
    {
        $this->assertTrue(0 === 0);
        fn() => !( $test);
    }
    function test719()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test instanceof $test;
    }
    function test720()
    {
        $this->assertTrue(0 === 0);
        fn() => !isset($test);
    }
    function test721()
    {
        $this->assertTrue(0 === 0);
        fn() => !match ($test) {
        };
    }
    function test722()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test->{$test}();
    }
    function test723()
    {
        $this->assertTrue(0 === 0);
        fn() => !new $test();
    }
    function test724()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test?->{$test}();
    }
    function test725()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test?->{$test};
    }
    function test726()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test--;
    }
    function test727()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test++;
    }
    function test728()
    {
        $this->assertTrue(0 === 0);
        fn() => !--$test;
    }
    function test729()
    {
        $this->assertTrue(0 === 0);
        fn() => !++$test;
    }
    function test730()
    {
        $this->assertTrue(0 === 0);
        fn() => !(print $test);
    }
    function test731()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test->{$test};
    }
    function test732()
    {
        $this->assertTrue(0 === 0);
        fn() => !``;
    }
    function test733()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test::$test();
    }
    function test734()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test::${$test};
    }
    function test735()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test ? $test : $test);
    }
    function test736()
    {
        $this->assertTrue(0 === 0);
        fn() => !throw $test;
    }
    function test737()
    {
        $this->assertTrue(0 === 0);
        fn() => !-$test;
    }
    function test738()
    {
        $this->assertTrue(0 === 0);
        fn() => !+$test;
    }
    function test739()
    {
        $this->assertTrue(0 === 0);
        fn() => !${$test};
    }
    function test740()
    {
        $this->assertTrue(0 === 0);
        fn() => !(yield from $test);
    }
    function test741()
    {
        $this->assertTrue(0 === 0);
        fn() => !(yield $test => $test);
    }
    function test742()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test &= $test);
    }
    function test743()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test |= $test);
    }
    function test744()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test ^= $test);
    }
    function test745()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test ??= $test);
    }
    function test746()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test .= $test);
    }
    function test747()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test /= $test);
    }
    function test748()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test -= $test);
    }
    function test749()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test %= $test);
    }
    function test750()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test *= $test);
    }
    function test751()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test += $test);
    }
    function test752()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test **= $test);
    }
    function test753()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test <<= $test);
    }
    function test754()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test >>= $test);
    }
    function test755()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test & $test);
    }
    function test756()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test | $test);
    }
    function test757()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test ^ $test);
    }
    function test758()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test && $test);
    }
    function test759()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test || $test);
    }
    function test760()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test ?? $test);
    }
    function test761()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test . $test);
    }
    function test762()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test / $test);
    }
    function test763()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test == $test);
    }
    function test764()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test > $test);
    }
    function test765()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test >= $test);
    }
    function test766()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test === $test);
    }
    function test767()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test and $test);
    }
    function test768()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test or $test);
    }
    function test769()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test xor $test);
    }
    function test770()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test - $test);
    }
    function test771()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test % $test);
    }
    function test772()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test * $test);
    }
    function test773()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test != $test);
    }
    function test774()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test !== $test);
    }
    function test775()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test + $test);
    }
    function test776()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test ** $test;
    }
    function test777()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test << $test);
    }
    function test778()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test >> $test);
    }
    function test779()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test < $test);
    }
    function test780()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test <= $test);
    }
    function test781()
    {
        $this->assertTrue(0 === 0);
        fn() => !($test <=> $test);
    }
    function test782()
    {
        $this->assertTrue(0 === 0);
        fn() => !(array) $test;
    }
    function test783()
    {
        $this->assertTrue(0 === 0);
        fn() => !(bool) $test;
    }
    function test784()
    {
        $this->assertTrue(0 === 0);
        fn() => !(double) $test;
    }
    function test785()
    {
        $this->assertTrue(0 === 0);
        fn() => !(int) $test;
    }
    function test786()
    {
        $this->assertTrue(0 === 0);
        fn() => !(object) $test;
    }
    function test787()
    {
        $this->assertTrue(0 === 0);
        fn() => !(string) $test;
    }
    function test788()
    {
        $this->assertTrue(0 === 0);
        fn() => !0.0;
    }
    function test789()
    {
        $this->assertTrue(0 === 0);
        fn() => !"{$test}";
    }
    function test790()
    {
        $this->assertTrue(0 === 0);
        fn() => !0;
    }
    function test791()
    {
        $this->assertTrue(0 === 0);
        fn() => !'test';
    }
    function test792()
    {
        $this->assertTrue(0 === 0);
        fn() => !__CLASS__;
    }
    function test793()
    {
        $this->assertTrue(0 === 0);
        fn() => !__DIR__;
    }
    function test794()
    {
        $this->assertTrue(0 === 0);
        fn() => !__FILE__;
    }
    function test795()
    {
        $this->assertTrue(0 === 0);
        fn() => !__FUNCTION__;
    }
    function test796()
    {
        $this->assertTrue(0 === 0);
        fn() => !__LINE__;
    }
    function test797()
    {
        $this->assertTrue(0 === 0);
        fn() => !__METHOD__;
    }
    function test798()
    {
        $this->assertTrue(0 === 0);
        fn() => !__NAMESPACE__;
    }
    function test799()
    {
        $this->assertTrue(0 === 0);
        fn() => !__TRAIT__;
    }
    function test800()
    {
        $this->assertTrue(0 === 0);
        fn() => self::$test;
    }
    function test801()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(self::$test);
    }
    function test802()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test]::$test;
    }
    function test803()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test]::$test);
    }
    function test804()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test = $test)::$test;
    }
    function test805()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test = $test)::$test);
    }
    function test806()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test =& $test)::$test;
    }
    function test807()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test =& $test)::$test);
    }
    function test808()
    {
        $this->assertTrue(0 === 0);
        fn() => (~$test)::$test;
    }
    function test809()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((~$test)::$test);
    }
    function test810()
    {
        $this->assertTrue(0 === 0);
        fn() => (!$test)::$test;
    }
    function test811()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((!$test)::$test);
    }
    function test812()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test::$test;
    }
    function test813()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::$test::$test);
    }
    function test814()
    {
        $this->assertTrue(0 === 0);
        fn() => (clone $test)::$test;
    }
    function test815()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((clone $test)::$test);
    }
    function test816()
    {
        $this->assertTrue(0 === 0);
        fn() => (function () {
        })::$test;
    }
    function test817()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((function () {
        })::$test);
    }
    function test818()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test)::$test;
    }
    function test819()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test)::$test);
    }
    function test820()
    {
        $this->assertTrue(0 === 0);
        fn() => self::$test;
    }
    function test821()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(self::$test);
    }
    function test822()
    {
        $this->assertTrue(0 === 0);
        fn() => (empty($test))::$test;
    }
    function test823()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((empty($test))::$test);
    }
    function test824()
    {
        $this->assertTrue(0 === 0);
        fn() => (@$test)::$test;
    }
    function test825()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((@$test)::$test);
    }
    function test826()
    {
        $this->assertTrue(0 === 0);
        fn() => (eval($test))::$test;
    }
    function test827()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((eval($test))::$test);
    }
    function test828()
    {
        $this->assertTrue(0 === 0);
        fn() => $test()::$test;
    }
    function test829()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test()::$test);
    }
    function test830()
    {
        $this->assertTrue(0 === 0);
        fn() => ( $test)::$test;
    }
    function test831()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(( $test)::$test);
    }
    function test832()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test instanceof $test)::$test;
    }
    function test833()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test instanceof $test)::$test);
    }
    function test834()
    {
        $this->assertTrue(0 === 0);
        fn() => (isset($test))::$test;
    }
    function test835()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((isset($test))::$test);
    }
    function test836()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}()::$test;
    }
    function test837()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test}()::$test);
    }
    function test838()
    {
        $this->assertTrue(0 === 0);
        fn() => (new $test())::$test;
    }
    function test839()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((new $test())::$test);
    }
    function test840()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}()::$test;
    }
    function test841()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test}()::$test);
    }
    function test842()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}::$test;
    }
    function test843()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test}::$test);
    }
    function test844()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test--)::$test;
    }
    function test845()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test--)::$test);
    }
    function test846()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test++)::$test;
    }
    function test847()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test++)::$test);
    }
    function test848()
    {
        $this->assertTrue(0 === 0);
        fn() => (--$test)::$test;
    }
    function test849()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((--$test)::$test);
    }
    function test850()
    {
        $this->assertTrue(0 === 0);
        fn() => (++$test)::$test;
    }
    function test851()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((++$test)::$test);
    }
    function test852()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}::$test;
    }
    function test853()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test}::$test);
    }
    function test854()
    {
        $this->assertTrue(0 === 0);
        fn() => (``)::$test;
    }
    function test855()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((``)::$test);
    }
    function test856()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test()::$test;
    }
    function test857()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::$test()::$test);
    }
    function test858()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test}::$test;
    }
    function test859()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test}::$test);
    }
    function test860()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ? $test : $test)::$test;
    }
    function test861()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test ? $test : $test)::$test);
    }
    function test862()
    {
        $this->assertTrue(0 === 0);
        fn() => (-$test)::$test;
    }
    function test863()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((-$test)::$test);
    }
    function test864()
    {
        $this->assertTrue(0 === 0);
        fn() => (+$test)::$test;
    }
    function test865()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((+$test)::$test);
    }
    function test866()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test}::$test;
    }
    function test867()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test}::$test);
    }
    function test868()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield from $test)::$test;
    }
    function test869()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((yield from $test)::$test);
    }
    function test870()
    {
        $this->assertTrue(0 === 0);
        fn() => ((yield $test => $test))::$test;
    }
    function test871()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(((yield $test => $test))::$test);
    }
    function test872()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test &= $test)::$test;
    }
    function test873()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test &= $test)::$test);
    }
    function test874()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test |= $test)::$test;
    }
    function test875()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test |= $test)::$test);
    }
    function test876()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^= $test)::$test;
    }
    function test877()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test ^= $test)::$test);
    }
    function test878()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ??= $test)::$test;
    }
    function test879()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test ??= $test)::$test);
    }
    function test880()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test .= $test)::$test;
    }
    function test881()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test .= $test)::$test);
    }
    function test882()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test /= $test)::$test;
    }
    function test883()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test /= $test)::$test);
    }
    function test884()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test -= $test)::$test;
    }
    function test885()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test -= $test)::$test);
    }
    function test886()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test %= $test)::$test;
    }
    function test887()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test %= $test)::$test);
    }
    function test888()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test *= $test)::$test;
    }
    function test889()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test *= $test)::$test);
    }
    function test890()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test += $test)::$test;
    }
    function test891()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test += $test)::$test);
    }
    function test892()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test **= $test)::$test;
    }
    function test893()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test **= $test)::$test);
    }
    function test894()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <<= $test)::$test;
    }
    function test895()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test <<= $test)::$test);
    }
    function test896()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >>= $test)::$test;
    }
    function test897()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test >>= $test)::$test);
    }
    function test898()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test & $test)::$test;
    }
    function test899()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test & $test)::$test);
    }
    function test900()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test | $test)::$test;
    }
    function test901()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test | $test)::$test);
    }
    function test902()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^ $test)::$test;
    }
    function test903()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test ^ $test)::$test);
    }
    function test904()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test && $test)::$test;
    }
    function test905()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test && $test)::$test);
    }
    function test906()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test || $test)::$test;
    }
    function test907()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test || $test)::$test);
    }
    function test908()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ?? $test)::$test;
    }
    function test909()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test ?? $test)::$test);
    }
    function test910()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test . $test)::$test;
    }
    function test911()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test . $test)::$test);
    }
    function test912()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test / $test)::$test;
    }
    function test913()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test / $test)::$test);
    }
    function test914()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test == $test)::$test;
    }
    function test915()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test == $test)::$test);
    }
    function test916()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test > $test)::$test;
    }
    function test917()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test > $test)::$test);
    }
    function test918()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >= $test)::$test;
    }
    function test919()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test >= $test)::$test);
    }
    function test920()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test === $test)::$test;
    }
    function test921()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test === $test)::$test);
    }
    function test922()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test and $test)::$test;
    }
    function test923()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test and $test)::$test);
    }
    function test924()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test or $test)::$test;
    }
    function test925()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test or $test)::$test);
    }
    function test926()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test xor $test)::$test;
    }
    function test927()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test xor $test)::$test);
    }
    function test928()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test - $test)::$test;
    }
    function test929()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test - $test)::$test);
    }
    function test930()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test % $test)::$test;
    }
    function test931()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test % $test)::$test);
    }
    function test932()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test * $test)::$test;
    }
    function test933()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test * $test)::$test);
    }
    function test934()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test != $test)::$test;
    }
    function test935()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test != $test)::$test);
    }
    function test936()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test !== $test)::$test;
    }
    function test937()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test !== $test)::$test);
    }
    function test938()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test + $test)::$test;
    }
    function test939()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test + $test)::$test);
    }
    function test940()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ** $test)::$test;
    }
    function test941()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test ** $test)::$test);
    }
    function test942()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test << $test)::$test;
    }
    function test943()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test << $test)::$test);
    }
    function test944()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >> $test)::$test;
    }
    function test945()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test >> $test)::$test);
    }
    function test946()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test < $test)::$test;
    }
    function test947()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test < $test)::$test);
    }
    function test948()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <= $test)::$test;
    }
    function test949()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test <= $test)::$test);
    }
    function test950()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <=> $test)::$test;
    }
    function test951()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test <=> $test)::$test);
    }
    function test952()
    {
        $this->assertTrue(0 === 0);
        fn() => ((array) $test)::$test;
    }
    function test953()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(((array) $test)::$test);
    }
    function test954()
    {
        $this->assertTrue(0 === 0);
        fn() => ((bool) $test)::$test;
    }
    function test955()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(((bool) $test)::$test);
    }
    function test956()
    {
        $this->assertTrue(0 === 0);
        fn() => ((double) $test)::$test;
    }
    function test957()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(((double) $test)::$test);
    }
    function test958()
    {
        $this->assertTrue(0 === 0);
        fn() => ((int) $test)::$test;
    }
    function test959()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(((int) $test)::$test);
    }
    function test960()
    {
        $this->assertTrue(0 === 0);
        fn() => ((object) $test)::$test;
    }
    function test961()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(((object) $test)::$test);
    }
    function test962()
    {
        $this->assertTrue(0 === 0);
        fn() => ((string) $test)::$test;
    }
    function test963()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(((string) $test)::$test);
    }
    function test964()
    {
        $this->assertTrue(0 === 0);
        fn() => ("{$test}")::$test;
    }
    function test965()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(("{$test}")::$test);
    }
    function test966()
    {
        $this->assertTrue(0 === 0);
        fn() => 'test'::$test;
    }
    function test967()
    {
        $this->assertTrue(0 === 0);
        fn() => isset('test'::$test);
    }
    function test968()
    {
        $this->assertTrue(0 === 0);
        fn() => (__CLASS__)::$test;
    }
    function test969()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((__CLASS__)::$test);
    }
    function test970()
    {
        $this->assertTrue(0 === 0);
        fn() => (__DIR__)::$test;
    }
    function test971()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((__DIR__)::$test);
    }
    function test972()
    {
        $this->assertTrue(0 === 0);
        fn() => (__FILE__)::$test;
    }
    function test973()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((__FILE__)::$test);
    }
    function test974()
    {
        $this->assertTrue(0 === 0);
        fn() => (__FUNCTION__)::$test;
    }
    function test975()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((__FUNCTION__)::$test);
    }
    function test976()
    {
        $this->assertTrue(0 === 0);
        fn() => (__METHOD__)::$test;
    }
    function test977()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((__METHOD__)::$test);
    }
    function test978()
    {
        $this->assertTrue(0 === 0);
        fn() => (__NAMESPACE__)::$test;
    }
    function test979()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((__NAMESPACE__)::$test);
    }
    function test980()
    {
        $this->assertTrue(0 === 0);
        fn() => (__TRAIT__)::$test;
    }
    function test981()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((__TRAIT__)::$test);
    }
    function test982()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::test;
    }
    function test983()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::test;
    }
    function test984()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test[$test];
    }
    function test985()
    {
        $this->assertTrue(0 === 0);
        fn() => clone [];
    }
    function test986()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test = $test;
    }
    function test987()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test =& $test;
    }
    function test988()
    {
        $this->assertTrue(0 === 0);
        fn() => clone ~$test;
    }
    function test989()
    {
        $this->assertTrue(0 === 0);
        fn() => clone !$test;
    }
    function test990()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test::$test;
    }
    function test991()
    {
        $this->assertTrue(0 === 0);
        fn() => clone clone $test;
    }
    function test992()
    {
        $this->assertTrue(0 === 0);
        fn() => clone function () {
        };
    }
    function test993()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test;
    }
    function test994()
    {
        $this->assertTrue(0 === 0);
        fn() => clone self;
    }
    function test995()
    {
        $this->assertTrue(0 === 0);
        fn() => clone empty($test);
    }
    function test996()
    {
        $this->assertTrue(0 === 0);
        fn() => clone @$test;
    }
    function test997()
    {
        $this->assertTrue(0 === 0);
        fn() => clone eval($test);
    }
    function test998()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test();
    }
    function test999()
    {
        $this->assertTrue(0 === 0);
        fn() => clone  $test;
    }
    function test1000()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test instanceof $test;
    }
    function test1001()
    {
        $this->assertTrue(0 === 0);
        fn() => clone isset($test);
    }
    function test1002()
    {
        $this->assertTrue(0 === 0);
        fn() => clone match ($test) {
        };
    }
    function test1003()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test->{$test}();
    }
    function test1004()
    {
        $this->assertTrue(0 === 0);
        fn() => clone new $test();
    }
    function test1005()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test?->{$test}();
    }
    function test1006()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test?->{$test};
    }
    function test1007()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test--;
    }
    function test1008()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test++;
    }
    function test1009()
    {
        $this->assertTrue(0 === 0);
        fn() => clone --$test;
    }
    function test1010()
    {
        $this->assertTrue(0 === 0);
        fn() => clone ++$test;
    }
    function test1011()
    {
        $this->assertTrue(0 === 0);
        fn() => clone print $test;
    }
    function test1012()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test->{$test};
    }
    function test1013()
    {
        $this->assertTrue(0 === 0);
        fn() => clone ``;
    }
    function test1014()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test::$test();
    }
    function test1015()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test::${$test};
    }
    function test1016()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test ? $test : $test;
    }
    function test1017()
    {
        $this->assertTrue(0 === 0);
        fn() => clone throw $test;
    }
    function test1018()
    {
        $this->assertTrue(0 === 0);
        fn() => clone -$test;
    }
    function test1019()
    {
        $this->assertTrue(0 === 0);
        fn() => clone +$test;
    }
    function test1020()
    {
        $this->assertTrue(0 === 0);
        fn() => clone ${$test};
    }
    function test1021()
    {
        $this->assertTrue(0 === 0);
        fn() => clone yield from $test;
    }
    function test1022()
    {
        $this->assertTrue(0 === 0);
        fn() => clone (yield $test => $test);
    }
    function test1023()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test &= $test;
    }
    function test1024()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test |= $test;
    }
    function test1025()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test ^= $test;
    }
    function test1026()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test ??= $test;
    }
    function test1027()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test .= $test;
    }
    function test1028()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test /= $test;
    }
    function test1029()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test -= $test;
    }
    function test1030()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test %= $test;
    }
    function test1031()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test *= $test;
    }
    function test1032()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test += $test;
    }
    function test1033()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test **= $test;
    }
    function test1034()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test <<= $test;
    }
    function test1035()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test >>= $test;
    }
    function test1036()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test & $test;
    }
    function test1037()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test | $test;
    }
    function test1038()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test ^ $test;
    }
    function test1039()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test && $test;
    }
    function test1040()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test || $test;
    }
    function test1041()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test ?? $test;
    }
    function test1042()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test . $test;
    }
    function test1043()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test / $test;
    }
    function test1044()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test == $test;
    }
    function test1045()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test > $test;
    }
    function test1046()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test >= $test;
    }
    function test1047()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test === $test;
    }
    function test1048()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test and $test;
    }
    function test1049()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test or $test;
    }
    function test1050()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test xor $test;
    }
    function test1051()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test - $test;
    }
    function test1052()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test % $test;
    }
    function test1053()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test * $test;
    }
    function test1054()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test != $test;
    }
    function test1055()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test !== $test;
    }
    function test1056()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test + $test;
    }
    function test1057()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test ** $test;
    }
    function test1058()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test << $test;
    }
    function test1059()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test >> $test;
    }
    function test1060()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test < $test;
    }
    function test1061()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test <= $test;
    }
    function test1062()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test <=> $test;
    }
    function test1063()
    {
        $this->assertTrue(0 === 0);
        fn() => clone (array) $test;
    }
    function test1064()
    {
        $this->assertTrue(0 === 0);
        fn() => clone (bool) $test;
    }
    function test1065()
    {
        $this->assertTrue(0 === 0);
        fn() => clone (double) $test;
    }
    function test1066()
    {
        $this->assertTrue(0 === 0);
        fn() => clone (int) $test;
    }
    function test1067()
    {
        $this->assertTrue(0 === 0);
        fn() => clone (object) $test;
    }
    function test1068()
    {
        $this->assertTrue(0 === 0);
        fn() => clone (string) $test;
    }
    function test1069()
    {
        $this->assertTrue(0 === 0);
        fn() => clone 0.0;
    }
    function test1070()
    {
        $this->assertTrue(0 === 0);
        fn() => clone "{$test}";
    }
    function test1071()
    {
        $this->assertTrue(0 === 0);
        fn() => clone 0;
    }
    function test1072()
    {
        $this->assertTrue(0 === 0);
        fn() => clone 'test';
    }
    function test1073()
    {
        $this->assertTrue(0 === 0);
        fn() => clone __CLASS__;
    }
    function test1074()
    {
        $this->assertTrue(0 === 0);
        fn() => clone __DIR__;
    }
    function test1075()
    {
        $this->assertTrue(0 === 0);
        fn() => clone __FILE__;
    }
    function test1076()
    {
        $this->assertTrue(0 === 0);
        fn() => clone __FUNCTION__;
    }
    function test1077()
    {
        $this->assertTrue(0 === 0);
        fn() => clone __LINE__;
    }
    function test1078()
    {
        $this->assertTrue(0 === 0);
        fn() => clone __METHOD__;
    }
    function test1079()
    {
        $this->assertTrue(0 === 0);
        fn() => clone __NAMESPACE__;
    }
    function test1080()
    {
        $this->assertTrue(0 === 0);
        fn() => clone __TRAIT__;
    }
    function test1081()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test[$test]);
    }
    function test1082()
    {
        $this->assertTrue(0 === 0);
        fn() => empty([]);
    }
    function test1083()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test = $test);
    }
    function test1084()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test =& $test);
    }
    function test1085()
    {
        $this->assertTrue(0 === 0);
        fn() => empty(~$test);
    }
    function test1086()
    {
        $this->assertTrue(0 === 0);
        fn() => empty(!$test);
    }
    function test1087()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test::$test);
    }
    function test1088()
    {
        $this->assertTrue(0 === 0);
        fn() => empty(clone $test);
    }
    function test1089()
    {
        $this->assertTrue(0 === 0);
        fn() => empty(function () {
        });
    }
    function test1090()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test);
    }
    function test1091()
    {
        $this->assertTrue(0 === 0);
        fn() => empty(self);
    }
    function test1092()
    {
        $this->assertTrue(0 === 0);
        fn() => empty(empty($test));
    }
    function test1093()
    {
        $this->assertTrue(0 === 0);
        fn() => empty(@$test);
    }
    function test1094()
    {
        $this->assertTrue(0 === 0);
        fn() => empty(eval($test));
    }
    function test1095()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test());
    }
    function test1096()
    {
        $this->assertTrue(0 === 0);
        fn() => empty( $test);
    }
    function test1097()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test instanceof $test);
    }
    function test1098()
    {
        $this->assertTrue(0 === 0);
        fn() => empty(isset($test));
    }
    function test1099()
    {
        $this->assertTrue(0 === 0);
        fn() => empty(match ($test) {
        });
    }
    function test1100()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test->{$test}());
    }
    function test1101()
    {
        $this->assertTrue(0 === 0);
        fn() => empty(new $test());
    }
    function test1102()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test?->{$test}());
    }
    function test1103()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test?->{$test});
    }
    function test1104()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test--);
    }
    function test1105()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test++);
    }
    function test1106()
    {
        $this->assertTrue(0 === 0);
        fn() => empty(--$test);
    }
    function test1107()
    {
        $this->assertTrue(0 === 0);
        fn() => empty(++$test);
    }
    function test1108()
    {
        $this->assertTrue(0 === 0);
        fn() => empty(print $test);
    }
    function test1109()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test->{$test});
    }
    function test1110()
    {
        $this->assertTrue(0 === 0);
        fn() => empty(``);
    }
    function test1111()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test::$test());
    }
    function test1112()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test::${$test});
    }
    function test1113()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test ? $test : $test);
    }
    function test1114()
    {
        $this->assertTrue(0 === 0);
        fn() => empty(throw $test);
    }
    function test1115()
    {
        $this->assertTrue(0 === 0);
        fn() => empty(-$test);
    }
    function test1116()
    {
        $this->assertTrue(0 === 0);
        fn() => empty(+$test);
    }
    function test1117()
    {
        $this->assertTrue(0 === 0);
        fn() => empty(${$test});
    }
    function test1118()
    {
        $this->assertTrue(0 === 0);
        fn() => empty(yield from $test);
    }
    function test1119()
    {
        $this->assertTrue(0 === 0);
        fn() => empty((yield $test => $test));
    }
    function test1120()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test &= $test);
    }
    function test1121()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test |= $test);
    }
    function test1122()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test ^= $test);
    }
    function test1123()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test ??= $test);
    }
    function test1124()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test .= $test);
    }
    function test1125()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test /= $test);
    }
    function test1126()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test -= $test);
    }
    function test1127()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test %= $test);
    }
    function test1128()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test *= $test);
    }
    function test1129()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test += $test);
    }
    function test1130()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test **= $test);
    }
    function test1131()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test <<= $test);
    }
    function test1132()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test >>= $test);
    }
    function test1133()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test & $test);
    }
    function test1134()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test | $test);
    }
    function test1135()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test ^ $test);
    }
    function test1136()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test && $test);
    }
    function test1137()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test || $test);
    }
    function test1138()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test ?? $test);
    }
    function test1139()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test . $test);
    }
    function test1140()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test / $test);
    }
    function test1141()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test == $test);
    }
    function test1142()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test > $test);
    }
    function test1143()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test >= $test);
    }
    function test1144()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test === $test);
    }
    function test1145()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test and $test);
    }
    function test1146()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test or $test);
    }
    function test1147()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test xor $test);
    }
    function test1148()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test - $test);
    }
    function test1149()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test % $test);
    }
    function test1150()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test * $test);
    }
    function test1151()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test != $test);
    }
    function test1152()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test !== $test);
    }
    function test1153()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test + $test);
    }
    function test1154()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test ** $test);
    }
    function test1155()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test << $test);
    }
    function test1156()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test >> $test);
    }
    function test1157()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test < $test);
    }
    function test1158()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test <= $test);
    }
    function test1159()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test <=> $test);
    }
    function test1160()
    {
        $this->assertTrue(0 === 0);
        fn() => empty((array) $test);
    }
    function test1161()
    {
        $this->assertTrue(0 === 0);
        fn() => empty((bool) $test);
    }
    function test1162()
    {
        $this->assertTrue(0 === 0);
        fn() => empty((double) $test);
    }
    function test1163()
    {
        $this->assertTrue(0 === 0);
        fn() => empty((int) $test);
    }
    function test1164()
    {
        $this->assertTrue(0 === 0);
        fn() => empty((object) $test);
    }
    function test1165()
    {
        $this->assertTrue(0 === 0);
        fn() => empty((string) $test);
    }
    function test1166()
    {
        $this->assertTrue(0 === 0);
        fn() => empty(0.0);
    }
    function test1167()
    {
        $this->assertTrue(0 === 0);
        fn() => empty("{$test}");
    }
    function test1168()
    {
        $this->assertTrue(0 === 0);
        fn() => empty(0);
    }
    function test1169()
    {
        $this->assertTrue(0 === 0);
        fn() => empty('test');
    }
    function test1170()
    {
        $this->assertTrue(0 === 0);
        fn() => empty(__CLASS__);
    }
    function test1171()
    {
        $this->assertTrue(0 === 0);
        fn() => empty(__DIR__);
    }
    function test1172()
    {
        $this->assertTrue(0 === 0);
        fn() => empty(__FILE__);
    }
    function test1173()
    {
        $this->assertTrue(0 === 0);
        fn() => empty(__FUNCTION__);
    }
    function test1174()
    {
        $this->assertTrue(0 === 0);
        fn() => empty(__LINE__);
    }
    function test1175()
    {
        $this->assertTrue(0 === 0);
        fn() => empty(__METHOD__);
    }
    function test1176()
    {
        $this->assertTrue(0 === 0);
        fn() => empty(__NAMESPACE__);
    }
    function test1177()
    {
        $this->assertTrue(0 === 0);
        fn() => empty(__TRAIT__);
    }
    function test1178()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test[$test];
    }
    function test1179()
    {
        $this->assertTrue(0 === 0);
        fn() => @[];
    }
    function test1180()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test = $test);
    }
    function test1181()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test =& $test);
    }
    function test1182()
    {
        $this->assertTrue(0 === 0);
        fn() => @~$test;
    }
    function test1183()
    {
        $this->assertTrue(0 === 0);
        fn() => @(!$test);
    }
    function test1184()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test::$test;
    }
    function test1185()
    {
        $this->assertTrue(0 === 0);
        fn() => @clone $test;
    }
    function test1186()
    {
        $this->assertTrue(0 === 0);
        fn() => @function () {
        };
    }
    function test1187()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test;
    }
    function test1188()
    {
        $this->assertTrue(0 === 0);
        fn() => @self;
    }
    function test1189()
    {
        $this->assertTrue(0 === 0);
        fn() => @empty($test);
    }
    function test1190()
    {
        $this->assertTrue(0 === 0);
        fn() => @@$test;
    }
    function test1191()
    {
        $this->assertTrue(0 === 0);
        fn() => @eval($test);
    }
    function test1192()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test();
    }
    function test1193()
    {
        $this->assertTrue(0 === 0);
        fn() => @( $test);
    }
    function test1194()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test instanceof $test);
    }
    function test1195()
    {
        $this->assertTrue(0 === 0);
        fn() => @isset($test);
    }
    function test1196()
    {
        $this->assertTrue(0 === 0);
        fn() => @match ($test) {
        };
    }
    function test1197()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test->{$test}();
    }
    function test1198()
    {
        $this->assertTrue(0 === 0);
        fn() => @new $test();
    }
    function test1199()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test?->{$test}();
    }
    function test1200()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test?->{$test};
    }
    function test1201()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test--;
    }
    function test1202()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test++;
    }
    function test1203()
    {
        $this->assertTrue(0 === 0);
        fn() => @--$test;
    }
    function test1204()
    {
        $this->assertTrue(0 === 0);
        fn() => @++$test;
    }
    function test1205()
    {
        $this->assertTrue(0 === 0);
        fn() => @(print $test);
    }
    function test1206()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test->{$test};
    }
    function test1207()
    {
        $this->assertTrue(0 === 0);
        fn() => @``;
    }
    function test1208()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test::$test();
    }
    function test1209()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test::${$test};
    }
    function test1210()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test ? $test : $test);
    }
    function test1211()
    {
        $this->assertTrue(0 === 0);
        fn() => @throw $test;
    }
    function test1212()
    {
        $this->assertTrue(0 === 0);
        fn() => @-$test;
    }
    function test1213()
    {
        $this->assertTrue(0 === 0);
        fn() => @+$test;
    }
    function test1214()
    {
        $this->assertTrue(0 === 0);
        fn() => @${$test};
    }
    function test1215()
    {
        $this->assertTrue(0 === 0);
        fn() => @(yield from $test);
    }
    function test1216()
    {
        $this->assertTrue(0 === 0);
        fn() => @(yield $test => $test);
    }
    function test1217()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test &= $test);
    }
    function test1218()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test |= $test);
    }
    function test1219()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test ^= $test);
    }
    function test1220()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test ??= $test);
    }
    function test1221()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test .= $test);
    }
    function test1222()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test /= $test);
    }
    function test1223()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test -= $test);
    }
    function test1224()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test %= $test);
    }
    function test1225()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test *= $test);
    }
    function test1226()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test += $test);
    }
    function test1227()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test **= $test);
    }
    function test1228()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test <<= $test);
    }
    function test1229()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test >>= $test);
    }
    function test1230()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test & $test);
    }
    function test1231()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test | $test);
    }
    function test1232()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test ^ $test);
    }
    function test1233()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test && $test);
    }
    function test1234()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test || $test);
    }
    function test1235()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test ?? $test);
    }
    function test1236()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test . $test);
    }
    function test1237()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test / $test);
    }
    function test1238()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test == $test);
    }
    function test1239()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test > $test);
    }
    function test1240()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test >= $test);
    }
    function test1241()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test === $test);
    }
    function test1242()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test and $test);
    }
    function test1243()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test or $test);
    }
    function test1244()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test xor $test);
    }
    function test1245()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test - $test);
    }
    function test1246()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test % $test);
    }
    function test1247()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test * $test);
    }
    function test1248()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test != $test);
    }
    function test1249()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test !== $test);
    }
    function test1250()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test + $test);
    }
    function test1251()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test ** $test;
    }
    function test1252()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test << $test);
    }
    function test1253()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test >> $test);
    }
    function test1254()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test < $test);
    }
    function test1255()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test <= $test);
    }
    function test1256()
    {
        $this->assertTrue(0 === 0);
        fn() => @($test <=> $test);
    }
    function test1257()
    {
        $this->assertTrue(0 === 0);
        fn() => @(array) $test;
    }
    function test1258()
    {
        $this->assertTrue(0 === 0);
        fn() => @(bool) $test;
    }
    function test1259()
    {
        $this->assertTrue(0 === 0);
        fn() => @(double) $test;
    }
    function test1260()
    {
        $this->assertTrue(0 === 0);
        fn() => @(int) $test;
    }
    function test1261()
    {
        $this->assertTrue(0 === 0);
        fn() => @(object) $test;
    }
    function test1262()
    {
        $this->assertTrue(0 === 0);
        fn() => @(string) $test;
    }
    function test1263()
    {
        $this->assertTrue(0 === 0);
        fn() => @0.0;
    }
    function test1264()
    {
        $this->assertTrue(0 === 0);
        fn() => @"{$test}";
    }
    function test1265()
    {
        $this->assertTrue(0 === 0);
        fn() => @0;
    }
    function test1266()
    {
        $this->assertTrue(0 === 0);
        fn() => @'test';
    }
    function test1267()
    {
        $this->assertTrue(0 === 0);
        fn() => @__CLASS__;
    }
    function test1268()
    {
        $this->assertTrue(0 === 0);
        fn() => @__DIR__;
    }
    function test1269()
    {
        $this->assertTrue(0 === 0);
        fn() => @__FILE__;
    }
    function test1270()
    {
        $this->assertTrue(0 === 0);
        fn() => @__FUNCTION__;
    }
    function test1271()
    {
        $this->assertTrue(0 === 0);
        fn() => @__LINE__;
    }
    function test1272()
    {
        $this->assertTrue(0 === 0);
        fn() => @__METHOD__;
    }
    function test1273()
    {
        $this->assertTrue(0 === 0);
        fn() => @__NAMESPACE__;
    }
    function test1274()
    {
        $this->assertTrue(0 === 0);
        fn() => @__TRAIT__;
    }
    function test1275()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test[$test]);
    }
    function test1276()
    {
        $this->assertTrue(0 === 0);
        fn() => eval([]);
    }
    function test1277()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test = $test);
    }
    function test1278()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test =& $test);
    }
    function test1279()
    {
        $this->assertTrue(0 === 0);
        fn() => eval(~$test);
    }
    function test1280()
    {
        $this->assertTrue(0 === 0);
        fn() => eval(!$test);
    }
    function test1281()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test::$test);
    }
    function test1282()
    {
        $this->assertTrue(0 === 0);
        fn() => eval(clone $test);
    }
    function test1283()
    {
        $this->assertTrue(0 === 0);
        fn() => eval(function () {
        });
    }
    function test1284()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test);
    }
    function test1285()
    {
        $this->assertTrue(0 === 0);
        fn() => eval(self);
    }
    function test1286()
    {
        $this->assertTrue(0 === 0);
        fn() => eval(empty($test));
    }
    function test1287()
    {
        $this->assertTrue(0 === 0);
        fn() => eval(@$test);
    }
    function test1288()
    {
        $this->assertTrue(0 === 0);
        fn() => eval(eval($test));
    }
    function test1289()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test());
    }
    function test1290()
    {
        $this->assertTrue(0 === 0);
        fn() => eval( $test);
    }
    function test1291()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test instanceof $test);
    }
    function test1292()
    {
        $this->assertTrue(0 === 0);
        fn() => eval(isset($test));
    }
    function test1293()
    {
        $this->assertTrue(0 === 0);
        fn() => eval(match ($test) {
        });
    }
    function test1294()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test->{$test}());
    }
    function test1295()
    {
        $this->assertTrue(0 === 0);
        fn() => eval(new $test());
    }
    function test1296()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test?->{$test}());
    }
    function test1297()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test?->{$test});
    }
    function test1298()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test--);
    }
    function test1299()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test++);
    }
    function test1300()
    {
        $this->assertTrue(0 === 0);
        fn() => eval(--$test);
    }
    function test1301()
    {
        $this->assertTrue(0 === 0);
        fn() => eval(++$test);
    }
    function test1302()
    {
        $this->assertTrue(0 === 0);
        fn() => eval(print $test);
    }
    function test1303()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test->{$test});
    }
    function test1304()
    {
        $this->assertTrue(0 === 0);
        fn() => eval(``);
    }
    function test1305()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test::$test());
    }
    function test1306()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test::${$test});
    }
    function test1307()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test ? $test : $test);
    }
    function test1308()
    {
        $this->assertTrue(0 === 0);
        fn() => eval(throw $test);
    }
    function test1309()
    {
        $this->assertTrue(0 === 0);
        fn() => eval(-$test);
    }
    function test1310()
    {
        $this->assertTrue(0 === 0);
        fn() => eval(+$test);
    }
    function test1311()
    {
        $this->assertTrue(0 === 0);
        fn() => eval(${$test});
    }
    function test1312()
    {
        $this->assertTrue(0 === 0);
        fn() => eval(yield from $test);
    }
    function test1313()
    {
        $this->assertTrue(0 === 0);
        fn() => eval((yield $test => $test));
    }
    function test1314()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test &= $test);
    }
    function test1315()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test |= $test);
    }
    function test1316()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test ^= $test);
    }
    function test1317()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test ??= $test);
    }
    function test1318()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test .= $test);
    }
    function test1319()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test /= $test);
    }
    function test1320()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test -= $test);
    }
    function test1321()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test %= $test);
    }
    function test1322()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test *= $test);
    }
    function test1323()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test += $test);
    }
    function test1324()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test **= $test);
    }
    function test1325()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test <<= $test);
    }
    function test1326()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test >>= $test);
    }
    function test1327()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test & $test);
    }
    function test1328()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test | $test);
    }
    function test1329()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test ^ $test);
    }
    function test1330()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test && $test);
    }
    function test1331()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test || $test);
    }
    function test1332()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test ?? $test);
    }
    function test1333()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test . $test);
    }
    function test1334()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test / $test);
    }
    function test1335()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test == $test);
    }
    function test1336()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test > $test);
    }
    function test1337()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test >= $test);
    }
    function test1338()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test === $test);
    }
    function test1339()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test and $test);
    }
    function test1340()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test or $test);
    }
    function test1341()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test xor $test);
    }
    function test1342()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test - $test);
    }
    function test1343()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test % $test);
    }
    function test1344()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test * $test);
    }
    function test1345()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test != $test);
    }
    function test1346()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test !== $test);
    }
    function test1347()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test + $test);
    }
    function test1348()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test ** $test);
    }
    function test1349()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test << $test);
    }
    function test1350()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test >> $test);
    }
    function test1351()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test < $test);
    }
    function test1352()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test <= $test);
    }
    function test1353()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test <=> $test);
    }
    function test1354()
    {
        $this->assertTrue(0 === 0);
        fn() => eval((array) $test);
    }
    function test1355()
    {
        $this->assertTrue(0 === 0);
        fn() => eval((bool) $test);
    }
    function test1356()
    {
        $this->assertTrue(0 === 0);
        fn() => eval((double) $test);
    }
    function test1357()
    {
        $this->assertTrue(0 === 0);
        fn() => eval((int) $test);
    }
    function test1358()
    {
        $this->assertTrue(0 === 0);
        fn() => eval((object) $test);
    }
    function test1359()
    {
        $this->assertTrue(0 === 0);
        fn() => eval((string) $test);
    }
    function test1360()
    {
        $this->assertTrue(0 === 0);
        fn() => eval(0.0);
    }
    function test1361()
    {
        $this->assertTrue(0 === 0);
        fn() => eval("{$test}");
    }
    function test1362()
    {
        $this->assertTrue(0 === 0);
        fn() => eval(0);
    }
    function test1363()
    {
        $this->assertTrue(0 === 0);
        fn() => eval('test');
    }
    function test1364()
    {
        $this->assertTrue(0 === 0);
        fn() => eval(__CLASS__);
    }
    function test1365()
    {
        $this->assertTrue(0 === 0);
        fn() => eval(__DIR__);
    }
    function test1366()
    {
        $this->assertTrue(0 === 0);
        fn() => eval(__FILE__);
    }
    function test1367()
    {
        $this->assertTrue(0 === 0);
        fn() => eval(__FUNCTION__);
    }
    function test1368()
    {
        $this->assertTrue(0 === 0);
        fn() => eval(__LINE__);
    }
    function test1369()
    {
        $this->assertTrue(0 === 0);
        fn() => eval(__METHOD__);
    }
    function test1370()
    {
        $this->assertTrue(0 === 0);
        fn() => eval(__NAMESPACE__);
    }
    function test1371()
    {
        $this->assertTrue(0 === 0);
        fn() => eval(__TRAIT__);
    }
    function test1372()
    {
        $this->assertTrue(0 === 0);
        fn() => self();
    }
    function test1373()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test]();
    }
    function test1374()
    {
        $this->assertTrue(0 === 0);
        fn() => []();
    }
    function test1375()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test = $test)();
    }
    function test1376()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test =& $test)();
    }
    function test1377()
    {
        $this->assertTrue(0 === 0);
        fn() => (~$test)();
    }
    function test1378()
    {
        $this->assertTrue(0 === 0);
        fn() => (!$test)();
    }
    function test1379()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test::$test)();
    }
    function test1380()
    {
        $this->assertTrue(0 === 0);
        fn() => (clone $test)();
    }
    function test1381()
    {
        $this->assertTrue(0 === 0);
        fn() => (function () {
        })();
    }
    function test1382()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test)();
    }
    function test1383()
    {
        $this->assertTrue(0 === 0);
        fn() => (self)();
    }
    function test1384()
    {
        $this->assertTrue(0 === 0);
        fn() => (empty($test))();
    }
    function test1385()
    {
        $this->assertTrue(0 === 0);
        fn() => (@$test)();
    }
    function test1386()
    {
        $this->assertTrue(0 === 0);
        fn() => (eval($test))();
    }
    function test1387()
    {
        $this->assertTrue(0 === 0);
        fn() => $test()();
    }
    function test1388()
    {
        $this->assertTrue(0 === 0);
        fn() => ( $test)();
    }
    function test1389()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test instanceof $test)();
    }
    function test1390()
    {
        $this->assertTrue(0 === 0);
        fn() => (isset($test))();
    }
    function test1391()
    {
        $this->assertTrue(0 === 0);
        fn() => (match ($test) {
        })();
    }
    function test1392()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}()();
    }
    function test1393()
    {
        $this->assertTrue(0 === 0);
        fn() => (new $test())();
    }
    function test1394()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}()();
    }
    function test1395()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test?->{$test})();
    }
    function test1396()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test--)();
    }
    function test1397()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test++)();
    }
    function test1398()
    {
        $this->assertTrue(0 === 0);
        fn() => (--$test)();
    }
    function test1399()
    {
        $this->assertTrue(0 === 0);
        fn() => (++$test)();
    }
    function test1400()
    {
        $this->assertTrue(0 === 0);
        fn() => (print $test)();
    }
    function test1401()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test->{$test})();
    }
    function test1402()
    {
        $this->assertTrue(0 === 0);
        fn() => (``)();
    }
    function test1403()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test()();
    }
    function test1404()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test::${$test})();
    }
    function test1405()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ? $test : $test)();
    }
    function test1406()
    {
        $this->assertTrue(0 === 0);
        fn() => (throw $test)();
    }
    function test1407()
    {
        $this->assertTrue(0 === 0);
        fn() => (-$test)();
    }
    function test1408()
    {
        $this->assertTrue(0 === 0);
        fn() => (+$test)();
    }
    function test1409()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test}();
    }
    function test1410()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield from $test)();
    }
    function test1411()
    {
        $this->assertTrue(0 === 0);
        fn() => ((yield $test => $test))();
    }
    function test1412()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test &= $test)();
    }
    function test1413()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test |= $test)();
    }
    function test1414()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^= $test)();
    }
    function test1415()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ??= $test)();
    }
    function test1416()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test .= $test)();
    }
    function test1417()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test /= $test)();
    }
    function test1418()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test -= $test)();
    }
    function test1419()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test %= $test)();
    }
    function test1420()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test *= $test)();
    }
    function test1421()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test += $test)();
    }
    function test1422()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test **= $test)();
    }
    function test1423()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <<= $test)();
    }
    function test1424()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >>= $test)();
    }
    function test1425()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test & $test)();
    }
    function test1426()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test | $test)();
    }
    function test1427()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^ $test)();
    }
    function test1428()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test && $test)();
    }
    function test1429()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test || $test)();
    }
    function test1430()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ?? $test)();
    }
    function test1431()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test . $test)();
    }
    function test1432()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test / $test)();
    }
    function test1433()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test == $test)();
    }
    function test1434()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test > $test)();
    }
    function test1435()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >= $test)();
    }
    function test1436()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test === $test)();
    }
    function test1437()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test and $test)();
    }
    function test1438()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test or $test)();
    }
    function test1439()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test xor $test)();
    }
    function test1440()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test - $test)();
    }
    function test1441()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test % $test)();
    }
    function test1442()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test * $test)();
    }
    function test1443()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test != $test)();
    }
    function test1444()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test !== $test)();
    }
    function test1445()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test + $test)();
    }
    function test1446()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ** $test)();
    }
    function test1447()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test << $test)();
    }
    function test1448()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >> $test)();
    }
    function test1449()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test < $test)();
    }
    function test1450()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <= $test)();
    }
    function test1451()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <=> $test)();
    }
    function test1452()
    {
        $this->assertTrue(0 === 0);
        fn() => ((array) $test)();
    }
    function test1453()
    {
        $this->assertTrue(0 === 0);
        fn() => ((bool) $test)();
    }
    function test1454()
    {
        $this->assertTrue(0 === 0);
        fn() => ((double) $test)();
    }
    function test1455()
    {
        $this->assertTrue(0 === 0);
        fn() => ((int) $test)();
    }
    function test1456()
    {
        $this->assertTrue(0 === 0);
        fn() => ((object) $test)();
    }
    function test1457()
    {
        $this->assertTrue(0 === 0);
        fn() => ((string) $test)();
    }
    function test1458()
    {
        $this->assertTrue(0 === 0);
        fn() => (0.0)();
    }
    function test1459()
    {
        $this->assertTrue(0 === 0);
        fn() => ("{$test}")();
    }
    function test1460()
    {
        $this->assertTrue(0 === 0);
        fn() => (0)();
    }
    function test1461()
    {
        $this->assertTrue(0 === 0);
        fn() => ('test')();
    }
    function test1462()
    {
        $this->assertTrue(0 === 0);
        fn() => (__CLASS__)();
    }
    function test1463()
    {
        $this->assertTrue(0 === 0);
        fn() => (__DIR__)();
    }
    function test1464()
    {
        $this->assertTrue(0 === 0);
        fn() => (__FILE__)();
    }
    function test1465()
    {
        $this->assertTrue(0 === 0);
        fn() => (__FUNCTION__)();
    }
    function test1466()
    {
        $this->assertTrue(0 === 0);
        fn() => (__LINE__)();
    }
    function test1467()
    {
        $this->assertTrue(0 === 0);
        fn() => (__METHOD__)();
    }
    function test1468()
    {
        $this->assertTrue(0 === 0);
        fn() => (__NAMESPACE__)();
    }
    function test1469()
    {
        $this->assertTrue(0 === 0);
        fn() => (__TRAIT__)();
    }
    function test1470()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test[$test];
    }
    function test1471()
    {
        $this->assertTrue(0 === 0);
        fn() => isset( $test[$test]);
    }
    function test1472()
    {
        $this->assertTrue(0 === 0);
        fn() =>  [];
    }
    function test1473()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test = $test;
    }
    function test1474()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test =& $test;
    }
    function test1475()
    {
        $this->assertTrue(0 === 0);
        fn() =>  ~$test;
    }
    function test1476()
    {
        $this->assertTrue(0 === 0);
        fn() =>  !$test;
    }
    function test1477()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test::$test;
    }
    function test1478()
    {
        $this->assertTrue(0 === 0);
        fn() => isset( $test::$test);
    }
    function test1479()
    {
        $this->assertTrue(0 === 0);
        fn() =>  clone $test;
    }
    function test1480()
    {
        $this->assertTrue(0 === 0);
        fn() =>  function () {
        };
    }
    function test1481()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test;
    }
    function test1482()
    {
        $this->assertTrue(0 === 0);
        fn() => isset( $test);
    }
    function test1483()
    {
        $this->assertTrue(0 === 0);
        fn() =>  self;
    }
    function test1484()
    {
        $this->assertTrue(0 === 0);
        fn() =>  empty($test);
    }
    function test1485()
    {
        $this->assertTrue(0 === 0);
        fn() =>  @$test;
    }
    function test1486()
    {
        $this->assertTrue(0 === 0);
        fn() =>  eval($test);
    }
    function test1487()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test();
    }
    function test1488()
    {
        $this->assertTrue(0 === 0);
        fn() =>   $test;
    }
    function test1489()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(  $test);
    }
    function test1490()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test instanceof $test;
    }
    function test1491()
    {
        $this->assertTrue(0 === 0);
        fn() =>  isset($test);
    }
    function test1492()
    {
        $this->assertTrue(0 === 0);
        fn() =>  match ($test) {
        };
    }
    function test1493()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test->{$test}();
    }
    function test1494()
    {
        $this->assertTrue(0 === 0);
        fn() =>  new $test();
    }
    function test1495()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test?->{$test}();
    }
    function test1496()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test?->{$test};
    }
    function test1497()
    {
        $this->assertTrue(0 === 0);
        fn() => isset( $test?->{$test});
    }
    function test1498()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test--;
    }
    function test1499()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test++;
    }
    function test1500()
    {
        $this->assertTrue(0 === 0);
        fn() =>  --$test;
    }
    function test1501()
    {
        $this->assertTrue(0 === 0);
        fn() =>  ++$test;
    }
    function test1502()
    {
        $this->assertTrue(0 === 0);
        fn() =>  print $test;
    }
    function test1503()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test->{$test};
    }
    function test1504()
    {
        $this->assertTrue(0 === 0);
        fn() => isset( $test->{$test});
    }
    function test1505()
    {
        $this->assertTrue(0 === 0);
        fn() =>  ``;
    }
    function test1506()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test::$test();
    }
    function test1507()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test::${$test};
    }
    function test1508()
    {
        $this->assertTrue(0 === 0);
        fn() => isset( $test::${$test});
    }
    function test1509()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test ? $test : $test;
    }
    function test1510()
    {
        $this->assertTrue(0 === 0);
        fn() =>  throw $test;
    }
    function test1511()
    {
        $this->assertTrue(0 === 0);
        fn() =>  -$test;
    }
    function test1512()
    {
        $this->assertTrue(0 === 0);
        fn() =>  +$test;
    }
    function test1513()
    {
        $this->assertTrue(0 === 0);
        fn() =>  ${$test};
    }
    function test1514()
    {
        $this->assertTrue(0 === 0);
        fn() => isset( ${$test});
    }
    function test1515()
    {
        $this->assertTrue(0 === 0);
        fn() =>  yield from $test;
    }
    function test1516()
    {
        $this->assertTrue(0 === 0);
        fn() =>  (yield $test => $test);
    }
    function test1517()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test &= $test;
    }
    function test1518()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test |= $test;
    }
    function test1519()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test ^= $test;
    }
    function test1520()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test ??= $test;
    }
    function test1521()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test .= $test;
    }
    function test1522()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test /= $test;
    }
    function test1523()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test -= $test;
    }
    function test1524()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test %= $test;
    }
    function test1525()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test *= $test;
    }
    function test1526()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test += $test;
    }
    function test1527()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test **= $test;
    }
    function test1528()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test <<= $test;
    }
    function test1529()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test >>= $test;
    }
    function test1530()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test & $test;
    }
    function test1531()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test | $test;
    }
    function test1532()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test ^ $test;
    }
    function test1533()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test && $test;
    }
    function test1534()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test || $test;
    }
    function test1535()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test ?? $test;
    }
    function test1536()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test . $test;
    }
    function test1537()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test / $test;
    }
    function test1538()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test == $test;
    }
    function test1539()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test > $test;
    }
    function test1540()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test >= $test;
    }
    function test1541()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test === $test;
    }
    function test1542()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test and $test;
    }
    function test1543()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test or $test;
    }
    function test1544()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test xor $test;
    }
    function test1545()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test - $test;
    }
    function test1546()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test % $test;
    }
    function test1547()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test * $test;
    }
    function test1548()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test != $test;
    }
    function test1549()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test !== $test;
    }
    function test1550()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test + $test;
    }
    function test1551()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test ** $test;
    }
    function test1552()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test << $test;
    }
    function test1553()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test >> $test;
    }
    function test1554()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test < $test;
    }
    function test1555()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test <= $test;
    }
    function test1556()
    {
        $this->assertTrue(0 === 0);
        fn() =>  $test <=> $test;
    }
    function test1557()
    {
        $this->assertTrue(0 === 0);
        fn() =>  (array) $test;
    }
    function test1558()
    {
        $this->assertTrue(0 === 0);
        fn() =>  (bool) $test;
    }
    function test1559()
    {
        $this->assertTrue(0 === 0);
        fn() =>  (double) $test;
    }
    function test1560()
    {
        $this->assertTrue(0 === 0);
        fn() =>  (int) $test;
    }
    function test1561()
    {
        $this->assertTrue(0 === 0);
        fn() =>  (object) $test;
    }
    function test1562()
    {
        $this->assertTrue(0 === 0);
        fn() =>  (string) $test;
    }
    function test1563()
    {
        $this->assertTrue(0 === 0);
        fn() =>  0.0;
    }
    function test1564()
    {
        $this->assertTrue(0 === 0);
        fn() =>  "{$test}";
    }
    function test1565()
    {
        $this->assertTrue(0 === 0);
        fn() =>  0;
    }
    function test1566()
    {
        $this->assertTrue(0 === 0);
        fn() =>  'test';
    }
    function test1567()
    {
        $this->assertTrue(0 === 0);
        fn() =>  __CLASS__;
    }
    function test1568()
    {
        $this->assertTrue(0 === 0);
        fn() =>  __DIR__;
    }
    function test1569()
    {
        $this->assertTrue(0 === 0);
        fn() =>  __FILE__;
    }
    function test1570()
    {
        $this->assertTrue(0 === 0);
        fn() =>  __FUNCTION__;
    }
    function test1571()
    {
        $this->assertTrue(0 === 0);
        fn() =>  __LINE__;
    }
    function test1572()
    {
        $this->assertTrue(0 === 0);
        fn() =>  __METHOD__;
    }
    function test1573()
    {
        $this->assertTrue(0 === 0);
        fn() =>  __NAMESPACE__;
    }
    function test1574()
    {
        $this->assertTrue(0 === 0);
        fn() =>  __TRAIT__;
    }
    function test1575()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] instanceof $test;
    }
    function test1576()
    {
        $this->assertTrue(0 === 0);
        fn() => [] instanceof $test;
    }
    function test1577()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test = $test) instanceof $test;
    }
    function test1578()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test =& $test) instanceof $test;
    }
    function test1579()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test instanceof $test;
    }
    function test1580()
    {
        $this->assertTrue(0 === 0);
        fn() => (!$test) instanceof $test;
    }
    function test1581()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test instanceof $test;
    }
    function test1582()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test instanceof $test;
    }
    function test1583()
    {
        $this->assertTrue(0 === 0);
        fn() => function () {
        } instanceof $test;
    }
    function test1584()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof $test;
    }
    function test1585()
    {
        $this->assertTrue(0 === 0);
        fn() => self instanceof $test;
    }
    function test1586()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test) instanceof $test;
    }
    function test1587()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test instanceof $test;
    }
    function test1588()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test) instanceof $test;
    }
    function test1589()
    {
        $this->assertTrue(0 === 0);
        fn() => $test() instanceof $test;
    }
    function test1590()
    {
        $this->assertTrue(0 === 0);
        fn() => ( $test) instanceof $test;
    }
    function test1591()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test instanceof $test) instanceof $test;
    }
    function test1592()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test) instanceof $test;
    }
    function test1593()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test) {
        } instanceof $test;
    }
    function test1594()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}() instanceof $test;
    }
    function test1595()
    {
        $this->assertTrue(0 === 0);
        fn() => new $test() instanceof $test;
    }
    function test1596()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}() instanceof $test;
    }
    function test1597()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test} instanceof $test;
    }
    function test1598()
    {
        $this->assertTrue(0 === 0);
        fn() => $test-- instanceof $test;
    }
    function test1599()
    {
        $this->assertTrue(0 === 0);
        fn() => $test++ instanceof $test;
    }
    function test1600()
    {
        $this->assertTrue(0 === 0);
        fn() => --$test instanceof $test;
    }
    function test1601()
    {
        $this->assertTrue(0 === 0);
        fn() => ++$test instanceof $test;
    }
    function test1602()
    {
        $this->assertTrue(0 === 0);
        fn() => (print $test) instanceof $test;
    }
    function test1603()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} instanceof $test;
    }
    function test1604()
    {
        $this->assertTrue(0 === 0);
        fn() => `` instanceof $test;
    }
    function test1605()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test() instanceof $test;
    }
    function test1606()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} instanceof $test;
    }
    function test1607()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ? $test : $test) instanceof $test;
    }
    function test1608()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test instanceof $test;
    }
    function test1609()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test instanceof $test;
    }
    function test1610()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test instanceof $test;
    }
    function test1611()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} instanceof $test;
    }
    function test1612()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield from $test) instanceof $test;
    }
    function test1613()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test) instanceof $test;
    }
    function test1614()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test &= $test) instanceof $test;
    }
    function test1615()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test |= $test) instanceof $test;
    }
    function test1616()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^= $test) instanceof $test;
    }
    function test1617()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ??= $test) instanceof $test;
    }
    function test1618()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test .= $test) instanceof $test;
    }
    function test1619()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test /= $test) instanceof $test;
    }
    function test1620()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test -= $test) instanceof $test;
    }
    function test1621()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test %= $test) instanceof $test;
    }
    function test1622()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test *= $test) instanceof $test;
    }
    function test1623()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test += $test) instanceof $test;
    }
    function test1624()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test **= $test) instanceof $test;
    }
    function test1625()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <<= $test) instanceof $test;
    }
    function test1626()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >>= $test) instanceof $test;
    }
    function test1627()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test & $test) instanceof $test;
    }
    function test1628()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test | $test) instanceof $test;
    }
    function test1629()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^ $test) instanceof $test;
    }
    function test1630()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test && $test) instanceof $test;
    }
    function test1631()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test || $test) instanceof $test;
    }
    function test1632()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ?? $test) instanceof $test;
    }
    function test1633()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test . $test) instanceof $test;
    }
    function test1634()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test / $test) instanceof $test;
    }
    function test1635()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test == $test) instanceof $test;
    }
    function test1636()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test > $test) instanceof $test;
    }
    function test1637()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >= $test) instanceof $test;
    }
    function test1638()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test === $test) instanceof $test;
    }
    function test1639()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test and $test) instanceof $test;
    }
    function test1640()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test or $test) instanceof $test;
    }
    function test1641()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test xor $test) instanceof $test;
    }
    function test1642()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test - $test) instanceof $test;
    }
    function test1643()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test % $test) instanceof $test;
    }
    function test1644()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test * $test) instanceof $test;
    }
    function test1645()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test != $test) instanceof $test;
    }
    function test1646()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test !== $test) instanceof $test;
    }
    function test1647()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test + $test) instanceof $test;
    }
    function test1648()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test instanceof $test;
    }
    function test1649()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test << $test) instanceof $test;
    }
    function test1650()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >> $test) instanceof $test;
    }
    function test1651()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test < $test) instanceof $test;
    }
    function test1652()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <= $test) instanceof $test;
    }
    function test1653()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <=> $test) instanceof $test;
    }
    function test1654()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test instanceof $test;
    }
    function test1655()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test instanceof $test;
    }
    function test1656()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test instanceof $test;
    }
    function test1657()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test instanceof $test;
    }
    function test1658()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test instanceof $test;
    }
    function test1659()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test instanceof $test;
    }
    function test1660()
    {
        $this->assertTrue(0 === 0);
        fn() => 0.0 instanceof $test;
    }
    function test1661()
    {
        $this->assertTrue(0 === 0);
        fn() => "{$test}" instanceof $test;
    }
    function test1662()
    {
        $this->assertTrue(0 === 0);
        fn() => 0 instanceof $test;
    }
    function test1663()
    {
        $this->assertTrue(0 === 0);
        fn() => 'test' instanceof $test;
    }
    function test1664()
    {
        $this->assertTrue(0 === 0);
        fn() => __CLASS__ instanceof $test;
    }
    function test1665()
    {
        $this->assertTrue(0 === 0);
        fn() => __DIR__ instanceof $test;
    }
    function test1666()
    {
        $this->assertTrue(0 === 0);
        fn() => __FILE__ instanceof $test;
    }
    function test1667()
    {
        $this->assertTrue(0 === 0);
        fn() => __FUNCTION__ instanceof $test;
    }
    function test1668()
    {
        $this->assertTrue(0 === 0);
        fn() => __LINE__ instanceof $test;
    }
    function test1669()
    {
        $this->assertTrue(0 === 0);
        fn() => __METHOD__ instanceof $test;
    }
    function test1670()
    {
        $this->assertTrue(0 === 0);
        fn() => __NAMESPACE__ instanceof $test;
    }
    function test1671()
    {
        $this->assertTrue(0 === 0);
        fn() => __TRAIT__ instanceof $test;
    }
    function test1672()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof self;
    }
    function test1673()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof $test[$test];
    }
    function test1674()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test = $test);
    }
    function test1675()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test =& $test);
    }
    function test1676()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof (~$test);
    }
    function test1677()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof (!$test);
    }
    function test1678()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof $test::$test;
    }
    function test1679()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof (clone $test);
    }
    function test1680()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof (function () {
        });
    }
    function test1681()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test);
    }
    function test1682()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof self;
    }
    function test1683()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof (empty($test));
    }
    function test1684()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof (@$test);
    }
    function test1685()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof (eval($test));
    }
    function test1686()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ( $test);
    }
    function test1687()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test instanceof $test);
    }
    function test1688()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof (isset($test));
    }
    function test1689()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof (new $test());
    }
    function test1690()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof $test?->{$test};
    }
    function test1691()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test--);
    }
    function test1692()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test++);
    }
    function test1693()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof (--$test);
    }
    function test1694()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof (++$test);
    }
    function test1695()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof $test->{$test};
    }
    function test1696()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof (``);
    }
    function test1697()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof $test::${$test};
    }
    function test1698()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test ? $test : $test);
    }
    function test1699()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof (-$test);
    }
    function test1700()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof (+$test);
    }
    function test1701()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ${$test};
    }
    function test1702()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof (yield from $test);
    }
    function test1703()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ((yield $test => $test));
    }
    function test1704()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test &= $test);
    }
    function test1705()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test |= $test);
    }
    function test1706()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test ^= $test);
    }
    function test1707()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test ??= $test);
    }
    function test1708()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test .= $test);
    }
    function test1709()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test /= $test);
    }
    function test1710()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test -= $test);
    }
    function test1711()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test %= $test);
    }
    function test1712()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test *= $test);
    }
    function test1713()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test += $test);
    }
    function test1714()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test **= $test);
    }
    function test1715()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test <<= $test);
    }
    function test1716()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test >>= $test);
    }
    function test1717()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test & $test);
    }
    function test1718()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test | $test);
    }
    function test1719()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test ^ $test);
    }
    function test1720()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test && $test);
    }
    function test1721()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test || $test);
    }
    function test1722()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test ?? $test);
    }
    function test1723()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test . $test);
    }
    function test1724()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test / $test);
    }
    function test1725()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test == $test);
    }
    function test1726()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test > $test);
    }
    function test1727()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test >= $test);
    }
    function test1728()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test === $test);
    }
    function test1729()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test and $test);
    }
    function test1730()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test or $test);
    }
    function test1731()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test xor $test);
    }
    function test1732()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test - $test);
    }
    function test1733()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test % $test);
    }
    function test1734()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test * $test);
    }
    function test1735()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test != $test);
    }
    function test1736()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test !== $test);
    }
    function test1737()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test + $test);
    }
    function test1738()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test ** $test);
    }
    function test1739()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test << $test);
    }
    function test1740()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test >> $test);
    }
    function test1741()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test < $test);
    }
    function test1742()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test <= $test);
    }
    function test1743()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ($test <=> $test);
    }
    function test1744()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ((array) $test);
    }
    function test1745()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ((bool) $test);
    }
    function test1746()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ((double) $test);
    }
    function test1747()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ((int) $test);
    }
    function test1748()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ((object) $test);
    }
    function test1749()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ((string) $test);
    }
    function test1750()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof ("{$test}");
    }
    function test1751()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof (__CLASS__);
    }
    function test1752()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof (__DIR__);
    }
    function test1753()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof (__FILE__);
    }
    function test1754()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof (__FUNCTION__);
    }
    function test1755()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof (__METHOD__);
    }
    function test1756()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof (__NAMESPACE__);
    }
    function test1757()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof (__TRAIT__);
    }
    function test1758()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test]);
    }
    function test1759()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::$test);
    }
    function test1760()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test);
    }
    function test1761()
    {
        $this->assertTrue(0 === 0);
        fn() => isset( $test);
    }
    function test1762()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test});
    }
    function test1763()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test});
    }
    function test1764()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test});
    }
    function test1765()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test});
    }
    function test1766()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test[$test]) {
        };
    }
    function test1767()
    {
        $this->assertTrue(0 === 0);
        fn() => match ([]) {
        };
    }
    function test1768()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test = $test) {
        };
    }
    function test1769()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test =& $test) {
        };
    }
    function test1770()
    {
        $this->assertTrue(0 === 0);
        fn() => match (~$test) {
        };
    }
    function test1771()
    {
        $this->assertTrue(0 === 0);
        fn() => match (!$test) {
        };
    }
    function test1772()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test::$test) {
        };
    }
    function test1773()
    {
        $this->assertTrue(0 === 0);
        fn() => match (clone $test) {
        };
    }
    function test1774()
    {
        $this->assertTrue(0 === 0);
        fn() => match (function () {
        }) {
        };
    }
    function test1775()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test) {
        };
    }
    function test1776()
    {
        $this->assertTrue(0 === 0);
        fn() => match (self) {
        };
    }
    function test1777()
    {
        $this->assertTrue(0 === 0);
        fn() => match (empty($test)) {
        };
    }
    function test1778()
    {
        $this->assertTrue(0 === 0);
        fn() => match (@$test) {
        };
    }
    function test1779()
    {
        $this->assertTrue(0 === 0);
        fn() => match (eval($test)) {
        };
    }
    function test1780()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test()) {
        };
    }
    function test1781()
    {
        $this->assertTrue(0 === 0);
        fn() => match ( $test) {
        };
    }
    function test1782()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test instanceof $test) {
        };
    }
    function test1783()
    {
        $this->assertTrue(0 === 0);
        fn() => match (isset($test)) {
        };
    }
    function test1784()
    {
        $this->assertTrue(0 === 0);
        fn() => match (match ($test) {
        }) {
        };
    }
    function test1785()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test->{$test}()) {
        };
    }
    function test1786()
    {
        $this->assertTrue(0 === 0);
        fn() => match (new $test()) {
        };
    }
    function test1787()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test?->{$test}()) {
        };
    }
    function test1788()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test?->{$test}) {
        };
    }
    function test1789()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test--) {
        };
    }
    function test1790()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test++) {
        };
    }
    function test1791()
    {
        $this->assertTrue(0 === 0);
        fn() => match (--$test) {
        };
    }
    function test1792()
    {
        $this->assertTrue(0 === 0);
        fn() => match (++$test) {
        };
    }
    function test1793()
    {
        $this->assertTrue(0 === 0);
        fn() => match (print $test) {
        };
    }
    function test1794()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test->{$test}) {
        };
    }
    function test1795()
    {
        $this->assertTrue(0 === 0);
        fn() => match (``) {
        };
    }
    function test1796()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test::$test()) {
        };
    }
    function test1797()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test::${$test}) {
        };
    }
    function test1798()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test ? $test : $test) {
        };
    }
    function test1799()
    {
        $this->assertTrue(0 === 0);
        fn() => match (throw $test) {
        };
    }
    function test1800()
    {
        $this->assertTrue(0 === 0);
        fn() => match (-$test) {
        };
    }
    function test1801()
    {
        $this->assertTrue(0 === 0);
        fn() => match (+$test) {
        };
    }
    function test1802()
    {
        $this->assertTrue(0 === 0);
        fn() => match (${$test}) {
        };
    }
    function test1803()
    {
        $this->assertTrue(0 === 0);
        fn() => match (yield from $test) {
        };
    }
    function test1804()
    {
        $this->assertTrue(0 === 0);
        fn() => match ((yield $test => $test)) {
        };
    }
    function test1805()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test &= $test) {
        };
    }
    function test1806()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test |= $test) {
        };
    }
    function test1807()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test ^= $test) {
        };
    }
    function test1808()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test ??= $test) {
        };
    }
    function test1809()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test .= $test) {
        };
    }
    function test1810()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test /= $test) {
        };
    }
    function test1811()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test -= $test) {
        };
    }
    function test1812()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test %= $test) {
        };
    }
    function test1813()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test *= $test) {
        };
    }
    function test1814()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test += $test) {
        };
    }
    function test1815()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test **= $test) {
        };
    }
    function test1816()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test <<= $test) {
        };
    }
    function test1817()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test >>= $test) {
        };
    }
    function test1818()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test & $test) {
        };
    }
    function test1819()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test | $test) {
        };
    }
    function test1820()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test ^ $test) {
        };
    }
    function test1821()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test && $test) {
        };
    }
    function test1822()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test || $test) {
        };
    }
    function test1823()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test ?? $test) {
        };
    }
    function test1824()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test . $test) {
        };
    }
    function test1825()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test / $test) {
        };
    }
    function test1826()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test == $test) {
        };
    }
    function test1827()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test > $test) {
        };
    }
    function test1828()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test >= $test) {
        };
    }
    function test1829()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test === $test) {
        };
    }
    function test1830()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test and $test) {
        };
    }
    function test1831()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test or $test) {
        };
    }
    function test1832()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test xor $test) {
        };
    }
    function test1833()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test - $test) {
        };
    }
    function test1834()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test % $test) {
        };
    }
    function test1835()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test * $test) {
        };
    }
    function test1836()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test != $test) {
        };
    }
    function test1837()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test !== $test) {
        };
    }
    function test1838()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test + $test) {
        };
    }
    function test1839()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test ** $test) {
        };
    }
    function test1840()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test << $test) {
        };
    }
    function test1841()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test >> $test) {
        };
    }
    function test1842()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test < $test) {
        };
    }
    function test1843()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test <= $test) {
        };
    }
    function test1844()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test <=> $test) {
        };
    }
    function test1845()
    {
        $this->assertTrue(0 === 0);
        fn() => match ((array) $test) {
        };
    }
    function test1846()
    {
        $this->assertTrue(0 === 0);
        fn() => match ((bool) $test) {
        };
    }
    function test1847()
    {
        $this->assertTrue(0 === 0);
        fn() => match ((double) $test) {
        };
    }
    function test1848()
    {
        $this->assertTrue(0 === 0);
        fn() => match ((int) $test) {
        };
    }
    function test1849()
    {
        $this->assertTrue(0 === 0);
        fn() => match ((object) $test) {
        };
    }
    function test1850()
    {
        $this->assertTrue(0 === 0);
        fn() => match ((string) $test) {
        };
    }
    function test1851()
    {
        $this->assertTrue(0 === 0);
        fn() => match (0.0) {
        };
    }
    function test1852()
    {
        $this->assertTrue(0 === 0);
        fn() => match ("{$test}") {
        };
    }
    function test1853()
    {
        $this->assertTrue(0 === 0);
        fn() => match (0) {
        };
    }
    function test1854()
    {
        $this->assertTrue(0 === 0);
        fn() => match ('test') {
        };
    }
    function test1855()
    {
        $this->assertTrue(0 === 0);
        fn() => match (__CLASS__) {
        };
    }
    function test1856()
    {
        $this->assertTrue(0 === 0);
        fn() => match (__DIR__) {
        };
    }
    function test1857()
    {
        $this->assertTrue(0 === 0);
        fn() => match (__FILE__) {
        };
    }
    function test1858()
    {
        $this->assertTrue(0 === 0);
        fn() => match (__FUNCTION__) {
        };
    }
    function test1859()
    {
        $this->assertTrue(0 === 0);
        fn() => match (__LINE__) {
        };
    }
    function test1860()
    {
        $this->assertTrue(0 === 0);
        fn() => match (__METHOD__) {
        };
    }
    function test1861()
    {
        $this->assertTrue(0 === 0);
        fn() => match (__NAMESPACE__) {
        };
    }
    function test1862()
    {
        $this->assertTrue(0 === 0);
        fn() => match (__TRAIT__) {
        };
    }
    function test1863()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test]->{$test}();
    }
    function test1864()
    {
        $this->assertTrue(0 === 0);
        fn() => []->{$test}();
    }
    function test1865()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test = $test)->{$test}();
    }
    function test1866()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test =& $test)->{$test}();
    }
    function test1867()
    {
        $this->assertTrue(0 === 0);
        fn() => (~$test)->{$test}();
    }
    function test1868()
    {
        $this->assertTrue(0 === 0);
        fn() => (!$test)->{$test}();
    }
    function test1869()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test->{$test}();
    }
    function test1870()
    {
        $this->assertTrue(0 === 0);
        fn() => (clone $test)->{$test}();
    }
    function test1871()
    {
        $this->assertTrue(0 === 0);
        fn() => (function () {
        })->{$test}();
    }
    function test1872()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test)->{$test}();
    }
    function test1873()
    {
        $this->assertTrue(0 === 0);
        fn() => self->{$test}();
    }
    function test1874()
    {
        $this->assertTrue(0 === 0);
        fn() => (empty($test))->{$test}();
    }
    function test1875()
    {
        $this->assertTrue(0 === 0);
        fn() => (@$test)->{$test}();
    }
    function test1876()
    {
        $this->assertTrue(0 === 0);
        fn() => (eval($test))->{$test}();
    }
    function test1877()
    {
        $this->assertTrue(0 === 0);
        fn() => $test()->{$test}();
    }
    function test1878()
    {
        $this->assertTrue(0 === 0);
        fn() => ( $test)->{$test}();
    }
    function test1879()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test instanceof $test)->{$test}();
    }
    function test1880()
    {
        $this->assertTrue(0 === 0);
        fn() => (isset($test))->{$test}();
    }
    function test1881()
    {
        $this->assertTrue(0 === 0);
        fn() => (match ($test) {
        })->{$test}();
    }
    function test1882()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}()->{$test}();
    }
    function test1883()
    {
        $this->assertTrue(0 === 0);
        fn() => (new $test())->{$test}();
    }
    function test1884()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}()->{$test}();
    }
    function test1885()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}->{$test}();
    }
    function test1886()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test--)->{$test}();
    }
    function test1887()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test++)->{$test}();
    }
    function test1888()
    {
        $this->assertTrue(0 === 0);
        fn() => (--$test)->{$test}();
    }
    function test1889()
    {
        $this->assertTrue(0 === 0);
        fn() => (++$test)->{$test}();
    }
    function test1890()
    {
        $this->assertTrue(0 === 0);
        fn() => (print $test)->{$test}();
    }
    function test1891()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}->{$test}();
    }
    function test1892()
    {
        $this->assertTrue(0 === 0);
        fn() => (``)->{$test}();
    }
    function test1893()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test()->{$test}();
    }
    function test1894()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test}->{$test}();
    }
    function test1895()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ? $test : $test)->{$test}();
    }
    function test1896()
    {
        $this->assertTrue(0 === 0);
        fn() => (throw $test)->{$test}();
    }
    function test1897()
    {
        $this->assertTrue(0 === 0);
        fn() => (-$test)->{$test}();
    }
    function test1898()
    {
        $this->assertTrue(0 === 0);
        fn() => (+$test)->{$test}();
    }
    function test1899()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test}->{$test}();
    }
    function test1900()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield from $test)->{$test}();
    }
    function test1901()
    {
        $this->assertTrue(0 === 0);
        fn() => ((yield $test => $test))->{$test}();
    }
    function test1902()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test &= $test)->{$test}();
    }
    function test1903()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test |= $test)->{$test}();
    }
    function test1904()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^= $test)->{$test}();
    }
    function test1905()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ??= $test)->{$test}();
    }
    function test1906()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test .= $test)->{$test}();
    }
    function test1907()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test /= $test)->{$test}();
    }
    function test1908()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test -= $test)->{$test}();
    }
    function test1909()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test %= $test)->{$test}();
    }
    function test1910()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test *= $test)->{$test}();
    }
    function test1911()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test += $test)->{$test}();
    }
    function test1912()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test **= $test)->{$test}();
    }
    function test1913()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <<= $test)->{$test}();
    }
    function test1914()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >>= $test)->{$test}();
    }
    function test1915()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test & $test)->{$test}();
    }
    function test1916()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test | $test)->{$test}();
    }
    function test1917()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^ $test)->{$test}();
    }
    function test1918()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test && $test)->{$test}();
    }
    function test1919()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test || $test)->{$test}();
    }
    function test1920()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ?? $test)->{$test}();
    }
    function test1921()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test . $test)->{$test}();
    }
    function test1922()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test / $test)->{$test}();
    }
    function test1923()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test == $test)->{$test}();
    }
    function test1924()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test > $test)->{$test}();
    }
    function test1925()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >= $test)->{$test}();
    }
    function test1926()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test === $test)->{$test}();
    }
    function test1927()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test and $test)->{$test}();
    }
    function test1928()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test or $test)->{$test}();
    }
    function test1929()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test xor $test)->{$test}();
    }
    function test1930()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test - $test)->{$test}();
    }
    function test1931()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test % $test)->{$test}();
    }
    function test1932()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test * $test)->{$test}();
    }
    function test1933()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test != $test)->{$test}();
    }
    function test1934()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test !== $test)->{$test}();
    }
    function test1935()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test + $test)->{$test}();
    }
    function test1936()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ** $test)->{$test}();
    }
    function test1937()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test << $test)->{$test}();
    }
    function test1938()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >> $test)->{$test}();
    }
    function test1939()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test < $test)->{$test}();
    }
    function test1940()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <= $test)->{$test}();
    }
    function test1941()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <=> $test)->{$test}();
    }
    function test1942()
    {
        $this->assertTrue(0 === 0);
        fn() => ((array) $test)->{$test}();
    }
    function test1943()
    {
        $this->assertTrue(0 === 0);
        fn() => ((bool) $test)->{$test}();
    }
    function test1944()
    {
        $this->assertTrue(0 === 0);
        fn() => ((double) $test)->{$test}();
    }
    function test1945()
    {
        $this->assertTrue(0 === 0);
        fn() => ((int) $test)->{$test}();
    }
    function test1946()
    {
        $this->assertTrue(0 === 0);
        fn() => ((object) $test)->{$test}();
    }
    function test1947()
    {
        $this->assertTrue(0 === 0);
        fn() => ((string) $test)->{$test}();
    }
    function test1948()
    {
        $this->assertTrue(0 === 0);
        fn() => (0.0)->{$test}();
    }
    function test1949()
    {
        $this->assertTrue(0 === 0);
        fn() => ("{$test}")->{$test}();
    }
    function test1950()
    {
        $this->assertTrue(0 === 0);
        fn() => (0)->{$test}();
    }
    function test1951()
    {
        $this->assertTrue(0 === 0);
        fn() => 'test'->{$test}();
    }
    function test1952()
    {
        $this->assertTrue(0 === 0);
        fn() => (__CLASS__)->{$test}();
    }
    function test1953()
    {
        $this->assertTrue(0 === 0);
        fn() => (__DIR__)->{$test}();
    }
    function test1954()
    {
        $this->assertTrue(0 === 0);
        fn() => (__FILE__)->{$test}();
    }
    function test1955()
    {
        $this->assertTrue(0 === 0);
        fn() => (__FUNCTION__)->{$test}();
    }
    function test1956()
    {
        $this->assertTrue(0 === 0);
        fn() => (__LINE__)->{$test}();
    }
    function test1957()
    {
        $this->assertTrue(0 === 0);
        fn() => (__METHOD__)->{$test}();
    }
    function test1958()
    {
        $this->assertTrue(0 === 0);
        fn() => (__NAMESPACE__)->{$test}();
    }
    function test1959()
    {
        $this->assertTrue(0 === 0);
        fn() => (__TRAIT__)->{$test}();
    }
    function test1960()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->test();
    }
    function test1961()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->test();
    }
    function test1962()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test[$test]}();
    }
    function test1963()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test = $test}();
    }
    function test1964()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test =& $test}();
    }
    function test1965()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{~$test}();
    }
    function test1966()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{!$test}();
    }
    function test1967()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test::$test}();
    }
    function test1968()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{clone $test}();
    }
    function test1969()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{function () {
        }}();
    }
    function test1970()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}();
    }
    function test1971()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{self}();
    }
    function test1972()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{empty($test)}();
    }
    function test1973()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{@$test}();
    }
    function test1974()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{eval($test)}();
    }
    function test1975()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test()}();
    }
    function test1976()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{ $test}();
    }
    function test1977()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test instanceof $test}();
    }
    function test1978()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{isset($test)}();
    }
    function test1979()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test->{$test}()}();
    }
    function test1980()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{new $test()}();
    }
    function test1981()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test?->{$test}()}();
    }
    function test1982()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test?->{$test}}();
    }
    function test1983()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test--}();
    }
    function test1984()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test++}();
    }
    function test1985()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{--$test}();
    }
    function test1986()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{++$test}();
    }
    function test1987()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test->{$test}}();
    }
    function test1988()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{``}();
    }
    function test1989()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test::$test()}();
    }
    function test1990()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test::${$test}}();
    }
    function test1991()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test ? $test : $test}();
    }
    function test1992()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{-$test}();
    }
    function test1993()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{+$test}();
    }
    function test1994()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{${$test}}();
    }
    function test1995()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{yield from $test}();
    }
    function test1996()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{(yield $test => $test)}();
    }
    function test1997()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test &= $test}();
    }
    function test1998()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test |= $test}();
    }
    function test1999()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test ^= $test}();
    }
    function test2000()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test ??= $test}();
    }
    function test2001()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test .= $test}();
    }
    function test2002()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test /= $test}();
    }
    function test2003()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test -= $test}();
    }
    function test2004()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test %= $test}();
    }
    function test2005()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test *= $test}();
    }
    function test2006()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test += $test}();
    }
    function test2007()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test **= $test}();
    }
    function test2008()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test <<= $test}();
    }
    function test2009()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test >>= $test}();
    }
    function test2010()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test & $test}();
    }
    function test2011()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test | $test}();
    }
    function test2012()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test ^ $test}();
    }
    function test2013()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test && $test}();
    }
    function test2014()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test || $test}();
    }
    function test2015()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test ?? $test}();
    }
    function test2016()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test . $test}();
    }
    function test2017()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test / $test}();
    }
    function test2018()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test == $test}();
    }
    function test2019()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test > $test}();
    }
    function test2020()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test >= $test}();
    }
    function test2021()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test === $test}();
    }
    function test2022()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test and $test}();
    }
    function test2023()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test or $test}();
    }
    function test2024()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test xor $test}();
    }
    function test2025()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test - $test}();
    }
    function test2026()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test % $test}();
    }
    function test2027()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test * $test}();
    }
    function test2028()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test != $test}();
    }
    function test2029()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test !== $test}();
    }
    function test2030()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test + $test}();
    }
    function test2031()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test ** $test}();
    }
    function test2032()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test << $test}();
    }
    function test2033()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test >> $test}();
    }
    function test2034()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test < $test}();
    }
    function test2035()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test <= $test}();
    }
    function test2036()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test <=> $test}();
    }
    function test2037()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{(array) $test}();
    }
    function test2038()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{(bool) $test}();
    }
    function test2039()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{(double) $test}();
    }
    function test2040()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{(int) $test}();
    }
    function test2041()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{(object) $test}();
    }
    function test2042()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{(string) $test}();
    }
    function test2043()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{"{$test}"}();
    }
    function test2044()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{'test'}();
    }
    function test2045()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{__CLASS__}();
    }
    function test2046()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{__DIR__}();
    }
    function test2047()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{__FILE__}();
    }
    function test2048()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{__FUNCTION__}();
    }
    function test2049()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{__METHOD__}();
    }
    function test2050()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{__NAMESPACE__}();
    }
    function test2051()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{__TRAIT__}();
    }
    function test2052()
    {
        $this->assertTrue(0 === 0);
        fn() => new self();
    }
    function test2053()
    {
        $this->assertTrue(0 === 0);
        fn() => new $test[$test]();
    }
    function test2054()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test = $test)();
    }
    function test2055()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test =& $test)();
    }
    function test2056()
    {
        $this->assertTrue(0 === 0);
        fn() => new (~$test)();
    }
    function test2057()
    {
        $this->assertTrue(0 === 0);
        fn() => new (!$test)();
    }
    function test2058()
    {
        $this->assertTrue(0 === 0);
        fn() => new $test::$test();
    }
    function test2059()
    {
        $this->assertTrue(0 === 0);
        fn() => new (clone $test)();
    }
    function test2060()
    {
        $this->assertTrue(0 === 0);
        fn() => new (function () {
        })();
    }
    function test2061()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test)();
    }
    function test2062()
    {
        $this->assertTrue(0 === 0);
        fn() => new self();
    }
    function test2063()
    {
        $this->assertTrue(0 === 0);
        fn() => new (empty($test))();
    }
    function test2064()
    {
        $this->assertTrue(0 === 0);
        fn() => new (@$test)();
    }
    function test2065()
    {
        $this->assertTrue(0 === 0);
        fn() => new (eval($test))();
    }
    function test2066()
    {
        $this->assertTrue(0 === 0);
        fn() => new ( $test)();
    }
    function test2067()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test instanceof $test)();
    }
    function test2068()
    {
        $this->assertTrue(0 === 0);
        fn() => new (isset($test))();
    }
    function test2069()
    {
        $this->assertTrue(0 === 0);
        fn() => new (new $test())();
    }
    function test2070()
    {
        $this->assertTrue(0 === 0);
        fn() => new $test?->{$test}();
    }
    function test2071()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test--)();
    }
    function test2072()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test++)();
    }
    function test2073()
    {
        $this->assertTrue(0 === 0);
        fn() => new (--$test)();
    }
    function test2074()
    {
        $this->assertTrue(0 === 0);
        fn() => new (++$test)();
    }
    function test2075()
    {
        $this->assertTrue(0 === 0);
        fn() => new $test->{$test}();
    }
    function test2076()
    {
        $this->assertTrue(0 === 0);
        fn() => new (``)();
    }
    function test2077()
    {
        $this->assertTrue(0 === 0);
        fn() => new $test::${$test}();
    }
    function test2078()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test ? $test : $test)();
    }
    function test2079()
    {
        $this->assertTrue(0 === 0);
        fn() => new (-$test)();
    }
    function test2080()
    {
        $this->assertTrue(0 === 0);
        fn() => new (+$test)();
    }
    function test2081()
    {
        $this->assertTrue(0 === 0);
        fn() => new ${$test}();
    }
    function test2082()
    {
        $this->assertTrue(0 === 0);
        fn() => new (yield from $test)();
    }
    function test2083()
    {
        $this->assertTrue(0 === 0);
        fn() => new ((yield $test => $test))();
    }
    function test2084()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test &= $test)();
    }
    function test2085()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test |= $test)();
    }
    function test2086()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test ^= $test)();
    }
    function test2087()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test ??= $test)();
    }
    function test2088()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test .= $test)();
    }
    function test2089()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test /= $test)();
    }
    function test2090()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test -= $test)();
    }
    function test2091()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test %= $test)();
    }
    function test2092()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test *= $test)();
    }
    function test2093()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test += $test)();
    }
    function test2094()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test **= $test)();
    }
    function test2095()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test <<= $test)();
    }
    function test2096()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test >>= $test)();
    }
    function test2097()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test & $test)();
    }
    function test2098()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test | $test)();
    }
    function test2099()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test ^ $test)();
    }
    function test2100()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test && $test)();
    }
    function test2101()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test || $test)();
    }
    function test2102()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test ?? $test)();
    }
    function test2103()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test . $test)();
    }
    function test2104()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test / $test)();
    }
    function test2105()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test == $test)();
    }
    function test2106()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test > $test)();
    }
    function test2107()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test >= $test)();
    }
    function test2108()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test === $test)();
    }
    function test2109()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test and $test)();
    }
    function test2110()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test or $test)();
    }
    function test2111()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test xor $test)();
    }
    function test2112()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test - $test)();
    }
    function test2113()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test % $test)();
    }
    function test2114()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test * $test)();
    }
    function test2115()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test != $test)();
    }
    function test2116()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test !== $test)();
    }
    function test2117()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test + $test)();
    }
    function test2118()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test ** $test)();
    }
    function test2119()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test << $test)();
    }
    function test2120()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test >> $test)();
    }
    function test2121()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test < $test)();
    }
    function test2122()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test <= $test)();
    }
    function test2123()
    {
        $this->assertTrue(0 === 0);
        fn() => new ($test <=> $test)();
    }
    function test2124()
    {
        $this->assertTrue(0 === 0);
        fn() => new ((array) $test)();
    }
    function test2125()
    {
        $this->assertTrue(0 === 0);
        fn() => new ((bool) $test)();
    }
    function test2126()
    {
        $this->assertTrue(0 === 0);
        fn() => new ((double) $test)();
    }
    function test2127()
    {
        $this->assertTrue(0 === 0);
        fn() => new ((int) $test)();
    }
    function test2128()
    {
        $this->assertTrue(0 === 0);
        fn() => new ((object) $test)();
    }
    function test2129()
    {
        $this->assertTrue(0 === 0);
        fn() => new ((string) $test)();
    }
    function test2130()
    {
        $this->assertTrue(0 === 0);
        fn() => new ("{$test}")();
    }
    function test2131()
    {
        $this->assertTrue(0 === 0);
        fn() => new (__CLASS__)();
    }
    function test2132()
    {
        $this->assertTrue(0 === 0);
        fn() => new (__DIR__)();
    }
    function test2133()
    {
        $this->assertTrue(0 === 0);
        fn() => new (__FILE__)();
    }
    function test2134()
    {
        $this->assertTrue(0 === 0);
        fn() => new (__FUNCTION__)();
    }
    function test2135()
    {
        $this->assertTrue(0 === 0);
        fn() => new (__METHOD__)();
    }
    function test2136()
    {
        $this->assertTrue(0 === 0);
        fn() => new (__NAMESPACE__)();
    }
    function test2137()
    {
        $this->assertTrue(0 === 0);
        fn() => new (__TRAIT__)();
    }
    function test2138()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test]?->{$test}();
    }
    function test2139()
    {
        $this->assertTrue(0 === 0);
        fn() => []?->{$test}();
    }
    function test2140()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test = $test)?->{$test}();
    }
    function test2141()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test =& $test)?->{$test}();
    }
    function test2142()
    {
        $this->assertTrue(0 === 0);
        fn() => (~$test)?->{$test}();
    }
    function test2143()
    {
        $this->assertTrue(0 === 0);
        fn() => (!$test)?->{$test}();
    }
    function test2144()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test?->{$test}();
    }
    function test2145()
    {
        $this->assertTrue(0 === 0);
        fn() => (clone $test)?->{$test}();
    }
    function test2146()
    {
        $this->assertTrue(0 === 0);
        fn() => (function () {
        })?->{$test}();
    }
    function test2147()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test)?->{$test}();
    }
    function test2148()
    {
        $this->assertTrue(0 === 0);
        fn() => self?->{$test}();
    }
    function test2149()
    {
        $this->assertTrue(0 === 0);
        fn() => (empty($test))?->{$test}();
    }
    function test2150()
    {
        $this->assertTrue(0 === 0);
        fn() => (@$test)?->{$test}();
    }
    function test2151()
    {
        $this->assertTrue(0 === 0);
        fn() => (eval($test))?->{$test}();
    }
    function test2152()
    {
        $this->assertTrue(0 === 0);
        fn() => $test()?->{$test}();
    }
    function test2153()
    {
        $this->assertTrue(0 === 0);
        fn() => ( $test)?->{$test}();
    }
    function test2154()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test instanceof $test)?->{$test}();
    }
    function test2155()
    {
        $this->assertTrue(0 === 0);
        fn() => (isset($test))?->{$test}();
    }
    function test2156()
    {
        $this->assertTrue(0 === 0);
        fn() => (match ($test) {
        })?->{$test}();
    }
    function test2157()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}()?->{$test}();
    }
    function test2158()
    {
        $this->assertTrue(0 === 0);
        fn() => (new $test())?->{$test}();
    }
    function test2159()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}()?->{$test}();
    }
    function test2160()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}?->{$test}();
    }
    function test2161()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test--)?->{$test}();
    }
    function test2162()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test++)?->{$test}();
    }
    function test2163()
    {
        $this->assertTrue(0 === 0);
        fn() => (--$test)?->{$test}();
    }
    function test2164()
    {
        $this->assertTrue(0 === 0);
        fn() => (++$test)?->{$test}();
    }
    function test2165()
    {
        $this->assertTrue(0 === 0);
        fn() => (print $test)?->{$test}();
    }
    function test2166()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}?->{$test}();
    }
    function test2167()
    {
        $this->assertTrue(0 === 0);
        fn() => (``)?->{$test}();
    }
    function test2168()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test()?->{$test}();
    }
    function test2169()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test}?->{$test}();
    }
    function test2170()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ? $test : $test)?->{$test}();
    }
    function test2171()
    {
        $this->assertTrue(0 === 0);
        fn() => (throw $test)?->{$test}();
    }
    function test2172()
    {
        $this->assertTrue(0 === 0);
        fn() => (-$test)?->{$test}();
    }
    function test2173()
    {
        $this->assertTrue(0 === 0);
        fn() => (+$test)?->{$test}();
    }
    function test2174()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test}?->{$test}();
    }
    function test2175()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield from $test)?->{$test}();
    }
    function test2176()
    {
        $this->assertTrue(0 === 0);
        fn() => ((yield $test => $test))?->{$test}();
    }
    function test2177()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test &= $test)?->{$test}();
    }
    function test2178()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test |= $test)?->{$test}();
    }
    function test2179()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^= $test)?->{$test}();
    }
    function test2180()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ??= $test)?->{$test}();
    }
    function test2181()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test .= $test)?->{$test}();
    }
    function test2182()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test /= $test)?->{$test}();
    }
    function test2183()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test -= $test)?->{$test}();
    }
    function test2184()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test %= $test)?->{$test}();
    }
    function test2185()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test *= $test)?->{$test}();
    }
    function test2186()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test += $test)?->{$test}();
    }
    function test2187()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test **= $test)?->{$test}();
    }
    function test2188()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <<= $test)?->{$test}();
    }
    function test2189()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >>= $test)?->{$test}();
    }
    function test2190()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test & $test)?->{$test}();
    }
    function test2191()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test | $test)?->{$test}();
    }
    function test2192()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^ $test)?->{$test}();
    }
    function test2193()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test && $test)?->{$test}();
    }
    function test2194()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test || $test)?->{$test}();
    }
    function test2195()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ?? $test)?->{$test}();
    }
    function test2196()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test . $test)?->{$test}();
    }
    function test2197()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test / $test)?->{$test}();
    }
    function test2198()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test == $test)?->{$test}();
    }
    function test2199()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test > $test)?->{$test}();
    }
    function test2200()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >= $test)?->{$test}();
    }
    function test2201()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test === $test)?->{$test}();
    }
    function test2202()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test and $test)?->{$test}();
    }
    function test2203()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test or $test)?->{$test}();
    }
    function test2204()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test xor $test)?->{$test}();
    }
    function test2205()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test - $test)?->{$test}();
    }
    function test2206()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test % $test)?->{$test}();
    }
    function test2207()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test * $test)?->{$test}();
    }
    function test2208()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test != $test)?->{$test}();
    }
    function test2209()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test !== $test)?->{$test}();
    }
    function test2210()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test + $test)?->{$test}();
    }
    function test2211()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ** $test)?->{$test}();
    }
    function test2212()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test << $test)?->{$test}();
    }
    function test2213()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >> $test)?->{$test}();
    }
    function test2214()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test < $test)?->{$test}();
    }
    function test2215()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <= $test)?->{$test}();
    }
    function test2216()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <=> $test)?->{$test}();
    }
    function test2217()
    {
        $this->assertTrue(0 === 0);
        fn() => ((array) $test)?->{$test}();
    }
    function test2218()
    {
        $this->assertTrue(0 === 0);
        fn() => ((bool) $test)?->{$test}();
    }
    function test2219()
    {
        $this->assertTrue(0 === 0);
        fn() => ((double) $test)?->{$test}();
    }
    function test2220()
    {
        $this->assertTrue(0 === 0);
        fn() => ((int) $test)?->{$test}();
    }
    function test2221()
    {
        $this->assertTrue(0 === 0);
        fn() => ((object) $test)?->{$test}();
    }
    function test2222()
    {
        $this->assertTrue(0 === 0);
        fn() => ((string) $test)?->{$test}();
    }
    function test2223()
    {
        $this->assertTrue(0 === 0);
        fn() => (0.0)?->{$test}();
    }
    function test2224()
    {
        $this->assertTrue(0 === 0);
        fn() => ("{$test}")?->{$test}();
    }
    function test2225()
    {
        $this->assertTrue(0 === 0);
        fn() => (0)?->{$test}();
    }
    function test2226()
    {
        $this->assertTrue(0 === 0);
        fn() => 'test'?->{$test}();
    }
    function test2227()
    {
        $this->assertTrue(0 === 0);
        fn() => (__CLASS__)?->{$test}();
    }
    function test2228()
    {
        $this->assertTrue(0 === 0);
        fn() => (__DIR__)?->{$test}();
    }
    function test2229()
    {
        $this->assertTrue(0 === 0);
        fn() => (__FILE__)?->{$test}();
    }
    function test2230()
    {
        $this->assertTrue(0 === 0);
        fn() => (__FUNCTION__)?->{$test}();
    }
    function test2231()
    {
        $this->assertTrue(0 === 0);
        fn() => (__LINE__)?->{$test}();
    }
    function test2232()
    {
        $this->assertTrue(0 === 0);
        fn() => (__METHOD__)?->{$test}();
    }
    function test2233()
    {
        $this->assertTrue(0 === 0);
        fn() => (__NAMESPACE__)?->{$test}();
    }
    function test2234()
    {
        $this->assertTrue(0 === 0);
        fn() => (__TRAIT__)?->{$test}();
    }
    function test2235()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->test();
    }
    function test2236()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->test();
    }
    function test2237()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test[$test]}();
    }
    function test2238()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test = $test}();
    }
    function test2239()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test =& $test}();
    }
    function test2240()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{~$test}();
    }
    function test2241()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{!$test}();
    }
    function test2242()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test::$test}();
    }
    function test2243()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{clone $test}();
    }
    function test2244()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{function () {
        }}();
    }
    function test2245()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}();
    }
    function test2246()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{self}();
    }
    function test2247()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{empty($test)}();
    }
    function test2248()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{@$test}();
    }
    function test2249()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{eval($test)}();
    }
    function test2250()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test()}();
    }
    function test2251()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{ $test}();
    }
    function test2252()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test instanceof $test}();
    }
    function test2253()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{isset($test)}();
    }
    function test2254()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test->{$test}()}();
    }
    function test2255()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{new $test()}();
    }
    function test2256()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test?->{$test}()}();
    }
    function test2257()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test?->{$test}}();
    }
    function test2258()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test--}();
    }
    function test2259()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test++}();
    }
    function test2260()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{--$test}();
    }
    function test2261()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{++$test}();
    }
    function test2262()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test->{$test}}();
    }
    function test2263()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{``}();
    }
    function test2264()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test::$test()}();
    }
    function test2265()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test::${$test}}();
    }
    function test2266()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test ? $test : $test}();
    }
    function test2267()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{-$test}();
    }
    function test2268()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{+$test}();
    }
    function test2269()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{${$test}}();
    }
    function test2270()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{yield from $test}();
    }
    function test2271()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{(yield $test => $test)}();
    }
    function test2272()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test &= $test}();
    }
    function test2273()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test |= $test}();
    }
    function test2274()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test ^= $test}();
    }
    function test2275()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test ??= $test}();
    }
    function test2276()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test .= $test}();
    }
    function test2277()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test /= $test}();
    }
    function test2278()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test -= $test}();
    }
    function test2279()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test %= $test}();
    }
    function test2280()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test *= $test}();
    }
    function test2281()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test += $test}();
    }
    function test2282()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test **= $test}();
    }
    function test2283()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test <<= $test}();
    }
    function test2284()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test >>= $test}();
    }
    function test2285()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test & $test}();
    }
    function test2286()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test | $test}();
    }
    function test2287()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test ^ $test}();
    }
    function test2288()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test && $test}();
    }
    function test2289()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test || $test}();
    }
    function test2290()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test ?? $test}();
    }
    function test2291()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test . $test}();
    }
    function test2292()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test / $test}();
    }
    function test2293()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test == $test}();
    }
    function test2294()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test > $test}();
    }
    function test2295()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test >= $test}();
    }
    function test2296()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test === $test}();
    }
    function test2297()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test and $test}();
    }
    function test2298()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test or $test}();
    }
    function test2299()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test xor $test}();
    }
    function test2300()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test - $test}();
    }
    function test2301()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test % $test}();
    }
    function test2302()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test * $test}();
    }
    function test2303()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test != $test}();
    }
    function test2304()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test !== $test}();
    }
    function test2305()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test + $test}();
    }
    function test2306()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test ** $test}();
    }
    function test2307()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test << $test}();
    }
    function test2308()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test >> $test}();
    }
    function test2309()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test < $test}();
    }
    function test2310()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test <= $test}();
    }
    function test2311()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test <=> $test}();
    }
    function test2312()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{(array) $test}();
    }
    function test2313()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{(bool) $test}();
    }
    function test2314()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{(double) $test}();
    }
    function test2315()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{(int) $test}();
    }
    function test2316()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{(object) $test}();
    }
    function test2317()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{(string) $test}();
    }
    function test2318()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{"{$test}"}();
    }
    function test2319()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{'test'}();
    }
    function test2320()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{__CLASS__}();
    }
    function test2321()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{__DIR__}();
    }
    function test2322()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{__FILE__}();
    }
    function test2323()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{__FUNCTION__}();
    }
    function test2324()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{__METHOD__}();
    }
    function test2325()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{__NAMESPACE__}();
    }
    function test2326()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{__TRAIT__}();
    }
    function test2327()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test]?->{$test};
    }
    function test2328()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test]?->{$test});
    }
    function test2329()
    {
        $this->assertTrue(0 === 0);
        fn() => []?->{$test};
    }
    function test2330()
    {
        $this->assertTrue(0 === 0);
        fn() => isset([]?->{$test});
    }
    function test2331()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test = $test)?->{$test};
    }
    function test2332()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test = $test)?->{$test});
    }
    function test2333()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test =& $test)?->{$test};
    }
    function test2334()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test =& $test)?->{$test});
    }
    function test2335()
    {
        $this->assertTrue(0 === 0);
        fn() => (~$test)?->{$test};
    }
    function test2336()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((~$test)?->{$test});
    }
    function test2337()
    {
        $this->assertTrue(0 === 0);
        fn() => (!$test)?->{$test};
    }
    function test2338()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((!$test)?->{$test});
    }
    function test2339()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test?->{$test};
    }
    function test2340()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::$test?->{$test});
    }
    function test2341()
    {
        $this->assertTrue(0 === 0);
        fn() => (clone $test)?->{$test};
    }
    function test2342()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((clone $test)?->{$test});
    }
    function test2343()
    {
        $this->assertTrue(0 === 0);
        fn() => (function () {
        })?->{$test};
    }
    function test2344()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((function () {
        })?->{$test});
    }
    function test2345()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test)?->{$test};
    }
    function test2346()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test)?->{$test});
    }
    function test2347()
    {
        $this->assertTrue(0 === 0);
        fn() => self?->{$test};
    }
    function test2348()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(self?->{$test});
    }
    function test2349()
    {
        $this->assertTrue(0 === 0);
        fn() => (empty($test))?->{$test};
    }
    function test2350()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((empty($test))?->{$test});
    }
    function test2351()
    {
        $this->assertTrue(0 === 0);
        fn() => (@$test)?->{$test};
    }
    function test2352()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((@$test)?->{$test});
    }
    function test2353()
    {
        $this->assertTrue(0 === 0);
        fn() => (eval($test))?->{$test};
    }
    function test2354()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((eval($test))?->{$test});
    }
    function test2355()
    {
        $this->assertTrue(0 === 0);
        fn() => $test()?->{$test};
    }
    function test2356()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test()?->{$test});
    }
    function test2357()
    {
        $this->assertTrue(0 === 0);
        fn() => ( $test)?->{$test};
    }
    function test2358()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(( $test)?->{$test});
    }
    function test2359()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test instanceof $test)?->{$test};
    }
    function test2360()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test instanceof $test)?->{$test});
    }
    function test2361()
    {
        $this->assertTrue(0 === 0);
        fn() => (isset($test))?->{$test};
    }
    function test2362()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((isset($test))?->{$test});
    }
    function test2363()
    {
        $this->assertTrue(0 === 0);
        fn() => (match ($test) {
        })?->{$test};
    }
    function test2364()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((match ($test) {
        })?->{$test});
    }
    function test2365()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}()?->{$test};
    }
    function test2366()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test}()?->{$test});
    }
    function test2367()
    {
        $this->assertTrue(0 === 0);
        fn() => (new $test())?->{$test};
    }
    function test2368()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((new $test())?->{$test});
    }
    function test2369()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}()?->{$test};
    }
    function test2370()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test}()?->{$test});
    }
    function test2371()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}?->{$test};
    }
    function test2372()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test}?->{$test});
    }
    function test2373()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test--)?->{$test};
    }
    function test2374()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test--)?->{$test});
    }
    function test2375()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test++)?->{$test};
    }
    function test2376()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test++)?->{$test});
    }
    function test2377()
    {
        $this->assertTrue(0 === 0);
        fn() => (--$test)?->{$test};
    }
    function test2378()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((--$test)?->{$test});
    }
    function test2379()
    {
        $this->assertTrue(0 === 0);
        fn() => (++$test)?->{$test};
    }
    function test2380()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((++$test)?->{$test});
    }
    function test2381()
    {
        $this->assertTrue(0 === 0);
        fn() => (print $test)?->{$test};
    }
    function test2382()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((print $test)?->{$test});
    }
    function test2383()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}?->{$test};
    }
    function test2384()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test}?->{$test});
    }
    function test2385()
    {
        $this->assertTrue(0 === 0);
        fn() => (``)?->{$test};
    }
    function test2386()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((``)?->{$test});
    }
    function test2387()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test()?->{$test};
    }
    function test2388()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::$test()?->{$test});
    }
    function test2389()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test}?->{$test};
    }
    function test2390()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test}?->{$test});
    }
    function test2391()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ? $test : $test)?->{$test};
    }
    function test2392()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test ? $test : $test)?->{$test});
    }
    function test2393()
    {
        $this->assertTrue(0 === 0);
        fn() => (throw $test)?->{$test};
    }
    function test2394()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((throw $test)?->{$test});
    }
    function test2395()
    {
        $this->assertTrue(0 === 0);
        fn() => (-$test)?->{$test};
    }
    function test2396()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((-$test)?->{$test});
    }
    function test2397()
    {
        $this->assertTrue(0 === 0);
        fn() => (+$test)?->{$test};
    }
    function test2398()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((+$test)?->{$test});
    }
    function test2399()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test}?->{$test};
    }
    function test2400()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test}?->{$test});
    }
    function test2401()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield from $test)?->{$test};
    }
    function test2402()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((yield from $test)?->{$test});
    }
    function test2403()
    {
        $this->assertTrue(0 === 0);
        fn() => ((yield $test => $test))?->{$test};
    }
    function test2404()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(((yield $test => $test))?->{$test});
    }
    function test2405()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test &= $test)?->{$test};
    }
    function test2406()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test &= $test)?->{$test});
    }
    function test2407()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test |= $test)?->{$test};
    }
    function test2408()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test |= $test)?->{$test});
    }
    function test2409()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^= $test)?->{$test};
    }
    function test2410()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test ^= $test)?->{$test});
    }
    function test2411()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ??= $test)?->{$test};
    }
    function test2412()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test ??= $test)?->{$test});
    }
    function test2413()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test .= $test)?->{$test};
    }
    function test2414()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test .= $test)?->{$test});
    }
    function test2415()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test /= $test)?->{$test};
    }
    function test2416()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test /= $test)?->{$test});
    }
    function test2417()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test -= $test)?->{$test};
    }
    function test2418()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test -= $test)?->{$test});
    }
    function test2419()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test %= $test)?->{$test};
    }
    function test2420()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test %= $test)?->{$test});
    }
    function test2421()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test *= $test)?->{$test};
    }
    function test2422()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test *= $test)?->{$test});
    }
    function test2423()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test += $test)?->{$test};
    }
    function test2424()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test += $test)?->{$test});
    }
    function test2425()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test **= $test)?->{$test};
    }
    function test2426()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test **= $test)?->{$test});
    }
    function test2427()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <<= $test)?->{$test};
    }
    function test2428()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test <<= $test)?->{$test});
    }
    function test2429()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >>= $test)?->{$test};
    }
    function test2430()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test >>= $test)?->{$test});
    }
    function test2431()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test & $test)?->{$test};
    }
    function test2432()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test & $test)?->{$test});
    }
    function test2433()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test | $test)?->{$test};
    }
    function test2434()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test | $test)?->{$test});
    }
    function test2435()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^ $test)?->{$test};
    }
    function test2436()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test ^ $test)?->{$test});
    }
    function test2437()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test && $test)?->{$test};
    }
    function test2438()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test && $test)?->{$test});
    }
    function test2439()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test || $test)?->{$test};
    }
    function test2440()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test || $test)?->{$test});
    }
    function test2441()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ?? $test)?->{$test};
    }
    function test2442()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test ?? $test)?->{$test});
    }
    function test2443()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test . $test)?->{$test};
    }
    function test2444()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test . $test)?->{$test});
    }
    function test2445()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test / $test)?->{$test};
    }
    function test2446()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test / $test)?->{$test});
    }
    function test2447()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test == $test)?->{$test};
    }
    function test2448()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test == $test)?->{$test});
    }
    function test2449()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test > $test)?->{$test};
    }
    function test2450()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test > $test)?->{$test});
    }
    function test2451()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >= $test)?->{$test};
    }
    function test2452()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test >= $test)?->{$test});
    }
    function test2453()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test === $test)?->{$test};
    }
    function test2454()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test === $test)?->{$test});
    }
    function test2455()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test and $test)?->{$test};
    }
    function test2456()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test and $test)?->{$test});
    }
    function test2457()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test or $test)?->{$test};
    }
    function test2458()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test or $test)?->{$test});
    }
    function test2459()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test xor $test)?->{$test};
    }
    function test2460()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test xor $test)?->{$test});
    }
    function test2461()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test - $test)?->{$test};
    }
    function test2462()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test - $test)?->{$test});
    }
    function test2463()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test % $test)?->{$test};
    }
    function test2464()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test % $test)?->{$test});
    }
    function test2465()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test * $test)?->{$test};
    }
    function test2466()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test * $test)?->{$test});
    }
    function test2467()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test != $test)?->{$test};
    }
    function test2468()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test != $test)?->{$test});
    }
    function test2469()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test !== $test)?->{$test};
    }
    function test2470()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test !== $test)?->{$test});
    }
    function test2471()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test + $test)?->{$test};
    }
    function test2472()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test + $test)?->{$test});
    }
    function test2473()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ** $test)?->{$test};
    }
    function test2474()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test ** $test)?->{$test});
    }
    function test2475()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test << $test)?->{$test};
    }
    function test2476()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test << $test)?->{$test});
    }
    function test2477()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >> $test)?->{$test};
    }
    function test2478()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test >> $test)?->{$test});
    }
    function test2479()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test < $test)?->{$test};
    }
    function test2480()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test < $test)?->{$test});
    }
    function test2481()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <= $test)?->{$test};
    }
    function test2482()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test <= $test)?->{$test});
    }
    function test2483()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <=> $test)?->{$test};
    }
    function test2484()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test <=> $test)?->{$test});
    }
    function test2485()
    {
        $this->assertTrue(0 === 0);
        fn() => ((array) $test)?->{$test};
    }
    function test2486()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(((array) $test)?->{$test});
    }
    function test2487()
    {
        $this->assertTrue(0 === 0);
        fn() => ((bool) $test)?->{$test};
    }
    function test2488()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(((bool) $test)?->{$test});
    }
    function test2489()
    {
        $this->assertTrue(0 === 0);
        fn() => ((double) $test)?->{$test};
    }
    function test2490()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(((double) $test)?->{$test});
    }
    function test2491()
    {
        $this->assertTrue(0 === 0);
        fn() => ((int) $test)?->{$test};
    }
    function test2492()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(((int) $test)?->{$test});
    }
    function test2493()
    {
        $this->assertTrue(0 === 0);
        fn() => ((object) $test)?->{$test};
    }
    function test2494()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(((object) $test)?->{$test});
    }
    function test2495()
    {
        $this->assertTrue(0 === 0);
        fn() => ((string) $test)?->{$test};
    }
    function test2496()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(((string) $test)?->{$test});
    }
    function test2497()
    {
        $this->assertTrue(0 === 0);
        fn() => (0.0)?->{$test};
    }
    function test2498()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((0.0)?->{$test});
    }
    function test2499()
    {
        $this->assertTrue(0 === 0);
        fn() => ("{$test}")?->{$test};
    }
    function test2500()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(("{$test}")?->{$test});
    }
    function test2501()
    {
        $this->assertTrue(0 === 0);
        fn() => (0)?->{$test};
    }
    function test2502()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((0)?->{$test});
    }
    function test2503()
    {
        $this->assertTrue(0 === 0);
        fn() => 'test'?->{$test};
    }
    function test2504()
    {
        $this->assertTrue(0 === 0);
        fn() => isset('test'?->{$test});
    }
    function test2505()
    {
        $this->assertTrue(0 === 0);
        fn() => (__CLASS__)?->{$test};
    }
    function test2506()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((__CLASS__)?->{$test});
    }
    function test2507()
    {
        $this->assertTrue(0 === 0);
        fn() => (__DIR__)?->{$test};
    }
    function test2508()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((__DIR__)?->{$test});
    }
    function test2509()
    {
        $this->assertTrue(0 === 0);
        fn() => (__FILE__)?->{$test};
    }
    function test2510()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((__FILE__)?->{$test});
    }
    function test2511()
    {
        $this->assertTrue(0 === 0);
        fn() => (__FUNCTION__)?->{$test};
    }
    function test2512()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((__FUNCTION__)?->{$test});
    }
    function test2513()
    {
        $this->assertTrue(0 === 0);
        fn() => (__LINE__)?->{$test};
    }
    function test2514()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((__LINE__)?->{$test});
    }
    function test2515()
    {
        $this->assertTrue(0 === 0);
        fn() => (__METHOD__)?->{$test};
    }
    function test2516()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((__METHOD__)?->{$test});
    }
    function test2517()
    {
        $this->assertTrue(0 === 0);
        fn() => (__NAMESPACE__)?->{$test};
    }
    function test2518()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((__NAMESPACE__)?->{$test});
    }
    function test2519()
    {
        $this->assertTrue(0 === 0);
        fn() => (__TRAIT__)?->{$test};
    }
    function test2520()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((__TRAIT__)?->{$test});
    }
    function test2521()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->test;
    }
    function test2522()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->test);
    }
    function test2523()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->test;
    }
    function test2524()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->test);
    }
    function test2525()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test[$test]};
    }
    function test2526()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test[$test]});
    }
    function test2527()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test = $test};
    }
    function test2528()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test = $test});
    }
    function test2529()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test =& $test};
    }
    function test2530()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test =& $test});
    }
    function test2531()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{~$test};
    }
    function test2532()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{~$test});
    }
    function test2533()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{!$test};
    }
    function test2534()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{!$test});
    }
    function test2535()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test::$test};
    }
    function test2536()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test::$test});
    }
    function test2537()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{clone $test};
    }
    function test2538()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{clone $test});
    }
    function test2539()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{function () {
        }};
    }
    function test2540()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{function () {
        }});
    }
    function test2541()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test};
    }
    function test2542()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test});
    }
    function test2543()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{self};
    }
    function test2544()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{self});
    }
    function test2545()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{empty($test)};
    }
    function test2546()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{empty($test)});
    }
    function test2547()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{@$test};
    }
    function test2548()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{@$test});
    }
    function test2549()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{eval($test)};
    }
    function test2550()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{eval($test)});
    }
    function test2551()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test()};
    }
    function test2552()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test()});
    }
    function test2553()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{ $test};
    }
    function test2554()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{ $test});
    }
    function test2555()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test instanceof $test};
    }
    function test2556()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test instanceof $test});
    }
    function test2557()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{isset($test)};
    }
    function test2558()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{isset($test)});
    }
    function test2559()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{match ($test) {
        }};
    }
    function test2560()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{match ($test) {
        }});
    }
    function test2561()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test->{$test}()};
    }
    function test2562()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test->{$test}()});
    }
    function test2563()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{new $test()};
    }
    function test2564()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{new $test()});
    }
    function test2565()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test?->{$test}()};
    }
    function test2566()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test?->{$test}()});
    }
    function test2567()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test?->{$test}};
    }
    function test2568()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test?->{$test}});
    }
    function test2569()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test--};
    }
    function test2570()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test--});
    }
    function test2571()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test++};
    }
    function test2572()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test++});
    }
    function test2573()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{--$test};
    }
    function test2574()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{--$test});
    }
    function test2575()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{++$test};
    }
    function test2576()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{++$test});
    }
    function test2577()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{print $test};
    }
    function test2578()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{print $test});
    }
    function test2579()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test->{$test}};
    }
    function test2580()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test->{$test}});
    }
    function test2581()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{``};
    }
    function test2582()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{``});
    }
    function test2583()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test::$test()};
    }
    function test2584()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test::$test()});
    }
    function test2585()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test::${$test}};
    }
    function test2586()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test::${$test}});
    }
    function test2587()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test ? $test : $test};
    }
    function test2588()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test ? $test : $test});
    }
    function test2589()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{throw $test};
    }
    function test2590()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{throw $test});
    }
    function test2591()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{-$test};
    }
    function test2592()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{-$test});
    }
    function test2593()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{+$test};
    }
    function test2594()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{+$test});
    }
    function test2595()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{${$test}};
    }
    function test2596()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{${$test}});
    }
    function test2597()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{yield from $test};
    }
    function test2598()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{yield from $test});
    }
    function test2599()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{(yield $test => $test)};
    }
    function test2600()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{(yield $test => $test)});
    }
    function test2601()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test &= $test};
    }
    function test2602()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test &= $test});
    }
    function test2603()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test |= $test};
    }
    function test2604()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test |= $test});
    }
    function test2605()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test ^= $test};
    }
    function test2606()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test ^= $test});
    }
    function test2607()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test ??= $test};
    }
    function test2608()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test ??= $test});
    }
    function test2609()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test .= $test};
    }
    function test2610()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test .= $test});
    }
    function test2611()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test /= $test};
    }
    function test2612()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test /= $test});
    }
    function test2613()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test -= $test};
    }
    function test2614()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test -= $test});
    }
    function test2615()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test %= $test};
    }
    function test2616()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test %= $test});
    }
    function test2617()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test *= $test};
    }
    function test2618()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test *= $test});
    }
    function test2619()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test += $test};
    }
    function test2620()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test += $test});
    }
    function test2621()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test **= $test};
    }
    function test2622()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test **= $test});
    }
    function test2623()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test <<= $test};
    }
    function test2624()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test <<= $test});
    }
    function test2625()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test >>= $test};
    }
    function test2626()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test >>= $test});
    }
    function test2627()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test & $test};
    }
    function test2628()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test & $test});
    }
    function test2629()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test | $test};
    }
    function test2630()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test | $test});
    }
    function test2631()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test ^ $test};
    }
    function test2632()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test ^ $test});
    }
    function test2633()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test && $test};
    }
    function test2634()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test && $test});
    }
    function test2635()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test || $test};
    }
    function test2636()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test || $test});
    }
    function test2637()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test ?? $test};
    }
    function test2638()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test ?? $test});
    }
    function test2639()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test . $test};
    }
    function test2640()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test . $test});
    }
    function test2641()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test / $test};
    }
    function test2642()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test / $test});
    }
    function test2643()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test == $test};
    }
    function test2644()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test == $test});
    }
    function test2645()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test > $test};
    }
    function test2646()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test > $test});
    }
    function test2647()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test >= $test};
    }
    function test2648()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test >= $test});
    }
    function test2649()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test === $test};
    }
    function test2650()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test === $test});
    }
    function test2651()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test and $test};
    }
    function test2652()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test and $test});
    }
    function test2653()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test or $test};
    }
    function test2654()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test or $test});
    }
    function test2655()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test xor $test};
    }
    function test2656()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test xor $test});
    }
    function test2657()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test - $test};
    }
    function test2658()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test - $test});
    }
    function test2659()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test % $test};
    }
    function test2660()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test % $test});
    }
    function test2661()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test * $test};
    }
    function test2662()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test * $test});
    }
    function test2663()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test != $test};
    }
    function test2664()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test != $test});
    }
    function test2665()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test !== $test};
    }
    function test2666()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test !== $test});
    }
    function test2667()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test + $test};
    }
    function test2668()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test + $test});
    }
    function test2669()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test ** $test};
    }
    function test2670()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test ** $test});
    }
    function test2671()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test << $test};
    }
    function test2672()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test << $test});
    }
    function test2673()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test >> $test};
    }
    function test2674()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test >> $test});
    }
    function test2675()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test < $test};
    }
    function test2676()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test < $test});
    }
    function test2677()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test <= $test};
    }
    function test2678()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test <= $test});
    }
    function test2679()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test <=> $test};
    }
    function test2680()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test <=> $test});
    }
    function test2681()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{(array) $test};
    }
    function test2682()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{(array) $test});
    }
    function test2683()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{(bool) $test};
    }
    function test2684()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{(bool) $test});
    }
    function test2685()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{(double) $test};
    }
    function test2686()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{(double) $test});
    }
    function test2687()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{(int) $test};
    }
    function test2688()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{(int) $test});
    }
    function test2689()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{(object) $test};
    }
    function test2690()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{(object) $test});
    }
    function test2691()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{(string) $test};
    }
    function test2692()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{(string) $test});
    }
    function test2693()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{0.0};
    }
    function test2694()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{0.0});
    }
    function test2695()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{"{$test}"};
    }
    function test2696()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{"{$test}"});
    }
    function test2697()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{0};
    }
    function test2698()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{0});
    }
    function test2699()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{'test'};
    }
    function test2700()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{'test'});
    }
    function test2701()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{__CLASS__};
    }
    function test2702()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{__CLASS__});
    }
    function test2703()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{__DIR__};
    }
    function test2704()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{__DIR__});
    }
    function test2705()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{__FILE__};
    }
    function test2706()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{__FILE__});
    }
    function test2707()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{__FUNCTION__};
    }
    function test2708()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{__FUNCTION__});
    }
    function test2709()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{__LINE__};
    }
    function test2710()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{__LINE__});
    }
    function test2711()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{__METHOD__};
    }
    function test2712()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{__METHOD__});
    }
    function test2713()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{__NAMESPACE__};
    }
    function test2714()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{__NAMESPACE__});
    }
    function test2715()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{__TRAIT__};
    }
    function test2716()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{__TRAIT__});
    }
    function test2717()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test]--;
    }
    function test2718()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test--;
    }
    function test2719()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test--;
    }
    function test2720()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test--;
    }
    function test2721()
    {
        $this->assertTrue(0 === 0);
        fn() => $test--;
    }
    function test2722()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test--;
    }
    function test2723()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}--;
    }
    function test2724()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test}--;
    }
    function test2725()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test--;
    }
    function test2726()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test--;
    }
    function test2727()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test--;
    }
    function test2728()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test}--;
    }
    function test2729()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test--;
    }
    function test2730()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test--;
    }
    function test2731()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test--;
    }
    function test2732()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test--;
    }
    function test2733()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test--;
    }
    function test2734()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test--;
    }
    function test2735()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test--;
    }
    function test2736()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test]++;
    }
    function test2737()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test++;
    }
    function test2738()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test++;
    }
    function test2739()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test++;
    }
    function test2740()
    {
        $this->assertTrue(0 === 0);
        fn() => $test++;
    }
    function test2741()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test++;
    }
    function test2742()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}++;
    }
    function test2743()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test}++;
    }
    function test2744()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test++;
    }
    function test2745()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test++;
    }
    function test2746()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test++;
    }
    function test2747()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test}++;
    }
    function test2748()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test++;
    }
    function test2749()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test++;
    }
    function test2750()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test++;
    }
    function test2751()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test++;
    }
    function test2752()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test++;
    }
    function test2753()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test++;
    }
    function test2754()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test++;
    }
    function test2755()
    {
        $this->assertTrue(0 === 0);
        fn() => --$test[$test];
    }
    function test2756()
    {
        $this->assertTrue(0 === 0);
        fn() => --$test::$test;
    }
    function test2757()
    {
        $this->assertTrue(0 === 0);
        fn() => --$test;
    }
    function test2758()
    {
        $this->assertTrue(0 === 0);
        fn() => --$test->{$test};
    }
    function test2759()
    {
        $this->assertTrue(0 === 0);
        fn() => --$test::${$test};
    }
    function test2760()
    {
        $this->assertTrue(0 === 0);
        fn() => --${$test};
    }
    function test2761()
    {
        $this->assertTrue(0 === 0);
        fn() => --$test ** $test;
    }
    function test2762()
    {
        $this->assertTrue(0 === 0);
        fn() => ++$test[$test];
    }
    function test2763()
    {
        $this->assertTrue(0 === 0);
        fn() => ++$test::$test;
    }
    function test2764()
    {
        $this->assertTrue(0 === 0);
        fn() => ++$test;
    }
    function test2765()
    {
        $this->assertTrue(0 === 0);
        fn() => ++$test->{$test};
    }
    function test2766()
    {
        $this->assertTrue(0 === 0);
        fn() => ++$test::${$test};
    }
    function test2767()
    {
        $this->assertTrue(0 === 0);
        fn() => ++${$test};
    }
    function test2768()
    {
        $this->assertTrue(0 === 0);
        fn() => ++$test ** $test;
    }
    function test2769()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test[$test];
    }
    function test2770()
    {
        $this->assertTrue(0 === 0);
        fn() => print [];
    }
    function test2771()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test = $test;
    }
    function test2772()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test =& $test;
    }
    function test2773()
    {
        $this->assertTrue(0 === 0);
        fn() => print ~$test;
    }
    function test2774()
    {
        $this->assertTrue(0 === 0);
        fn() => print !$test;
    }
    function test2775()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test::$test;
    }
    function test2776()
    {
        $this->assertTrue(0 === 0);
        fn() => print clone $test;
    }
    function test2777()
    {
        $this->assertTrue(0 === 0);
        fn() => print function () {
        };
    }
    function test2778()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test;
    }
    function test2779()
    {
        $this->assertTrue(0 === 0);
        fn() => print self;
    }
    function test2780()
    {
        $this->assertTrue(0 === 0);
        fn() => print empty($test);
    }
    function test2781()
    {
        $this->assertTrue(0 === 0);
        fn() => print @$test;
    }
    function test2782()
    {
        $this->assertTrue(0 === 0);
        fn() => print eval($test);
    }
    function test2783()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test();
    }
    function test2784()
    {
        $this->assertTrue(0 === 0);
        fn() => print ( $test);
    }
    function test2785()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test instanceof $test;
    }
    function test2786()
    {
        $this->assertTrue(0 === 0);
        fn() => print isset($test);
    }
    function test2787()
    {
        $this->assertTrue(0 === 0);
        fn() => print match ($test) {
        };
    }
    function test2788()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test->{$test}();
    }
    function test2789()
    {
        $this->assertTrue(0 === 0);
        fn() => print new $test();
    }
    function test2790()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test?->{$test}();
    }
    function test2791()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test?->{$test};
    }
    function test2792()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test--;
    }
    function test2793()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test++;
    }
    function test2794()
    {
        $this->assertTrue(0 === 0);
        fn() => print --$test;
    }
    function test2795()
    {
        $this->assertTrue(0 === 0);
        fn() => print ++$test;
    }
    function test2796()
    {
        $this->assertTrue(0 === 0);
        fn() => print print $test;
    }
    function test2797()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test->{$test};
    }
    function test2798()
    {
        $this->assertTrue(0 === 0);
        fn() => print ``;
    }
    function test2799()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test::$test();
    }
    function test2800()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test::${$test};
    }
    function test2801()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test ? $test : $test;
    }
    function test2802()
    {
        $this->assertTrue(0 === 0);
        fn() => print throw $test;
    }
    function test2803()
    {
        $this->assertTrue(0 === 0);
        fn() => print -$test;
    }
    function test2804()
    {
        $this->assertTrue(0 === 0);
        fn() => print +$test;
    }
    function test2805()
    {
        $this->assertTrue(0 === 0);
        fn() => print ${$test};
    }
    function test2806()
    {
        $this->assertTrue(0 === 0);
        fn() => print yield from $test;
    }
    function test2807()
    {
        $this->assertTrue(0 === 0);
        fn() => print (yield $test => $test);
    }
    function test2808()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test &= $test;
    }
    function test2809()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test |= $test;
    }
    function test2810()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test ^= $test;
    }
    function test2811()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test ??= $test;
    }
    function test2812()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test .= $test;
    }
    function test2813()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test /= $test;
    }
    function test2814()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test -= $test;
    }
    function test2815()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test %= $test;
    }
    function test2816()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test *= $test;
    }
    function test2817()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test += $test;
    }
    function test2818()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test **= $test;
    }
    function test2819()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test <<= $test;
    }
    function test2820()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test >>= $test;
    }
    function test2821()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test & $test;
    }
    function test2822()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test | $test;
    }
    function test2823()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test ^ $test;
    }
    function test2824()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test && $test;
    }
    function test2825()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test || $test;
    }
    function test2826()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test ?? $test;
    }
    function test2827()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test . $test;
    }
    function test2828()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test / $test;
    }
    function test2829()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test == $test;
    }
    function test2830()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test > $test;
    }
    function test2831()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test >= $test;
    }
    function test2832()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test === $test;
    }
    function test2833()
    {
        $this->assertTrue(0 === 0);
        fn() => print ($test and $test);
    }
    function test2834()
    {
        $this->assertTrue(0 === 0);
        fn() => print ($test or $test);
    }
    function test2835()
    {
        $this->assertTrue(0 === 0);
        fn() => print ($test xor $test);
    }
    function test2836()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test - $test;
    }
    function test2837()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test % $test;
    }
    function test2838()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test * $test;
    }
    function test2839()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test != $test;
    }
    function test2840()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test !== $test;
    }
    function test2841()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test + $test;
    }
    function test2842()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test ** $test;
    }
    function test2843()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test << $test;
    }
    function test2844()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test >> $test;
    }
    function test2845()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test < $test;
    }
    function test2846()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test <= $test;
    }
    function test2847()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test <=> $test;
    }
    function test2848()
    {
        $this->assertTrue(0 === 0);
        fn() => print (array) $test;
    }
    function test2849()
    {
        $this->assertTrue(0 === 0);
        fn() => print (bool) $test;
    }
    function test2850()
    {
        $this->assertTrue(0 === 0);
        fn() => print (double) $test;
    }
    function test2851()
    {
        $this->assertTrue(0 === 0);
        fn() => print (int) $test;
    }
    function test2852()
    {
        $this->assertTrue(0 === 0);
        fn() => print (object) $test;
    }
    function test2853()
    {
        $this->assertTrue(0 === 0);
        fn() => print (string) $test;
    }
    function test2854()
    {
        $this->assertTrue(0 === 0);
        fn() => print 0.0;
    }
    function test2855()
    {
        $this->assertTrue(0 === 0);
        fn() => print "{$test}";
    }
    function test2856()
    {
        $this->assertTrue(0 === 0);
        fn() => print 0;
    }
    function test2857()
    {
        $this->assertTrue(0 === 0);
        fn() => print 'test';
    }
    function test2858()
    {
        $this->assertTrue(0 === 0);
        fn() => print __CLASS__;
    }
    function test2859()
    {
        $this->assertTrue(0 === 0);
        fn() => print __DIR__;
    }
    function test2860()
    {
        $this->assertTrue(0 === 0);
        fn() => print __FILE__;
    }
    function test2861()
    {
        $this->assertTrue(0 === 0);
        fn() => print __FUNCTION__;
    }
    function test2862()
    {
        $this->assertTrue(0 === 0);
        fn() => print __LINE__;
    }
    function test2863()
    {
        $this->assertTrue(0 === 0);
        fn() => print __METHOD__;
    }
    function test2864()
    {
        $this->assertTrue(0 === 0);
        fn() => print __NAMESPACE__;
    }
    function test2865()
    {
        $this->assertTrue(0 === 0);
        fn() => print __TRAIT__;
    }
    function test2866()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test]->{$test};
    }
    function test2867()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test]->{$test});
    }
    function test2868()
    {
        $this->assertTrue(0 === 0);
        fn() => []->{$test};
    }
    function test2869()
    {
        $this->assertTrue(0 === 0);
        fn() => isset([]->{$test});
    }
    function test2870()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test = $test)->{$test};
    }
    function test2871()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test = $test)->{$test});
    }
    function test2872()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test =& $test)->{$test};
    }
    function test2873()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test =& $test)->{$test});
    }
    function test2874()
    {
        $this->assertTrue(0 === 0);
        fn() => (~$test)->{$test};
    }
    function test2875()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((~$test)->{$test});
    }
    function test2876()
    {
        $this->assertTrue(0 === 0);
        fn() => (!$test)->{$test};
    }
    function test2877()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((!$test)->{$test});
    }
    function test2878()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test->{$test};
    }
    function test2879()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::$test->{$test});
    }
    function test2880()
    {
        $this->assertTrue(0 === 0);
        fn() => (clone $test)->{$test};
    }
    function test2881()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((clone $test)->{$test});
    }
    function test2882()
    {
        $this->assertTrue(0 === 0);
        fn() => (function () {
        })->{$test};
    }
    function test2883()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((function () {
        })->{$test});
    }
    function test2884()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test)->{$test};
    }
    function test2885()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test)->{$test});
    }
    function test2886()
    {
        $this->assertTrue(0 === 0);
        fn() => self->{$test};
    }
    function test2887()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(self->{$test});
    }
    function test2888()
    {
        $this->assertTrue(0 === 0);
        fn() => (empty($test))->{$test};
    }
    function test2889()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((empty($test))->{$test});
    }
    function test2890()
    {
        $this->assertTrue(0 === 0);
        fn() => (@$test)->{$test};
    }
    function test2891()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((@$test)->{$test});
    }
    function test2892()
    {
        $this->assertTrue(0 === 0);
        fn() => (eval($test))->{$test};
    }
    function test2893()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((eval($test))->{$test});
    }
    function test2894()
    {
        $this->assertTrue(0 === 0);
        fn() => $test()->{$test};
    }
    function test2895()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test()->{$test});
    }
    function test2896()
    {
        $this->assertTrue(0 === 0);
        fn() => ( $test)->{$test};
    }
    function test2897()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(( $test)->{$test});
    }
    function test2898()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test instanceof $test)->{$test};
    }
    function test2899()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test instanceof $test)->{$test});
    }
    function test2900()
    {
        $this->assertTrue(0 === 0);
        fn() => (isset($test))->{$test};
    }
    function test2901()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((isset($test))->{$test});
    }
    function test2902()
    {
        $this->assertTrue(0 === 0);
        fn() => (match ($test) {
        })->{$test};
    }
    function test2903()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((match ($test) {
        })->{$test});
    }
    function test2904()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}()->{$test};
    }
    function test2905()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test}()->{$test});
    }
    function test2906()
    {
        $this->assertTrue(0 === 0);
        fn() => (new $test())->{$test};
    }
    function test2907()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((new $test())->{$test});
    }
    function test2908()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}()->{$test};
    }
    function test2909()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test}()->{$test});
    }
    function test2910()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}->{$test};
    }
    function test2911()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test}->{$test});
    }
    function test2912()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test--)->{$test};
    }
    function test2913()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test--)->{$test});
    }
    function test2914()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test++)->{$test};
    }
    function test2915()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test++)->{$test});
    }
    function test2916()
    {
        $this->assertTrue(0 === 0);
        fn() => (--$test)->{$test};
    }
    function test2917()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((--$test)->{$test});
    }
    function test2918()
    {
        $this->assertTrue(0 === 0);
        fn() => (++$test)->{$test};
    }
    function test2919()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((++$test)->{$test});
    }
    function test2920()
    {
        $this->assertTrue(0 === 0);
        fn() => (print $test)->{$test};
    }
    function test2921()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((print $test)->{$test});
    }
    function test2922()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}->{$test};
    }
    function test2923()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test}->{$test});
    }
    function test2924()
    {
        $this->assertTrue(0 === 0);
        fn() => (``)->{$test};
    }
    function test2925()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((``)->{$test});
    }
    function test2926()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test()->{$test};
    }
    function test2927()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::$test()->{$test});
    }
    function test2928()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test}->{$test};
    }
    function test2929()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test}->{$test});
    }
    function test2930()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ? $test : $test)->{$test};
    }
    function test2931()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test ? $test : $test)->{$test});
    }
    function test2932()
    {
        $this->assertTrue(0 === 0);
        fn() => (throw $test)->{$test};
    }
    function test2933()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((throw $test)->{$test});
    }
    function test2934()
    {
        $this->assertTrue(0 === 0);
        fn() => (-$test)->{$test};
    }
    function test2935()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((-$test)->{$test});
    }
    function test2936()
    {
        $this->assertTrue(0 === 0);
        fn() => (+$test)->{$test};
    }
    function test2937()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((+$test)->{$test});
    }
    function test2938()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test}->{$test};
    }
    function test2939()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test}->{$test});
    }
    function test2940()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield from $test)->{$test};
    }
    function test2941()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((yield from $test)->{$test});
    }
    function test2942()
    {
        $this->assertTrue(0 === 0);
        fn() => ((yield $test => $test))->{$test};
    }
    function test2943()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(((yield $test => $test))->{$test});
    }
    function test2944()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test &= $test)->{$test};
    }
    function test2945()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test &= $test)->{$test});
    }
    function test2946()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test |= $test)->{$test};
    }
    function test2947()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test |= $test)->{$test});
    }
    function test2948()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^= $test)->{$test};
    }
    function test2949()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test ^= $test)->{$test});
    }
    function test2950()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ??= $test)->{$test};
    }
    function test2951()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test ??= $test)->{$test});
    }
    function test2952()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test .= $test)->{$test};
    }
    function test2953()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test .= $test)->{$test});
    }
    function test2954()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test /= $test)->{$test};
    }
    function test2955()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test /= $test)->{$test});
    }
    function test2956()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test -= $test)->{$test};
    }
    function test2957()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test -= $test)->{$test});
    }
    function test2958()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test %= $test)->{$test};
    }
    function test2959()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test %= $test)->{$test});
    }
    function test2960()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test *= $test)->{$test};
    }
    function test2961()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test *= $test)->{$test});
    }
    function test2962()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test += $test)->{$test};
    }
    function test2963()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test += $test)->{$test});
    }
    function test2964()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test **= $test)->{$test};
    }
    function test2965()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test **= $test)->{$test});
    }
    function test2966()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <<= $test)->{$test};
    }
    function test2967()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test <<= $test)->{$test});
    }
    function test2968()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >>= $test)->{$test};
    }
    function test2969()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test >>= $test)->{$test});
    }
    function test2970()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test & $test)->{$test};
    }
    function test2971()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test & $test)->{$test});
    }
    function test2972()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test | $test)->{$test};
    }
    function test2973()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test | $test)->{$test});
    }
    function test2974()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^ $test)->{$test};
    }
    function test2975()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test ^ $test)->{$test});
    }
    function test2976()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test && $test)->{$test};
    }
    function test2977()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test && $test)->{$test});
    }
    function test2978()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test || $test)->{$test};
    }
    function test2979()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test || $test)->{$test});
    }
    function test2980()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ?? $test)->{$test};
    }
    function test2981()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test ?? $test)->{$test});
    }
    function test2982()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test . $test)->{$test};
    }
    function test2983()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test . $test)->{$test});
    }
    function test2984()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test / $test)->{$test};
    }
    function test2985()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test / $test)->{$test});
    }
    function test2986()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test == $test)->{$test};
    }
    function test2987()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test == $test)->{$test});
    }
    function test2988()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test > $test)->{$test};
    }
    function test2989()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test > $test)->{$test});
    }
    function test2990()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >= $test)->{$test};
    }
    function test2991()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test >= $test)->{$test});
    }
    function test2992()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test === $test)->{$test};
    }
    function test2993()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test === $test)->{$test});
    }
    function test2994()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test and $test)->{$test};
    }
    function test2995()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test and $test)->{$test});
    }
    function test2996()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test or $test)->{$test};
    }
    function test2997()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test or $test)->{$test});
    }
    function test2998()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test xor $test)->{$test};
    }
    function test2999()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test xor $test)->{$test});
    }
    function test3000()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test - $test)->{$test};
    }
    function test3001()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test - $test)->{$test});
    }
    function test3002()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test % $test)->{$test};
    }
    function test3003()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test % $test)->{$test});
    }
    function test3004()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test * $test)->{$test};
    }
    function test3005()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test * $test)->{$test});
    }
    function test3006()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test != $test)->{$test};
    }
    function test3007()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test != $test)->{$test});
    }
    function test3008()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test !== $test)->{$test};
    }
    function test3009()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test !== $test)->{$test});
    }
    function test3010()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test + $test)->{$test};
    }
    function test3011()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test + $test)->{$test});
    }
    function test3012()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ** $test)->{$test};
    }
    function test3013()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test ** $test)->{$test});
    }
    function test3014()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test << $test)->{$test};
    }
    function test3015()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test << $test)->{$test});
    }
    function test3016()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >> $test)->{$test};
    }
    function test3017()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test >> $test)->{$test});
    }
    function test3018()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test < $test)->{$test};
    }
    function test3019()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test < $test)->{$test});
    }
    function test3020()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <= $test)->{$test};
    }
    function test3021()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test <= $test)->{$test});
    }
    function test3022()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <=> $test)->{$test};
    }
    function test3023()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test <=> $test)->{$test});
    }
    function test3024()
    {
        $this->assertTrue(0 === 0);
        fn() => ((array) $test)->{$test};
    }
    function test3025()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(((array) $test)->{$test});
    }
    function test3026()
    {
        $this->assertTrue(0 === 0);
        fn() => ((bool) $test)->{$test};
    }
    function test3027()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(((bool) $test)->{$test});
    }
    function test3028()
    {
        $this->assertTrue(0 === 0);
        fn() => ((double) $test)->{$test};
    }
    function test3029()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(((double) $test)->{$test});
    }
    function test3030()
    {
        $this->assertTrue(0 === 0);
        fn() => ((int) $test)->{$test};
    }
    function test3031()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(((int) $test)->{$test});
    }
    function test3032()
    {
        $this->assertTrue(0 === 0);
        fn() => ((object) $test)->{$test};
    }
    function test3033()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(((object) $test)->{$test});
    }
    function test3034()
    {
        $this->assertTrue(0 === 0);
        fn() => ((string) $test)->{$test};
    }
    function test3035()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(((string) $test)->{$test});
    }
    function test3036()
    {
        $this->assertTrue(0 === 0);
        fn() => (0.0)->{$test};
    }
    function test3037()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((0.0)->{$test});
    }
    function test3038()
    {
        $this->assertTrue(0 === 0);
        fn() => ("{$test}")->{$test};
    }
    function test3039()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(("{$test}")->{$test});
    }
    function test3040()
    {
        $this->assertTrue(0 === 0);
        fn() => (0)->{$test};
    }
    function test3041()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((0)->{$test});
    }
    function test3042()
    {
        $this->assertTrue(0 === 0);
        fn() => 'test'->{$test};
    }
    function test3043()
    {
        $this->assertTrue(0 === 0);
        fn() => isset('test'->{$test});
    }
    function test3044()
    {
        $this->assertTrue(0 === 0);
        fn() => (__CLASS__)->{$test};
    }
    function test3045()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((__CLASS__)->{$test});
    }
    function test3046()
    {
        $this->assertTrue(0 === 0);
        fn() => (__DIR__)->{$test};
    }
    function test3047()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((__DIR__)->{$test});
    }
    function test3048()
    {
        $this->assertTrue(0 === 0);
        fn() => (__FILE__)->{$test};
    }
    function test3049()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((__FILE__)->{$test});
    }
    function test3050()
    {
        $this->assertTrue(0 === 0);
        fn() => (__FUNCTION__)->{$test};
    }
    function test3051()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((__FUNCTION__)->{$test});
    }
    function test3052()
    {
        $this->assertTrue(0 === 0);
        fn() => (__LINE__)->{$test};
    }
    function test3053()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((__LINE__)->{$test});
    }
    function test3054()
    {
        $this->assertTrue(0 === 0);
        fn() => (__METHOD__)->{$test};
    }
    function test3055()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((__METHOD__)->{$test});
    }
    function test3056()
    {
        $this->assertTrue(0 === 0);
        fn() => (__NAMESPACE__)->{$test};
    }
    function test3057()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((__NAMESPACE__)->{$test});
    }
    function test3058()
    {
        $this->assertTrue(0 === 0);
        fn() => (__TRAIT__)->{$test};
    }
    function test3059()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((__TRAIT__)->{$test});
    }
    function test3060()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->test;
    }
    function test3061()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->test);
    }
    function test3062()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->test;
    }
    function test3063()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->test);
    }
    function test3064()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test[$test]};
    }
    function test3065()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test[$test]});
    }
    function test3066()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{[]};
    }
    function test3067()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{[]});
    }
    function test3068()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test = $test};
    }
    function test3069()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test = $test});
    }
    function test3070()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test =& $test};
    }
    function test3071()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test =& $test});
    }
    function test3072()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{~$test};
    }
    function test3073()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{~$test});
    }
    function test3074()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{!$test};
    }
    function test3075()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{!$test});
    }
    function test3076()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test::$test};
    }
    function test3077()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test::$test});
    }
    function test3078()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{clone $test};
    }
    function test3079()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{clone $test});
    }
    function test3080()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{function () {
        }};
    }
    function test3081()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{function () {
        }});
    }
    function test3082()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test};
    }
    function test3083()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test});
    }
    function test3084()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{self};
    }
    function test3085()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{self});
    }
    function test3086()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{empty($test)};
    }
    function test3087()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{empty($test)});
    }
    function test3088()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{@$test};
    }
    function test3089()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{@$test});
    }
    function test3090()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{eval($test)};
    }
    function test3091()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{eval($test)});
    }
    function test3092()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test()};
    }
    function test3093()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test()});
    }
    function test3094()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{ $test};
    }
    function test3095()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{ $test});
    }
    function test3096()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test instanceof $test};
    }
    function test3097()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test instanceof $test});
    }
    function test3098()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{isset($test)};
    }
    function test3099()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{isset($test)});
    }
    function test3100()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{match ($test) {
        }};
    }
    function test3101()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{match ($test) {
        }});
    }
    function test3102()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test->{$test}()};
    }
    function test3103()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test->{$test}()});
    }
    function test3104()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{new $test()};
    }
    function test3105()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{new $test()});
    }
    function test3106()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test?->{$test}()};
    }
    function test3107()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test?->{$test}()});
    }
    function test3108()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test?->{$test}};
    }
    function test3109()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test?->{$test}});
    }
    function test3110()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test--};
    }
    function test3111()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test--});
    }
    function test3112()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test++};
    }
    function test3113()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test++});
    }
    function test3114()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{--$test};
    }
    function test3115()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{--$test});
    }
    function test3116()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{++$test};
    }
    function test3117()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{++$test});
    }
    function test3118()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{print $test};
    }
    function test3119()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{print $test});
    }
    function test3120()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test->{$test}};
    }
    function test3121()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test->{$test}});
    }
    function test3122()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{``};
    }
    function test3123()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{``});
    }
    function test3124()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test::$test()};
    }
    function test3125()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test::$test()});
    }
    function test3126()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test::${$test}};
    }
    function test3127()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test::${$test}});
    }
    function test3128()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test ? $test : $test};
    }
    function test3129()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test ? $test : $test});
    }
    function test3130()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{throw $test};
    }
    function test3131()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{throw $test});
    }
    function test3132()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{-$test};
    }
    function test3133()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{-$test});
    }
    function test3134()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{+$test};
    }
    function test3135()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{+$test});
    }
    function test3136()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{${$test}};
    }
    function test3137()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{${$test}});
    }
    function test3138()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{yield from $test};
    }
    function test3139()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{yield from $test});
    }
    function test3140()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{(yield $test => $test)};
    }
    function test3141()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{(yield $test => $test)});
    }
    function test3142()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test &= $test};
    }
    function test3143()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test &= $test});
    }
    function test3144()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test |= $test};
    }
    function test3145()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test |= $test});
    }
    function test3146()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test ^= $test};
    }
    function test3147()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test ^= $test});
    }
    function test3148()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test ??= $test};
    }
    function test3149()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test ??= $test});
    }
    function test3150()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test .= $test};
    }
    function test3151()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test .= $test});
    }
    function test3152()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test /= $test};
    }
    function test3153()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test /= $test});
    }
    function test3154()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test -= $test};
    }
    function test3155()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test -= $test});
    }
    function test3156()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test %= $test};
    }
    function test3157()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test %= $test});
    }
    function test3158()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test *= $test};
    }
    function test3159()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test *= $test});
    }
    function test3160()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test += $test};
    }
    function test3161()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test += $test});
    }
    function test3162()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test **= $test};
    }
    function test3163()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test **= $test});
    }
    function test3164()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test <<= $test};
    }
    function test3165()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test <<= $test});
    }
    function test3166()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test >>= $test};
    }
    function test3167()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test >>= $test});
    }
    function test3168()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test & $test};
    }
    function test3169()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test & $test});
    }
    function test3170()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test | $test};
    }
    function test3171()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test | $test});
    }
    function test3172()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test ^ $test};
    }
    function test3173()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test ^ $test});
    }
    function test3174()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test && $test};
    }
    function test3175()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test && $test});
    }
    function test3176()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test || $test};
    }
    function test3177()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test || $test});
    }
    function test3178()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test ?? $test};
    }
    function test3179()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test ?? $test});
    }
    function test3180()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test . $test};
    }
    function test3181()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test . $test});
    }
    function test3182()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test / $test};
    }
    function test3183()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test / $test});
    }
    function test3184()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test == $test};
    }
    function test3185()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test == $test});
    }
    function test3186()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test > $test};
    }
    function test3187()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test > $test});
    }
    function test3188()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test >= $test};
    }
    function test3189()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test >= $test});
    }
    function test3190()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test === $test};
    }
    function test3191()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test === $test});
    }
    function test3192()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test and $test};
    }
    function test3193()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test and $test});
    }
    function test3194()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test or $test};
    }
    function test3195()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test or $test});
    }
    function test3196()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test xor $test};
    }
    function test3197()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test xor $test});
    }
    function test3198()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test - $test};
    }
    function test3199()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test - $test});
    }
    function test3200()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test % $test};
    }
    function test3201()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test % $test});
    }
    function test3202()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test * $test};
    }
    function test3203()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test * $test});
    }
    function test3204()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test != $test};
    }
    function test3205()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test != $test});
    }
    function test3206()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test !== $test};
    }
    function test3207()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test !== $test});
    }
    function test3208()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test + $test};
    }
    function test3209()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test + $test});
    }
    function test3210()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test ** $test};
    }
    function test3211()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test ** $test});
    }
    function test3212()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test << $test};
    }
    function test3213()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test << $test});
    }
    function test3214()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test >> $test};
    }
    function test3215()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test >> $test});
    }
    function test3216()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test < $test};
    }
    function test3217()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test < $test});
    }
    function test3218()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test <= $test};
    }
    function test3219()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test <= $test});
    }
    function test3220()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test <=> $test};
    }
    function test3221()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test <=> $test});
    }
    function test3222()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{(array) $test};
    }
    function test3223()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{(array) $test});
    }
    function test3224()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{(bool) $test};
    }
    function test3225()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{(bool) $test});
    }
    function test3226()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{(double) $test};
    }
    function test3227()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{(double) $test});
    }
    function test3228()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{(int) $test};
    }
    function test3229()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{(int) $test});
    }
    function test3230()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{(object) $test};
    }
    function test3231()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{(object) $test});
    }
    function test3232()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{(string) $test};
    }
    function test3233()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{(string) $test});
    }
    function test3234()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{0.0};
    }
    function test3235()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{0.0});
    }
    function test3236()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{"{$test}"};
    }
    function test3237()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{"{$test}"});
    }
    function test3238()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{0};
    }
    function test3239()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{0});
    }
    function test3240()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{'test'};
    }
    function test3241()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{'test'});
    }
    function test3242()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{__CLASS__};
    }
    function test3243()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{__CLASS__});
    }
    function test3244()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{__DIR__};
    }
    function test3245()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{__DIR__});
    }
    function test3246()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{__FILE__};
    }
    function test3247()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{__FILE__});
    }
    function test3248()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{__FUNCTION__};
    }
    function test3249()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{__FUNCTION__});
    }
    function test3250()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{__LINE__};
    }
    function test3251()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{__LINE__});
    }
    function test3252()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{__METHOD__};
    }
    function test3253()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{__METHOD__});
    }
    function test3254()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{__NAMESPACE__};
    }
    function test3255()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{__NAMESPACE__});
    }
    function test3256()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{__TRAIT__};
    }
    function test3257()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{__TRAIT__});
    }
    function test3258()
    {
        $this->assertTrue(0 === 0);
        fn() => self::$test();
    }
    function test3259()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test]::$test();
    }
    function test3260()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test = $test)::$test();
    }
    function test3261()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test =& $test)::$test();
    }
    function test3262()
    {
        $this->assertTrue(0 === 0);
        fn() => (~$test)::$test();
    }
    function test3263()
    {
        $this->assertTrue(0 === 0);
        fn() => (!$test)::$test();
    }
    function test3264()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test::$test();
    }
    function test3265()
    {
        $this->assertTrue(0 === 0);
        fn() => (clone $test)::$test();
    }
    function test3266()
    {
        $this->assertTrue(0 === 0);
        fn() => (function () {
        })::$test();
    }
    function test3267()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test)::$test();
    }
    function test3268()
    {
        $this->assertTrue(0 === 0);
        fn() => self::$test();
    }
    function test3269()
    {
        $this->assertTrue(0 === 0);
        fn() => (empty($test))::$test();
    }
    function test3270()
    {
        $this->assertTrue(0 === 0);
        fn() => (@$test)::$test();
    }
    function test3271()
    {
        $this->assertTrue(0 === 0);
        fn() => (eval($test))::$test();
    }
    function test3272()
    {
        $this->assertTrue(0 === 0);
        fn() => $test()::$test();
    }
    function test3273()
    {
        $this->assertTrue(0 === 0);
        fn() => ( $test)::$test();
    }
    function test3274()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test instanceof $test)::$test();
    }
    function test3275()
    {
        $this->assertTrue(0 === 0);
        fn() => (isset($test))::$test();
    }
    function test3276()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}()::$test();
    }
    function test3277()
    {
        $this->assertTrue(0 === 0);
        fn() => (new $test())::$test();
    }
    function test3278()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}()::$test();
    }
    function test3279()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}::$test();
    }
    function test3280()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test--)::$test();
    }
    function test3281()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test++)::$test();
    }
    function test3282()
    {
        $this->assertTrue(0 === 0);
        fn() => (--$test)::$test();
    }
    function test3283()
    {
        $this->assertTrue(0 === 0);
        fn() => (++$test)::$test();
    }
    function test3284()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}::$test();
    }
    function test3285()
    {
        $this->assertTrue(0 === 0);
        fn() => (``)::$test();
    }
    function test3286()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test()::$test();
    }
    function test3287()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test}::$test();
    }
    function test3288()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ? $test : $test)::$test();
    }
    function test3289()
    {
        $this->assertTrue(0 === 0);
        fn() => (-$test)::$test();
    }
    function test3290()
    {
        $this->assertTrue(0 === 0);
        fn() => (+$test)::$test();
    }
    function test3291()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test}::$test();
    }
    function test3292()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield from $test)::$test();
    }
    function test3293()
    {
        $this->assertTrue(0 === 0);
        fn() => ((yield $test => $test))::$test();
    }
    function test3294()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test &= $test)::$test();
    }
    function test3295()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test |= $test)::$test();
    }
    function test3296()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^= $test)::$test();
    }
    function test3297()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ??= $test)::$test();
    }
    function test3298()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test .= $test)::$test();
    }
    function test3299()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test /= $test)::$test();
    }
    function test3300()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test -= $test)::$test();
    }
    function test3301()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test %= $test)::$test();
    }
    function test3302()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test *= $test)::$test();
    }
    function test3303()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test += $test)::$test();
    }
    function test3304()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test **= $test)::$test();
    }
    function test3305()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <<= $test)::$test();
    }
    function test3306()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >>= $test)::$test();
    }
    function test3307()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test & $test)::$test();
    }
    function test3308()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test | $test)::$test();
    }
    function test3309()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^ $test)::$test();
    }
    function test3310()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test && $test)::$test();
    }
    function test3311()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test || $test)::$test();
    }
    function test3312()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ?? $test)::$test();
    }
    function test3313()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test . $test)::$test();
    }
    function test3314()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test / $test)::$test();
    }
    function test3315()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test == $test)::$test();
    }
    function test3316()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test > $test)::$test();
    }
    function test3317()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >= $test)::$test();
    }
    function test3318()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test === $test)::$test();
    }
    function test3319()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test and $test)::$test();
    }
    function test3320()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test or $test)::$test();
    }
    function test3321()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test xor $test)::$test();
    }
    function test3322()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test - $test)::$test();
    }
    function test3323()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test % $test)::$test();
    }
    function test3324()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test * $test)::$test();
    }
    function test3325()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test != $test)::$test();
    }
    function test3326()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test !== $test)::$test();
    }
    function test3327()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test + $test)::$test();
    }
    function test3328()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ** $test)::$test();
    }
    function test3329()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test << $test)::$test();
    }
    function test3330()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >> $test)::$test();
    }
    function test3331()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test < $test)::$test();
    }
    function test3332()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <= $test)::$test();
    }
    function test3333()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <=> $test)::$test();
    }
    function test3334()
    {
        $this->assertTrue(0 === 0);
        fn() => ((array) $test)::$test();
    }
    function test3335()
    {
        $this->assertTrue(0 === 0);
        fn() => ((bool) $test)::$test();
    }
    function test3336()
    {
        $this->assertTrue(0 === 0);
        fn() => ((double) $test)::$test();
    }
    function test3337()
    {
        $this->assertTrue(0 === 0);
        fn() => ((int) $test)::$test();
    }
    function test3338()
    {
        $this->assertTrue(0 === 0);
        fn() => ((object) $test)::$test();
    }
    function test3339()
    {
        $this->assertTrue(0 === 0);
        fn() => ((string) $test)::$test();
    }
    function test3340()
    {
        $this->assertTrue(0 === 0);
        fn() => ("{$test}")::$test();
    }
    function test3341()
    {
        $this->assertTrue(0 === 0);
        fn() => 'test'::$test();
    }
    function test3342()
    {
        $this->assertTrue(0 === 0);
        fn() => (__CLASS__)::$test();
    }
    function test3343()
    {
        $this->assertTrue(0 === 0);
        fn() => (__DIR__)::$test();
    }
    function test3344()
    {
        $this->assertTrue(0 === 0);
        fn() => (__FILE__)::$test();
    }
    function test3345()
    {
        $this->assertTrue(0 === 0);
        fn() => (__FUNCTION__)::$test();
    }
    function test3346()
    {
        $this->assertTrue(0 === 0);
        fn() => (__METHOD__)::$test();
    }
    function test3347()
    {
        $this->assertTrue(0 === 0);
        fn() => (__NAMESPACE__)::$test();
    }
    function test3348()
    {
        $this->assertTrue(0 === 0);
        fn() => (__TRAIT__)::$test();
    }
    function test3349()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::test();
    }
    function test3350()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::test();
    }
    function test3351()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test[$test]}();
    }
    function test3352()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test = $test}();
    }
    function test3353()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test =& $test}();
    }
    function test3354()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{~$test}();
    }
    function test3355()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{!$test}();
    }
    function test3356()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test::$test}();
    }
    function test3357()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{clone $test}();
    }
    function test3358()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{function () {
        }}();
    }
    function test3359()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test}();
    }
    function test3360()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{self}();
    }
    function test3361()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{empty($test)}();
    }
    function test3362()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{@$test}();
    }
    function test3363()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{eval($test)}();
    }
    function test3364()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test()}();
    }
    function test3365()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{ $test}();
    }
    function test3366()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test instanceof $test}();
    }
    function test3367()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{isset($test)}();
    }
    function test3368()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test->{$test}()}();
    }
    function test3369()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{new $test()}();
    }
    function test3370()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test?->{$test}()}();
    }
    function test3371()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test?->{$test}}();
    }
    function test3372()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test--}();
    }
    function test3373()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test++}();
    }
    function test3374()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{--$test}();
    }
    function test3375()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{++$test}();
    }
    function test3376()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test->{$test}}();
    }
    function test3377()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{``}();
    }
    function test3378()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test::$test()}();
    }
    function test3379()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test::${$test}}();
    }
    function test3380()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test ? $test : $test}();
    }
    function test3381()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{-$test}();
    }
    function test3382()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{+$test}();
    }
    function test3383()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test}();
    }
    function test3384()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{yield from $test}();
    }
    function test3385()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{(yield $test => $test)}();
    }
    function test3386()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test &= $test}();
    }
    function test3387()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test |= $test}();
    }
    function test3388()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test ^= $test}();
    }
    function test3389()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test ??= $test}();
    }
    function test3390()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test .= $test}();
    }
    function test3391()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test /= $test}();
    }
    function test3392()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test -= $test}();
    }
    function test3393()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test %= $test}();
    }
    function test3394()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test *= $test}();
    }
    function test3395()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test += $test}();
    }
    function test3396()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test **= $test}();
    }
    function test3397()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test <<= $test}();
    }
    function test3398()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test >>= $test}();
    }
    function test3399()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test & $test}();
    }
    function test3400()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test | $test}();
    }
    function test3401()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test ^ $test}();
    }
    function test3402()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test && $test}();
    }
    function test3403()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test || $test}();
    }
    function test3404()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test ?? $test}();
    }
    function test3405()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test . $test}();
    }
    function test3406()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test / $test}();
    }
    function test3407()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test == $test}();
    }
    function test3408()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test > $test}();
    }
    function test3409()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test >= $test}();
    }
    function test3410()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test === $test}();
    }
    function test3411()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test and $test}();
    }
    function test3412()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test or $test}();
    }
    function test3413()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test xor $test}();
    }
    function test3414()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test - $test}();
    }
    function test3415()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test % $test}();
    }
    function test3416()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test * $test}();
    }
    function test3417()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test != $test}();
    }
    function test3418()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test !== $test}();
    }
    function test3419()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test + $test}();
    }
    function test3420()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test ** $test}();
    }
    function test3421()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test << $test}();
    }
    function test3422()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test >> $test}();
    }
    function test3423()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test < $test}();
    }
    function test3424()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test <= $test}();
    }
    function test3425()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{$test <=> $test}();
    }
    function test3426()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{(array) $test}();
    }
    function test3427()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{(bool) $test}();
    }
    function test3428()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{(double) $test}();
    }
    function test3429()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{(int) $test}();
    }
    function test3430()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{(object) $test}();
    }
    function test3431()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{(string) $test}();
    }
    function test3432()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{"{$test}"}();
    }
    function test3433()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{'test'}();
    }
    function test3434()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{__CLASS__}();
    }
    function test3435()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{__DIR__}();
    }
    function test3436()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{__FILE__}();
    }
    function test3437()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{__FUNCTION__}();
    }
    function test3438()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{__METHOD__}();
    }
    function test3439()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{__NAMESPACE__}();
    }
    function test3440()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::{__TRAIT__}();
    }
    function test3441()
    {
        $this->assertTrue(0 === 0);
        fn() => self::${$test};
    }
    function test3442()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(self::${$test});
    }
    function test3443()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test]::${$test};
    }
    function test3444()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test[$test]::${$test});
    }
    function test3445()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test = $test)::${$test};
    }
    function test3446()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test = $test)::${$test});
    }
    function test3447()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test =& $test)::${$test};
    }
    function test3448()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test =& $test)::${$test});
    }
    function test3449()
    {
        $this->assertTrue(0 === 0);
        fn() => (~$test)::${$test};
    }
    function test3450()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((~$test)::${$test});
    }
    function test3451()
    {
        $this->assertTrue(0 === 0);
        fn() => (!$test)::${$test};
    }
    function test3452()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((!$test)::${$test});
    }
    function test3453()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test::${$test};
    }
    function test3454()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::$test::${$test});
    }
    function test3455()
    {
        $this->assertTrue(0 === 0);
        fn() => (clone $test)::${$test};
    }
    function test3456()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((clone $test)::${$test});
    }
    function test3457()
    {
        $this->assertTrue(0 === 0);
        fn() => (function () {
        })::${$test};
    }
    function test3458()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((function () {
        })::${$test});
    }
    function test3459()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test)::${$test};
    }
    function test3460()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test)::${$test});
    }
    function test3461()
    {
        $this->assertTrue(0 === 0);
        fn() => self::${$test};
    }
    function test3462()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(self::${$test});
    }
    function test3463()
    {
        $this->assertTrue(0 === 0);
        fn() => (empty($test))::${$test};
    }
    function test3464()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((empty($test))::${$test});
    }
    function test3465()
    {
        $this->assertTrue(0 === 0);
        fn() => (@$test)::${$test};
    }
    function test3466()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((@$test)::${$test});
    }
    function test3467()
    {
        $this->assertTrue(0 === 0);
        fn() => (eval($test))::${$test};
    }
    function test3468()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((eval($test))::${$test});
    }
    function test3469()
    {
        $this->assertTrue(0 === 0);
        fn() => $test()::${$test};
    }
    function test3470()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test()::${$test});
    }
    function test3471()
    {
        $this->assertTrue(0 === 0);
        fn() => ( $test)::${$test};
    }
    function test3472()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(( $test)::${$test});
    }
    function test3473()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test instanceof $test)::${$test};
    }
    function test3474()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test instanceof $test)::${$test});
    }
    function test3475()
    {
        $this->assertTrue(0 === 0);
        fn() => (isset($test))::${$test};
    }
    function test3476()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((isset($test))::${$test});
    }
    function test3477()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}()::${$test};
    }
    function test3478()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test}()::${$test});
    }
    function test3479()
    {
        $this->assertTrue(0 === 0);
        fn() => (new $test())::${$test};
    }
    function test3480()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((new $test())::${$test});
    }
    function test3481()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}()::${$test};
    }
    function test3482()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test}()::${$test});
    }
    function test3483()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}::${$test};
    }
    function test3484()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test?->{$test}::${$test});
    }
    function test3485()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test--)::${$test};
    }
    function test3486()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test--)::${$test});
    }
    function test3487()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test++)::${$test};
    }
    function test3488()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test++)::${$test});
    }
    function test3489()
    {
        $this->assertTrue(0 === 0);
        fn() => (--$test)::${$test};
    }
    function test3490()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((--$test)::${$test});
    }
    function test3491()
    {
        $this->assertTrue(0 === 0);
        fn() => (++$test)::${$test};
    }
    function test3492()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((++$test)::${$test});
    }
    function test3493()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}::${$test};
    }
    function test3494()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test->{$test}::${$test});
    }
    function test3495()
    {
        $this->assertTrue(0 === 0);
        fn() => (``)::${$test};
    }
    function test3496()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((``)::${$test});
    }
    function test3497()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test()::${$test};
    }
    function test3498()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::$test()::${$test});
    }
    function test3499()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test}::${$test};
    }
    function test3500()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test}::${$test});
    }
    function test3501()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ? $test : $test)::${$test};
    }
    function test3502()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test ? $test : $test)::${$test});
    }
    function test3503()
    {
        $this->assertTrue(0 === 0);
        fn() => (-$test)::${$test};
    }
    function test3504()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((-$test)::${$test});
    }
    function test3505()
    {
        $this->assertTrue(0 === 0);
        fn() => (+$test)::${$test};
    }
    function test3506()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((+$test)::${$test});
    }
    function test3507()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test}::${$test};
    }
    function test3508()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test}::${$test});
    }
    function test3509()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield from $test)::${$test};
    }
    function test3510()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((yield from $test)::${$test});
    }
    function test3511()
    {
        $this->assertTrue(0 === 0);
        fn() => ((yield $test => $test))::${$test};
    }
    function test3512()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(((yield $test => $test))::${$test});
    }
    function test3513()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test &= $test)::${$test};
    }
    function test3514()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test &= $test)::${$test});
    }
    function test3515()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test |= $test)::${$test};
    }
    function test3516()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test |= $test)::${$test});
    }
    function test3517()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^= $test)::${$test};
    }
    function test3518()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test ^= $test)::${$test});
    }
    function test3519()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ??= $test)::${$test};
    }
    function test3520()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test ??= $test)::${$test});
    }
    function test3521()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test .= $test)::${$test};
    }
    function test3522()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test .= $test)::${$test});
    }
    function test3523()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test /= $test)::${$test};
    }
    function test3524()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test /= $test)::${$test});
    }
    function test3525()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test -= $test)::${$test};
    }
    function test3526()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test -= $test)::${$test});
    }
    function test3527()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test %= $test)::${$test};
    }
    function test3528()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test %= $test)::${$test});
    }
    function test3529()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test *= $test)::${$test};
    }
    function test3530()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test *= $test)::${$test});
    }
    function test3531()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test += $test)::${$test};
    }
    function test3532()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test += $test)::${$test});
    }
    function test3533()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test **= $test)::${$test};
    }
    function test3534()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test **= $test)::${$test});
    }
    function test3535()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <<= $test)::${$test};
    }
    function test3536()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test <<= $test)::${$test});
    }
    function test3537()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >>= $test)::${$test};
    }
    function test3538()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test >>= $test)::${$test});
    }
    function test3539()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test & $test)::${$test};
    }
    function test3540()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test & $test)::${$test});
    }
    function test3541()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test | $test)::${$test};
    }
    function test3542()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test | $test)::${$test});
    }
    function test3543()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^ $test)::${$test};
    }
    function test3544()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test ^ $test)::${$test});
    }
    function test3545()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test && $test)::${$test};
    }
    function test3546()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test && $test)::${$test});
    }
    function test3547()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test || $test)::${$test};
    }
    function test3548()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test || $test)::${$test});
    }
    function test3549()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ?? $test)::${$test};
    }
    function test3550()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test ?? $test)::${$test});
    }
    function test3551()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test . $test)::${$test};
    }
    function test3552()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test . $test)::${$test});
    }
    function test3553()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test / $test)::${$test};
    }
    function test3554()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test / $test)::${$test});
    }
    function test3555()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test == $test)::${$test};
    }
    function test3556()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test == $test)::${$test});
    }
    function test3557()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test > $test)::${$test};
    }
    function test3558()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test > $test)::${$test});
    }
    function test3559()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >= $test)::${$test};
    }
    function test3560()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test >= $test)::${$test});
    }
    function test3561()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test === $test)::${$test};
    }
    function test3562()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test === $test)::${$test});
    }
    function test3563()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test and $test)::${$test};
    }
    function test3564()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test and $test)::${$test});
    }
    function test3565()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test or $test)::${$test};
    }
    function test3566()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test or $test)::${$test});
    }
    function test3567()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test xor $test)::${$test};
    }
    function test3568()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test xor $test)::${$test});
    }
    function test3569()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test - $test)::${$test};
    }
    function test3570()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test - $test)::${$test});
    }
    function test3571()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test % $test)::${$test};
    }
    function test3572()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test % $test)::${$test});
    }
    function test3573()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test * $test)::${$test};
    }
    function test3574()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test * $test)::${$test});
    }
    function test3575()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test != $test)::${$test};
    }
    function test3576()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test != $test)::${$test});
    }
    function test3577()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test !== $test)::${$test};
    }
    function test3578()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test !== $test)::${$test});
    }
    function test3579()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test + $test)::${$test};
    }
    function test3580()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test + $test)::${$test});
    }
    function test3581()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ** $test)::${$test};
    }
    function test3582()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test ** $test)::${$test});
    }
    function test3583()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test << $test)::${$test};
    }
    function test3584()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test << $test)::${$test});
    }
    function test3585()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >> $test)::${$test};
    }
    function test3586()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test >> $test)::${$test});
    }
    function test3587()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test < $test)::${$test};
    }
    function test3588()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test < $test)::${$test});
    }
    function test3589()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <= $test)::${$test};
    }
    function test3590()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test <= $test)::${$test});
    }
    function test3591()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <=> $test)::${$test};
    }
    function test3592()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(($test <=> $test)::${$test});
    }
    function test3593()
    {
        $this->assertTrue(0 === 0);
        fn() => ((array) $test)::${$test};
    }
    function test3594()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(((array) $test)::${$test});
    }
    function test3595()
    {
        $this->assertTrue(0 === 0);
        fn() => ((bool) $test)::${$test};
    }
    function test3596()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(((bool) $test)::${$test});
    }
    function test3597()
    {
        $this->assertTrue(0 === 0);
        fn() => ((double) $test)::${$test};
    }
    function test3598()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(((double) $test)::${$test});
    }
    function test3599()
    {
        $this->assertTrue(0 === 0);
        fn() => ((int) $test)::${$test};
    }
    function test3600()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(((int) $test)::${$test});
    }
    function test3601()
    {
        $this->assertTrue(0 === 0);
        fn() => ((object) $test)::${$test};
    }
    function test3602()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(((object) $test)::${$test});
    }
    function test3603()
    {
        $this->assertTrue(0 === 0);
        fn() => ((string) $test)::${$test};
    }
    function test3604()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(((string) $test)::${$test});
    }
    function test3605()
    {
        $this->assertTrue(0 === 0);
        fn() => ("{$test}")::${$test};
    }
    function test3606()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(("{$test}")::${$test});
    }
    function test3607()
    {
        $this->assertTrue(0 === 0);
        fn() => 'test'::${$test};
    }
    function test3608()
    {
        $this->assertTrue(0 === 0);
        fn() => isset('test'::${$test});
    }
    function test3609()
    {
        $this->assertTrue(0 === 0);
        fn() => (__CLASS__)::${$test};
    }
    function test3610()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((__CLASS__)::${$test});
    }
    function test3611()
    {
        $this->assertTrue(0 === 0);
        fn() => (__DIR__)::${$test};
    }
    function test3612()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((__DIR__)::${$test});
    }
    function test3613()
    {
        $this->assertTrue(0 === 0);
        fn() => (__FILE__)::${$test};
    }
    function test3614()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((__FILE__)::${$test});
    }
    function test3615()
    {
        $this->assertTrue(0 === 0);
        fn() => (__FUNCTION__)::${$test};
    }
    function test3616()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((__FUNCTION__)::${$test});
    }
    function test3617()
    {
        $this->assertTrue(0 === 0);
        fn() => (__METHOD__)::${$test};
    }
    function test3618()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((__METHOD__)::${$test});
    }
    function test3619()
    {
        $this->assertTrue(0 === 0);
        fn() => (__NAMESPACE__)::${$test};
    }
    function test3620()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((__NAMESPACE__)::${$test});
    }
    function test3621()
    {
        $this->assertTrue(0 === 0);
        fn() => (__TRAIT__)::${$test};
    }
    function test3622()
    {
        $this->assertTrue(0 === 0);
        fn() => isset((__TRAIT__)::${$test});
    }
    function test3623()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test;
    }
    function test3624()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::$test);
    }
    function test3625()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test;
    }
    function test3626()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::$test);
    }
    function test3627()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test[$test]};
    }
    function test3628()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test[$test]});
    }
    function test3629()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${[]};
    }
    function test3630()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${[]});
    }
    function test3631()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test = $test};
    }
    function test3632()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test = $test});
    }
    function test3633()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test =& $test};
    }
    function test3634()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test =& $test});
    }
    function test3635()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${~$test};
    }
    function test3636()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${~$test});
    }
    function test3637()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${!$test};
    }
    function test3638()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${!$test});
    }
    function test3639()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test::$test};
    }
    function test3640()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test::$test});
    }
    function test3641()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${clone $test};
    }
    function test3642()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${clone $test});
    }
    function test3643()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${function () {
        }};
    }
    function test3644()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${function () {
        }});
    }
    function test3645()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test};
    }
    function test3646()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test});
    }
    function test3647()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${self};
    }
    function test3648()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${self});
    }
    function test3649()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${empty($test)};
    }
    function test3650()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${empty($test)});
    }
    function test3651()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${@$test};
    }
    function test3652()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${@$test});
    }
    function test3653()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${eval($test)};
    }
    function test3654()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${eval($test)});
    }
    function test3655()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test()};
    }
    function test3656()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test()});
    }
    function test3657()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${ $test};
    }
    function test3658()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${ $test});
    }
    function test3659()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test instanceof $test};
    }
    function test3660()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test instanceof $test});
    }
    function test3661()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${isset($test)};
    }
    function test3662()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${isset($test)});
    }
    function test3663()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${match ($test) {
        }};
    }
    function test3664()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${match ($test) {
        }});
    }
    function test3665()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test->{$test}()};
    }
    function test3666()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test->{$test}()});
    }
    function test3667()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${new $test()};
    }
    function test3668()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${new $test()});
    }
    function test3669()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test?->{$test}()};
    }
    function test3670()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test?->{$test}()});
    }
    function test3671()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test?->{$test}};
    }
    function test3672()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test?->{$test}});
    }
    function test3673()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test--};
    }
    function test3674()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test--});
    }
    function test3675()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test++};
    }
    function test3676()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test++});
    }
    function test3677()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${--$test};
    }
    function test3678()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${--$test});
    }
    function test3679()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${++$test};
    }
    function test3680()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${++$test});
    }
    function test3681()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${print $test};
    }
    function test3682()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${print $test});
    }
    function test3683()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test->{$test}};
    }
    function test3684()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test->{$test}});
    }
    function test3685()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${``};
    }
    function test3686()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${``});
    }
    function test3687()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test::$test()};
    }
    function test3688()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test::$test()});
    }
    function test3689()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test::${$test}};
    }
    function test3690()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test::${$test}});
    }
    function test3691()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test ? $test : $test};
    }
    function test3692()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test ? $test : $test});
    }
    function test3693()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${throw $test};
    }
    function test3694()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${throw $test});
    }
    function test3695()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${-$test};
    }
    function test3696()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${-$test});
    }
    function test3697()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${+$test};
    }
    function test3698()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${+$test});
    }
    function test3699()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${${$test}};
    }
    function test3700()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${${$test}});
    }
    function test3701()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${yield from $test};
    }
    function test3702()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${yield from $test});
    }
    function test3703()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${(yield $test => $test)};
    }
    function test3704()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${(yield $test => $test)});
    }
    function test3705()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test &= $test};
    }
    function test3706()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test &= $test});
    }
    function test3707()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test |= $test};
    }
    function test3708()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test |= $test});
    }
    function test3709()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test ^= $test};
    }
    function test3710()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test ^= $test});
    }
    function test3711()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test ??= $test};
    }
    function test3712()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test ??= $test});
    }
    function test3713()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test .= $test};
    }
    function test3714()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test .= $test});
    }
    function test3715()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test /= $test};
    }
    function test3716()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test /= $test});
    }
    function test3717()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test -= $test};
    }
    function test3718()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test -= $test});
    }
    function test3719()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test %= $test};
    }
    function test3720()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test %= $test});
    }
    function test3721()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test *= $test};
    }
    function test3722()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test *= $test});
    }
    function test3723()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test += $test};
    }
    function test3724()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test += $test});
    }
    function test3725()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test **= $test};
    }
    function test3726()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test **= $test});
    }
    function test3727()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test <<= $test};
    }
    function test3728()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test <<= $test});
    }
    function test3729()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test >>= $test};
    }
    function test3730()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test >>= $test});
    }
    function test3731()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test & $test};
    }
    function test3732()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test & $test});
    }
    function test3733()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test | $test};
    }
    function test3734()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test | $test});
    }
    function test3735()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test ^ $test};
    }
    function test3736()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test ^ $test});
    }
    function test3737()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test && $test};
    }
    function test3738()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test && $test});
    }
    function test3739()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test || $test};
    }
    function test3740()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test || $test});
    }
    function test3741()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test ?? $test};
    }
    function test3742()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test ?? $test});
    }
    function test3743()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test . $test};
    }
    function test3744()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test . $test});
    }
    function test3745()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test / $test};
    }
    function test3746()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test / $test});
    }
    function test3747()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test == $test};
    }
    function test3748()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test == $test});
    }
    function test3749()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test > $test};
    }
    function test3750()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test > $test});
    }
    function test3751()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test >= $test};
    }
    function test3752()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test >= $test});
    }
    function test3753()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test === $test};
    }
    function test3754()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test === $test});
    }
    function test3755()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test and $test};
    }
    function test3756()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test and $test});
    }
    function test3757()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test or $test};
    }
    function test3758()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test or $test});
    }
    function test3759()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test xor $test};
    }
    function test3760()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test xor $test});
    }
    function test3761()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test - $test};
    }
    function test3762()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test - $test});
    }
    function test3763()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test % $test};
    }
    function test3764()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test % $test});
    }
    function test3765()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test * $test};
    }
    function test3766()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test * $test});
    }
    function test3767()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test != $test};
    }
    function test3768()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test != $test});
    }
    function test3769()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test !== $test};
    }
    function test3770()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test !== $test});
    }
    function test3771()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test + $test};
    }
    function test3772()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test + $test});
    }
    function test3773()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test ** $test};
    }
    function test3774()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test ** $test});
    }
    function test3775()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test << $test};
    }
    function test3776()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test << $test});
    }
    function test3777()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test >> $test};
    }
    function test3778()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test >> $test});
    }
    function test3779()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test < $test};
    }
    function test3780()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test < $test});
    }
    function test3781()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test <= $test};
    }
    function test3782()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test <= $test});
    }
    function test3783()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test <=> $test};
    }
    function test3784()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${$test <=> $test});
    }
    function test3785()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${(array) $test};
    }
    function test3786()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${(array) $test});
    }
    function test3787()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${(bool) $test};
    }
    function test3788()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${(bool) $test});
    }
    function test3789()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${(double) $test};
    }
    function test3790()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${(double) $test});
    }
    function test3791()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${(int) $test};
    }
    function test3792()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${(int) $test});
    }
    function test3793()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${(object) $test};
    }
    function test3794()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${(object) $test});
    }
    function test3795()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${(string) $test};
    }
    function test3796()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${(string) $test});
    }
    function test3797()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${0.0};
    }
    function test3798()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${0.0});
    }
    function test3799()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${"{$test}"};
    }
    function test3800()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${"{$test}"});
    }
    function test3801()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${0};
    }
    function test3802()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${0});
    }
    function test3803()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${'test'};
    }
    function test3804()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${'test'});
    }
    function test3805()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${__CLASS__};
    }
    function test3806()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${__CLASS__});
    }
    function test3807()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${__DIR__};
    }
    function test3808()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${__DIR__});
    }
    function test3809()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${__FILE__};
    }
    function test3810()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${__FILE__});
    }
    function test3811()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${__FUNCTION__};
    }
    function test3812()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${__FUNCTION__});
    }
    function test3813()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${__LINE__};
    }
    function test3814()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${__LINE__});
    }
    function test3815()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${__METHOD__};
    }
    function test3816()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${__METHOD__});
    }
    function test3817()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${__NAMESPACE__};
    }
    function test3818()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${__NAMESPACE__});
    }
    function test3819()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${__TRAIT__};
    }
    function test3820()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test::${__TRAIT__});
    }
    function test3821()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] ? $test : $test;
    }
    function test3822()
    {
        $this->assertTrue(0 === 0);
        fn() => [] ? $test : $test;
    }
    function test3823()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test = $test) ? $test : $test;
    }
    function test3824()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test =& $test) ? $test : $test;
    }
    function test3825()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test ? $test : $test;
    }
    function test3826()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test ? $test : $test;
    }
    function test3827()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test ? $test : $test;
    }
    function test3828()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test ? $test : $test;
    }
    function test3829()
    {
        $this->assertTrue(0 === 0);
        fn() => function () {
        } ? $test : $test;
    }
    function test3830()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test;
    }
    function test3831()
    {
        $this->assertTrue(0 === 0);
        fn() => self ? $test : $test;
    }
    function test3832()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test) ? $test : $test;
    }
    function test3833()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test ? $test : $test;
    }
    function test3834()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test) ? $test : $test;
    }
    function test3835()
    {
        $this->assertTrue(0 === 0);
        fn() => $test() ? $test : $test;
    }
    function test3836()
    {
        $this->assertTrue(0 === 0);
        fn() => ( $test) ? $test : $test;
    }
    function test3837()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof $test ? $test : $test;
    }
    function test3838()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test) ? $test : $test;
    }
    function test3839()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test) {
        } ? $test : $test;
    }
    function test3840()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}() ? $test : $test;
    }
    function test3841()
    {
        $this->assertTrue(0 === 0);
        fn() => new $test() ? $test : $test;
    }
    function test3842()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}() ? $test : $test;
    }
    function test3843()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test} ? $test : $test;
    }
    function test3844()
    {
        $this->assertTrue(0 === 0);
        fn() => $test-- ? $test : $test;
    }
    function test3845()
    {
        $this->assertTrue(0 === 0);
        fn() => $test++ ? $test : $test;
    }
    function test3846()
    {
        $this->assertTrue(0 === 0);
        fn() => --$test ? $test : $test;
    }
    function test3847()
    {
        $this->assertTrue(0 === 0);
        fn() => ++$test ? $test : $test;
    }
    function test3848()
    {
        $this->assertTrue(0 === 0);
        fn() => (print $test) ? $test : $test;
    }
    function test3849()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} ? $test : $test;
    }
    function test3850()
    {
        $this->assertTrue(0 === 0);
        fn() => `` ? $test : $test;
    }
    function test3851()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test() ? $test : $test;
    }
    function test3852()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} ? $test : $test;
    }
    function test3853()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ? $test : $test) ? $test : $test;
    }
    function test3854()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test ? $test : $test;
    }
    function test3855()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test ? $test : $test;
    }
    function test3856()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test ? $test : $test;
    }
    function test3857()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} ? $test : $test;
    }
    function test3858()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield from $test) ? $test : $test;
    }
    function test3859()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test) ? $test : $test;
    }
    function test3860()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test &= $test) ? $test : $test;
    }
    function test3861()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test |= $test) ? $test : $test;
    }
    function test3862()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^= $test) ? $test : $test;
    }
    function test3863()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ??= $test) ? $test : $test;
    }
    function test3864()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test .= $test) ? $test : $test;
    }
    function test3865()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test /= $test) ? $test : $test;
    }
    function test3866()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test -= $test) ? $test : $test;
    }
    function test3867()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test %= $test) ? $test : $test;
    }
    function test3868()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test *= $test) ? $test : $test;
    }
    function test3869()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test += $test) ? $test : $test;
    }
    function test3870()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test **= $test) ? $test : $test;
    }
    function test3871()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <<= $test) ? $test : $test;
    }
    function test3872()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >>= $test) ? $test : $test;
    }
    function test3873()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test ? $test : $test;
    }
    function test3874()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test ? $test : $test;
    }
    function test3875()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test ? $test : $test;
    }
    function test3876()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test ? $test : $test;
    }
    function test3877()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test ? $test : $test;
    }
    function test3878()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test ? $test : $test;
    }
    function test3879()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test ? $test : $test;
    }
    function test3880()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test ? $test : $test;
    }
    function test3881()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test ? $test : $test;
    }
    function test3882()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test ? $test : $test;
    }
    function test3883()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test ? $test : $test;
    }
    function test3884()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test ? $test : $test;
    }
    function test3885()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test and $test) ? $test : $test;
    }
    function test3886()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test or $test) ? $test : $test;
    }
    function test3887()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test xor $test) ? $test : $test;
    }
    function test3888()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test ? $test : $test;
    }
    function test3889()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test ? $test : $test;
    }
    function test3890()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test ? $test : $test;
    }
    function test3891()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test ? $test : $test;
    }
    function test3892()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test ? $test : $test;
    }
    function test3893()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test ? $test : $test;
    }
    function test3894()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test ? $test : $test;
    }
    function test3895()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test ? $test : $test;
    }
    function test3896()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test ? $test : $test;
    }
    function test3897()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test ? $test : $test;
    }
    function test3898()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test ? $test : $test;
    }
    function test3899()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test ? $test : $test;
    }
    function test3900()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test ? $test : $test;
    }
    function test3901()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test ? $test : $test;
    }
    function test3902()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test ? $test : $test;
    }
    function test3903()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test ? $test : $test;
    }
    function test3904()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test ? $test : $test;
    }
    function test3905()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test ? $test : $test;
    }
    function test3906()
    {
        $this->assertTrue(0 === 0);
        fn() => 0.0 ? $test : $test;
    }
    function test3907()
    {
        $this->assertTrue(0 === 0);
        fn() => "{$test}" ? $test : $test;
    }
    function test3908()
    {
        $this->assertTrue(0 === 0);
        fn() => 0 ? $test : $test;
    }
    function test3909()
    {
        $this->assertTrue(0 === 0);
        fn() => 'test' ? $test : $test;
    }
    function test3910()
    {
        $this->assertTrue(0 === 0);
        fn() => __CLASS__ ? $test : $test;
    }
    function test3911()
    {
        $this->assertTrue(0 === 0);
        fn() => __DIR__ ? $test : $test;
    }
    function test3912()
    {
        $this->assertTrue(0 === 0);
        fn() => __FILE__ ? $test : $test;
    }
    function test3913()
    {
        $this->assertTrue(0 === 0);
        fn() => __FUNCTION__ ? $test : $test;
    }
    function test3914()
    {
        $this->assertTrue(0 === 0);
        fn() => __LINE__ ? $test : $test;
    }
    function test3915()
    {
        $this->assertTrue(0 === 0);
        fn() => __METHOD__ ? $test : $test;
    }
    function test3916()
    {
        $this->assertTrue(0 === 0);
        fn() => __NAMESPACE__ ? $test : $test;
    }
    function test3917()
    {
        $this->assertTrue(0 === 0);
        fn() => __TRAIT__ ? $test : $test;
    }
    function test3918()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?: $test;
    }
    function test3919()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test[$test] : $test;
    }
    function test3920()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? [] : $test;
    }
    function test3921()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test = $test : $test;
    }
    function test3922()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test =& $test : $test;
    }
    function test3923()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? ~$test : $test;
    }
    function test3924()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? !$test : $test;
    }
    function test3925()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test::$test : $test;
    }
    function test3926()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? clone $test : $test;
    }
    function test3927()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? function () {
        } : $test;
    }
    function test3928()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test;
    }
    function test3929()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? self : $test;
    }
    function test3930()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? empty($test) : $test;
    }
    function test3931()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? @$test : $test;
    }
    function test3932()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? eval($test) : $test;
    }
    function test3933()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test() : $test;
    }
    function test3934()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?  $test : $test;
    }
    function test3935()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test instanceof $test : $test;
    }
    function test3936()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? isset($test) : $test;
    }
    function test3937()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? match ($test) {
        } : $test;
    }
    function test3938()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test->{$test}() : $test;
    }
    function test3939()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? new $test() : $test;
    }
    function test3940()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test?->{$test}() : $test;
    }
    function test3941()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test?->{$test} : $test;
    }
    function test3942()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test-- : $test;
    }
    function test3943()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test++ : $test;
    }
    function test3944()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? --$test : $test;
    }
    function test3945()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? ++$test : $test;
    }
    function test3946()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? print $test : $test;
    }
    function test3947()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test->{$test} : $test;
    }
    function test3948()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? `` : $test;
    }
    function test3949()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test::$test() : $test;
    }
    function test3950()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test::${$test} : $test;
    }
    function test3951()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test ? $test : $test : $test;
    }
    function test3952()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? throw $test : $test;
    }
    function test3953()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? -$test : $test;
    }
    function test3954()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? +$test : $test;
    }
    function test3955()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? ${$test} : $test;
    }
    function test3956()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? yield from $test : $test;
    }
    function test3957()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? (yield $test => $test) : $test;
    }
    function test3958()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test &= $test : $test;
    }
    function test3959()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test |= $test : $test;
    }
    function test3960()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test ^= $test : $test;
    }
    function test3961()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test ??= $test : $test;
    }
    function test3962()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test .= $test : $test;
    }
    function test3963()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test /= $test : $test;
    }
    function test3964()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test -= $test : $test;
    }
    function test3965()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test %= $test : $test;
    }
    function test3966()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test *= $test : $test;
    }
    function test3967()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test += $test : $test;
    }
    function test3968()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test **= $test : $test;
    }
    function test3969()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test <<= $test : $test;
    }
    function test3970()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test >>= $test : $test;
    }
    function test3971()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test & $test : $test;
    }
    function test3972()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test | $test : $test;
    }
    function test3973()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test ^ $test : $test;
    }
    function test3974()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test && $test : $test;
    }
    function test3975()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test || $test : $test;
    }
    function test3976()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test ?? $test : $test;
    }
    function test3977()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test . $test : $test;
    }
    function test3978()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test / $test : $test;
    }
    function test3979()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test == $test : $test;
    }
    function test3980()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test > $test : $test;
    }
    function test3981()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test >= $test : $test;
    }
    function test3982()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test === $test : $test;
    }
    function test3983()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test and $test : $test;
    }
    function test3984()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test or $test : $test;
    }
    function test3985()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test xor $test : $test;
    }
    function test3986()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test - $test : $test;
    }
    function test3987()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test % $test : $test;
    }
    function test3988()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test * $test : $test;
    }
    function test3989()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test != $test : $test;
    }
    function test3990()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test !== $test : $test;
    }
    function test3991()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test + $test : $test;
    }
    function test3992()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test ** $test : $test;
    }
    function test3993()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test << $test : $test;
    }
    function test3994()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test >> $test : $test;
    }
    function test3995()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test < $test : $test;
    }
    function test3996()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test <= $test : $test;
    }
    function test3997()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test <=> $test : $test;
    }
    function test3998()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? (array) $test : $test;
    }
    function test3999()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? (bool) $test : $test;
    }
    function test4000()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? (double) $test : $test;
    }
    function test4001()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? (int) $test : $test;
    }
    function test4002()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? (object) $test : $test;
    }
    function test4003()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? (string) $test : $test;
    }
    function test4004()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? 0.0 : $test;
    }
    function test4005()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? "{$test}" : $test;
    }
    function test4006()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? 0 : $test;
    }
    function test4007()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? 'test' : $test;
    }
    function test4008()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? __CLASS__ : $test;
    }
    function test4009()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? __DIR__ : $test;
    }
    function test4010()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? __FILE__ : $test;
    }
    function test4011()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? __FUNCTION__ : $test;
    }
    function test4012()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? __LINE__ : $test;
    }
    function test4013()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? __METHOD__ : $test;
    }
    function test4014()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? __NAMESPACE__ : $test;
    }
    function test4015()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? __TRAIT__ : $test;
    }
    function test4016()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test[$test];
    }
    function test4017()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : [];
    }
    function test4018()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : ($test = $test);
    }
    function test4019()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : ($test =& $test);
    }
    function test4020()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : ~$test;
    }
    function test4021()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : !$test;
    }
    function test4022()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test::$test;
    }
    function test4023()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : clone $test;
    }
    function test4024()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : function () {
        };
    }
    function test4025()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test;
    }
    function test4026()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : self;
    }
    function test4027()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : empty($test);
    }
    function test4028()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : @$test;
    }
    function test4029()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : eval($test);
    }
    function test4030()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test();
    }
    function test4031()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : ( $test);
    }
    function test4032()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test instanceof $test;
    }
    function test4033()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : isset($test);
    }
    function test4034()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : match ($test) {
        };
    }
    function test4035()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test->{$test}();
    }
    function test4036()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : new $test();
    }
    function test4037()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test?->{$test}();
    }
    function test4038()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test?->{$test};
    }
    function test4039()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test--;
    }
    function test4040()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test++;
    }
    function test4041()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : --$test;
    }
    function test4042()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : ++$test;
    }
    function test4043()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : (print $test);
    }
    function test4044()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test->{$test};
    }
    function test4045()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : ``;
    }
    function test4046()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test::$test();
    }
    function test4047()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test::${$test};
    }
    function test4048()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : ($test ? $test : $test);
    }
    function test4049()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : throw $test;
    }
    function test4050()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : -$test;
    }
    function test4051()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : +$test;
    }
    function test4052()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : ${$test};
    }
    function test4053()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : (yield from $test);
    }
    function test4054()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : (yield $test => $test);
    }
    function test4055()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : ($test &= $test);
    }
    function test4056()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : ($test |= $test);
    }
    function test4057()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : ($test ^= $test);
    }
    function test4058()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : ($test ??= $test);
    }
    function test4059()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : ($test .= $test);
    }
    function test4060()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : ($test /= $test);
    }
    function test4061()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : ($test -= $test);
    }
    function test4062()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : ($test %= $test);
    }
    function test4063()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : ($test *= $test);
    }
    function test4064()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : ($test += $test);
    }
    function test4065()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : ($test **= $test);
    }
    function test4066()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : ($test <<= $test);
    }
    function test4067()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : ($test >>= $test);
    }
    function test4068()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test & $test;
    }
    function test4069()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test | $test;
    }
    function test4070()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test ^ $test;
    }
    function test4071()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test && $test;
    }
    function test4072()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test || $test;
    }
    function test4073()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test ?? $test;
    }
    function test4074()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test . $test;
    }
    function test4075()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test / $test;
    }
    function test4076()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test == $test;
    }
    function test4077()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test > $test;
    }
    function test4078()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test >= $test;
    }
    function test4079()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test === $test;
    }
    function test4080()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : ($test and $test);
    }
    function test4081()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : ($test or $test);
    }
    function test4082()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : ($test xor $test);
    }
    function test4083()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test - $test;
    }
    function test4084()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test % $test;
    }
    function test4085()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test * $test;
    }
    function test4086()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test != $test;
    }
    function test4087()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test !== $test;
    }
    function test4088()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test + $test;
    }
    function test4089()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test ** $test;
    }
    function test4090()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test << $test;
    }
    function test4091()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test >> $test;
    }
    function test4092()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test < $test;
    }
    function test4093()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test <= $test;
    }
    function test4094()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test <=> $test;
    }
    function test4095()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : (array) $test;
    }
    function test4096()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : (bool) $test;
    }
    function test4097()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : (double) $test;
    }
    function test4098()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : (int) $test;
    }
    function test4099()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : (object) $test;
    }
    function test4100()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : (string) $test;
    }
    function test4101()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : 0.0;
    }
    function test4102()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : "{$test}";
    }
    function test4103()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : 0;
    }
    function test4104()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : 'test';
    }
    function test4105()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : __CLASS__;
    }
    function test4106()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : __DIR__;
    }
    function test4107()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : __FILE__;
    }
    function test4108()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : __FUNCTION__;
    }
    function test4109()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : __LINE__;
    }
    function test4110()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : __METHOD__;
    }
    function test4111()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : __NAMESPACE__;
    }
    function test4112()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : __TRAIT__;
    }
    function test4113()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test[$test];
    }
    function test4114()
    {
        $this->assertTrue(0 === 0);
        fn() => throw [];
    }
    function test4115()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test = $test;
    }
    function test4116()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test =& $test;
    }
    function test4117()
    {
        $this->assertTrue(0 === 0);
        fn() => throw ~$test;
    }
    function test4118()
    {
        $this->assertTrue(0 === 0);
        fn() => throw !$test;
    }
    function test4119()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test::$test;
    }
    function test4120()
    {
        $this->assertTrue(0 === 0);
        fn() => throw clone $test;
    }
    function test4121()
    {
        $this->assertTrue(0 === 0);
        fn() => throw function () {
        };
    }
    function test4122()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test;
    }
    function test4123()
    {
        $this->assertTrue(0 === 0);
        fn() => throw self;
    }
    function test4124()
    {
        $this->assertTrue(0 === 0);
        fn() => throw empty($test);
    }
    function test4125()
    {
        $this->assertTrue(0 === 0);
        fn() => throw @$test;
    }
    function test4126()
    {
        $this->assertTrue(0 === 0);
        fn() => throw eval($test);
    }
    function test4127()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test();
    }
    function test4128()
    {
        $this->assertTrue(0 === 0);
        fn() => throw  $test;
    }
    function test4129()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test instanceof $test;
    }
    function test4130()
    {
        $this->assertTrue(0 === 0);
        fn() => throw isset($test);
    }
    function test4131()
    {
        $this->assertTrue(0 === 0);
        fn() => throw match ($test) {
        };
    }
    function test4132()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test->{$test}();
    }
    function test4133()
    {
        $this->assertTrue(0 === 0);
        fn() => throw new $test();
    }
    function test4134()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test?->{$test}();
    }
    function test4135()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test?->{$test};
    }
    function test4136()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test--;
    }
    function test4137()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test++;
    }
    function test4138()
    {
        $this->assertTrue(0 === 0);
        fn() => throw --$test;
    }
    function test4139()
    {
        $this->assertTrue(0 === 0);
        fn() => throw ++$test;
    }
    function test4140()
    {
        $this->assertTrue(0 === 0);
        fn() => throw print $test;
    }
    function test4141()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test->{$test};
    }
    function test4142()
    {
        $this->assertTrue(0 === 0);
        fn() => throw ``;
    }
    function test4143()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test::$test();
    }
    function test4144()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test::${$test};
    }
    function test4145()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test ? $test : $test;
    }
    function test4146()
    {
        $this->assertTrue(0 === 0);
        fn() => throw throw $test;
    }
    function test4147()
    {
        $this->assertTrue(0 === 0);
        fn() => throw -$test;
    }
    function test4148()
    {
        $this->assertTrue(0 === 0);
        fn() => throw +$test;
    }
    function test4149()
    {
        $this->assertTrue(0 === 0);
        fn() => throw ${$test};
    }
    function test4150()
    {
        $this->assertTrue(0 === 0);
        fn() => throw yield from $test;
    }
    function test4151()
    {
        $this->assertTrue(0 === 0);
        fn() => throw (yield $test => $test);
    }
    function test4152()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test &= $test;
    }
    function test4153()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test |= $test;
    }
    function test4154()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test ^= $test;
    }
    function test4155()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test ??= $test;
    }
    function test4156()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test .= $test;
    }
    function test4157()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test /= $test;
    }
    function test4158()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test -= $test;
    }
    function test4159()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test %= $test;
    }
    function test4160()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test *= $test;
    }
    function test4161()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test += $test;
    }
    function test4162()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test **= $test;
    }
    function test4163()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test <<= $test;
    }
    function test4164()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test >>= $test;
    }
    function test4165()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test & $test;
    }
    function test4166()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test | $test;
    }
    function test4167()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test ^ $test;
    }
    function test4168()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test && $test;
    }
    function test4169()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test || $test;
    }
    function test4170()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test ?? $test;
    }
    function test4171()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test . $test;
    }
    function test4172()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test / $test;
    }
    function test4173()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test == $test;
    }
    function test4174()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test > $test;
    }
    function test4175()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test >= $test;
    }
    function test4176()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test === $test;
    }
    function test4177()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test and $test;
    }
    function test4178()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test or $test;
    }
    function test4179()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test xor $test;
    }
    function test4180()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test - $test;
    }
    function test4181()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test % $test;
    }
    function test4182()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test * $test;
    }
    function test4183()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test != $test;
    }
    function test4184()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test !== $test;
    }
    function test4185()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test + $test;
    }
    function test4186()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test ** $test;
    }
    function test4187()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test << $test;
    }
    function test4188()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test >> $test;
    }
    function test4189()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test < $test;
    }
    function test4190()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test <= $test;
    }
    function test4191()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test <=> $test;
    }
    function test4192()
    {
        $this->assertTrue(0 === 0);
        fn() => throw (array) $test;
    }
    function test4193()
    {
        $this->assertTrue(0 === 0);
        fn() => throw (bool) $test;
    }
    function test4194()
    {
        $this->assertTrue(0 === 0);
        fn() => throw (double) $test;
    }
    function test4195()
    {
        $this->assertTrue(0 === 0);
        fn() => throw (int) $test;
    }
    function test4196()
    {
        $this->assertTrue(0 === 0);
        fn() => throw (object) $test;
    }
    function test4197()
    {
        $this->assertTrue(0 === 0);
        fn() => throw (string) $test;
    }
    function test4198()
    {
        $this->assertTrue(0 === 0);
        fn() => throw 0.0;
    }
    function test4199()
    {
        $this->assertTrue(0 === 0);
        fn() => throw "{$test}";
    }
    function test4200()
    {
        $this->assertTrue(0 === 0);
        fn() => throw 0;
    }
    function test4201()
    {
        $this->assertTrue(0 === 0);
        fn() => throw 'test';
    }
    function test4202()
    {
        $this->assertTrue(0 === 0);
        fn() => throw __CLASS__;
    }
    function test4203()
    {
        $this->assertTrue(0 === 0);
        fn() => throw __DIR__;
    }
    function test4204()
    {
        $this->assertTrue(0 === 0);
        fn() => throw __FILE__;
    }
    function test4205()
    {
        $this->assertTrue(0 === 0);
        fn() => throw __FUNCTION__;
    }
    function test4206()
    {
        $this->assertTrue(0 === 0);
        fn() => throw __LINE__;
    }
    function test4207()
    {
        $this->assertTrue(0 === 0);
        fn() => throw __METHOD__;
    }
    function test4208()
    {
        $this->assertTrue(0 === 0);
        fn() => throw __NAMESPACE__;
    }
    function test4209()
    {
        $this->assertTrue(0 === 0);
        fn() => throw __TRAIT__;
    }
    function test4210()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test[$test];
    }
    function test4211()
    {
        $this->assertTrue(0 === 0);
        fn() => -[];
    }
    function test4212()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test = $test);
    }
    function test4213()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test =& $test);
    }
    function test4214()
    {
        $this->assertTrue(0 === 0);
        fn() => -~$test;
    }
    function test4215()
    {
        $this->assertTrue(0 === 0);
        fn() => -(!$test);
    }
    function test4216()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test::$test;
    }
    function test4217()
    {
        $this->assertTrue(0 === 0);
        fn() => -clone $test;
    }
    function test4218()
    {
        $this->assertTrue(0 === 0);
        fn() => -function () {
        };
    }
    function test4219()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test;
    }
    function test4220()
    {
        $this->assertTrue(0 === 0);
        fn() => -self;
    }
    function test4221()
    {
        $this->assertTrue(0 === 0);
        fn() => -empty($test);
    }
    function test4222()
    {
        $this->assertTrue(0 === 0);
        fn() => -@$test;
    }
    function test4223()
    {
        $this->assertTrue(0 === 0);
        fn() => -eval($test);
    }
    function test4224()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test();
    }
    function test4225()
    {
        $this->assertTrue(0 === 0);
        fn() => -( $test);
    }
    function test4226()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test instanceof $test);
    }
    function test4227()
    {
        $this->assertTrue(0 === 0);
        fn() => -isset($test);
    }
    function test4228()
    {
        $this->assertTrue(0 === 0);
        fn() => -match ($test) {
        };
    }
    function test4229()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test->{$test}();
    }
    function test4230()
    {
        $this->assertTrue(0 === 0);
        fn() => -new $test();
    }
    function test4231()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test?->{$test}();
    }
    function test4232()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test?->{$test};
    }
    function test4233()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test--;
    }
    function test4234()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test++;
    }
    function test4235()
    {
        $this->assertTrue(0 === 0);
        fn() => -(--$test);
    }
    function test4236()
    {
        $this->assertTrue(0 === 0);
        fn() => -++$test;
    }
    function test4237()
    {
        $this->assertTrue(0 === 0);
        fn() => -(print $test);
    }
    function test4238()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test->{$test};
    }
    function test4239()
    {
        $this->assertTrue(0 === 0);
        fn() => -``;
    }
    function test4240()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test::$test();
    }
    function test4241()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test::${$test};
    }
    function test4242()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test ? $test : $test);
    }
    function test4243()
    {
        $this->assertTrue(0 === 0);
        fn() => -throw $test;
    }
    function test4244()
    {
        $this->assertTrue(0 === 0);
        fn() => -(-$test);
    }
    function test4245()
    {
        $this->assertTrue(0 === 0);
        fn() => -+$test;
    }
    function test4246()
    {
        $this->assertTrue(0 === 0);
        fn() => -${$test};
    }
    function test4247()
    {
        $this->assertTrue(0 === 0);
        fn() => -(yield from $test);
    }
    function test4248()
    {
        $this->assertTrue(0 === 0);
        fn() => -(yield $test => $test);
    }
    function test4249()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test &= $test);
    }
    function test4250()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test |= $test);
    }
    function test4251()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test ^= $test);
    }
    function test4252()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test ??= $test);
    }
    function test4253()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test .= $test);
    }
    function test4254()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test /= $test);
    }
    function test4255()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test -= $test);
    }
    function test4256()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test %= $test);
    }
    function test4257()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test *= $test);
    }
    function test4258()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test += $test);
    }
    function test4259()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test **= $test);
    }
    function test4260()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test <<= $test);
    }
    function test4261()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test >>= $test);
    }
    function test4262()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test & $test);
    }
    function test4263()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test | $test);
    }
    function test4264()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test ^ $test);
    }
    function test4265()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test && $test);
    }
    function test4266()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test || $test);
    }
    function test4267()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test ?? $test);
    }
    function test4268()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test . $test);
    }
    function test4269()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test / $test);
    }
    function test4270()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test == $test);
    }
    function test4271()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test > $test);
    }
    function test4272()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test >= $test);
    }
    function test4273()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test === $test);
    }
    function test4274()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test and $test);
    }
    function test4275()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test or $test);
    }
    function test4276()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test xor $test);
    }
    function test4277()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test - $test);
    }
    function test4278()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test % $test);
    }
    function test4279()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test * $test);
    }
    function test4280()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test != $test);
    }
    function test4281()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test !== $test);
    }
    function test4282()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test + $test);
    }
    function test4283()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test ** $test;
    }
    function test4284()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test << $test);
    }
    function test4285()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test >> $test);
    }
    function test4286()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test < $test);
    }
    function test4287()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test <= $test);
    }
    function test4288()
    {
        $this->assertTrue(0 === 0);
        fn() => -($test <=> $test);
    }
    function test4289()
    {
        $this->assertTrue(0 === 0);
        fn() => -(array) $test;
    }
    function test4290()
    {
        $this->assertTrue(0 === 0);
        fn() => -(bool) $test;
    }
    function test4291()
    {
        $this->assertTrue(0 === 0);
        fn() => -(double) $test;
    }
    function test4292()
    {
        $this->assertTrue(0 === 0);
        fn() => -(int) $test;
    }
    function test4293()
    {
        $this->assertTrue(0 === 0);
        fn() => -(object) $test;
    }
    function test4294()
    {
        $this->assertTrue(0 === 0);
        fn() => -(string) $test;
    }
    function test4295()
    {
        $this->assertTrue(0 === 0);
        fn() => -0.0;
    }
    function test4296()
    {
        $this->assertTrue(0 === 0);
        fn() => -"{$test}";
    }
    function test4297()
    {
        $this->assertTrue(0 === 0);
        fn() => -0;
    }
    function test4298()
    {
        $this->assertTrue(0 === 0);
        fn() => -'test';
    }
    function test4299()
    {
        $this->assertTrue(0 === 0);
        fn() => -__CLASS__;
    }
    function test4300()
    {
        $this->assertTrue(0 === 0);
        fn() => -__DIR__;
    }
    function test4301()
    {
        $this->assertTrue(0 === 0);
        fn() => -__FILE__;
    }
    function test4302()
    {
        $this->assertTrue(0 === 0);
        fn() => -__FUNCTION__;
    }
    function test4303()
    {
        $this->assertTrue(0 === 0);
        fn() => -__LINE__;
    }
    function test4304()
    {
        $this->assertTrue(0 === 0);
        fn() => -__METHOD__;
    }
    function test4305()
    {
        $this->assertTrue(0 === 0);
        fn() => -__NAMESPACE__;
    }
    function test4306()
    {
        $this->assertTrue(0 === 0);
        fn() => -__TRAIT__;
    }
    function test4307()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test[$test];
    }
    function test4308()
    {
        $this->assertTrue(0 === 0);
        fn() => +[];
    }
    function test4309()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test = $test);
    }
    function test4310()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test =& $test);
    }
    function test4311()
    {
        $this->assertTrue(0 === 0);
        fn() => +~$test;
    }
    function test4312()
    {
        $this->assertTrue(0 === 0);
        fn() => +(!$test);
    }
    function test4313()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test::$test;
    }
    function test4314()
    {
        $this->assertTrue(0 === 0);
        fn() => +clone $test;
    }
    function test4315()
    {
        $this->assertTrue(0 === 0);
        fn() => +function () {
        };
    }
    function test4316()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test;
    }
    function test4317()
    {
        $this->assertTrue(0 === 0);
        fn() => +self;
    }
    function test4318()
    {
        $this->assertTrue(0 === 0);
        fn() => +empty($test);
    }
    function test4319()
    {
        $this->assertTrue(0 === 0);
        fn() => +@$test;
    }
    function test4320()
    {
        $this->assertTrue(0 === 0);
        fn() => +eval($test);
    }
    function test4321()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test();
    }
    function test4322()
    {
        $this->assertTrue(0 === 0);
        fn() => +( $test);
    }
    function test4323()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test instanceof $test);
    }
    function test4324()
    {
        $this->assertTrue(0 === 0);
        fn() => +isset($test);
    }
    function test4325()
    {
        $this->assertTrue(0 === 0);
        fn() => +match ($test) {
        };
    }
    function test4326()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test->{$test}();
    }
    function test4327()
    {
        $this->assertTrue(0 === 0);
        fn() => +new $test();
    }
    function test4328()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test?->{$test}();
    }
    function test4329()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test?->{$test};
    }
    function test4330()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test--;
    }
    function test4331()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test++;
    }
    function test4332()
    {
        $this->assertTrue(0 === 0);
        fn() => +--$test;
    }
    function test4333()
    {
        $this->assertTrue(0 === 0);
        fn() => +(++$test);
    }
    function test4334()
    {
        $this->assertTrue(0 === 0);
        fn() => +(print $test);
    }
    function test4335()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test->{$test};
    }
    function test4336()
    {
        $this->assertTrue(0 === 0);
        fn() => +``;
    }
    function test4337()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test::$test();
    }
    function test4338()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test::${$test};
    }
    function test4339()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test ? $test : $test);
    }
    function test4340()
    {
        $this->assertTrue(0 === 0);
        fn() => +throw $test;
    }
    function test4341()
    {
        $this->assertTrue(0 === 0);
        fn() => +-$test;
    }
    function test4342()
    {
        $this->assertTrue(0 === 0);
        fn() => +(+$test);
    }
    function test4343()
    {
        $this->assertTrue(0 === 0);
        fn() => +${$test};
    }
    function test4344()
    {
        $this->assertTrue(0 === 0);
        fn() => +(yield from $test);
    }
    function test4345()
    {
        $this->assertTrue(0 === 0);
        fn() => +(yield $test => $test);
    }
    function test4346()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test &= $test);
    }
    function test4347()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test |= $test);
    }
    function test4348()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test ^= $test);
    }
    function test4349()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test ??= $test);
    }
    function test4350()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test .= $test);
    }
    function test4351()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test /= $test);
    }
    function test4352()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test -= $test);
    }
    function test4353()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test %= $test);
    }
    function test4354()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test *= $test);
    }
    function test4355()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test += $test);
    }
    function test4356()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test **= $test);
    }
    function test4357()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test <<= $test);
    }
    function test4358()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test >>= $test);
    }
    function test4359()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test & $test);
    }
    function test4360()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test | $test);
    }
    function test4361()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test ^ $test);
    }
    function test4362()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test && $test);
    }
    function test4363()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test || $test);
    }
    function test4364()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test ?? $test);
    }
    function test4365()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test . $test);
    }
    function test4366()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test / $test);
    }
    function test4367()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test == $test);
    }
    function test4368()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test > $test);
    }
    function test4369()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test >= $test);
    }
    function test4370()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test === $test);
    }
    function test4371()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test and $test);
    }
    function test4372()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test or $test);
    }
    function test4373()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test xor $test);
    }
    function test4374()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test - $test);
    }
    function test4375()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test % $test);
    }
    function test4376()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test * $test);
    }
    function test4377()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test != $test);
    }
    function test4378()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test !== $test);
    }
    function test4379()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test + $test);
    }
    function test4380()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test ** $test;
    }
    function test4381()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test << $test);
    }
    function test4382()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test >> $test);
    }
    function test4383()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test < $test);
    }
    function test4384()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test <= $test);
    }
    function test4385()
    {
        $this->assertTrue(0 === 0);
        fn() => +($test <=> $test);
    }
    function test4386()
    {
        $this->assertTrue(0 === 0);
        fn() => +(array) $test;
    }
    function test4387()
    {
        $this->assertTrue(0 === 0);
        fn() => +(bool) $test;
    }
    function test4388()
    {
        $this->assertTrue(0 === 0);
        fn() => +(double) $test;
    }
    function test4389()
    {
        $this->assertTrue(0 === 0);
        fn() => +(int) $test;
    }
    function test4390()
    {
        $this->assertTrue(0 === 0);
        fn() => +(object) $test;
    }
    function test4391()
    {
        $this->assertTrue(0 === 0);
        fn() => +(string) $test;
    }
    function test4392()
    {
        $this->assertTrue(0 === 0);
        fn() => +0.0;
    }
    function test4393()
    {
        $this->assertTrue(0 === 0);
        fn() => +"{$test}";
    }
    function test4394()
    {
        $this->assertTrue(0 === 0);
        fn() => +0;
    }
    function test4395()
    {
        $this->assertTrue(0 === 0);
        fn() => +'test';
    }
    function test4396()
    {
        $this->assertTrue(0 === 0);
        fn() => +__CLASS__;
    }
    function test4397()
    {
        $this->assertTrue(0 === 0);
        fn() => +__DIR__;
    }
    function test4398()
    {
        $this->assertTrue(0 === 0);
        fn() => +__FILE__;
    }
    function test4399()
    {
        $this->assertTrue(0 === 0);
        fn() => +__FUNCTION__;
    }
    function test4400()
    {
        $this->assertTrue(0 === 0);
        fn() => +__LINE__;
    }
    function test4401()
    {
        $this->assertTrue(0 === 0);
        fn() => +__METHOD__;
    }
    function test4402()
    {
        $this->assertTrue(0 === 0);
        fn() => +__NAMESPACE__;
    }
    function test4403()
    {
        $this->assertTrue(0 === 0);
        fn() => +__TRAIT__;
    }
    function test4404()
    {
        $this->assertTrue(0 === 0);
        fn() => $test;
    }
    function test4405()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test);
    }
    function test4406()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test[$test]};
    }
    function test4407()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test[$test]});
    }
    function test4408()
    {
        $this->assertTrue(0 === 0);
        fn() => ${[]};
    }
    function test4409()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${[]});
    }
    function test4410()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test = $test};
    }
    function test4411()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test = $test});
    }
    function test4412()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test =& $test};
    }
    function test4413()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test =& $test});
    }
    function test4414()
    {
        $this->assertTrue(0 === 0);
        fn() => ${~$test};
    }
    function test4415()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${~$test});
    }
    function test4416()
    {
        $this->assertTrue(0 === 0);
        fn() => ${!$test};
    }
    function test4417()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${!$test});
    }
    function test4418()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test::$test};
    }
    function test4419()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test::$test});
    }
    function test4420()
    {
        $this->assertTrue(0 === 0);
        fn() => ${clone $test};
    }
    function test4421()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${clone $test});
    }
    function test4422()
    {
        $this->assertTrue(0 === 0);
        fn() => ${function () {
        }};
    }
    function test4423()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${function () {
        }});
    }
    function test4424()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test};
    }
    function test4425()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test});
    }
    function test4426()
    {
        $this->assertTrue(0 === 0);
        fn() => ${self};
    }
    function test4427()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${self});
    }
    function test4428()
    {
        $this->assertTrue(0 === 0);
        fn() => ${empty($test)};
    }
    function test4429()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${empty($test)});
    }
    function test4430()
    {
        $this->assertTrue(0 === 0);
        fn() => ${@$test};
    }
    function test4431()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${@$test});
    }
    function test4432()
    {
        $this->assertTrue(0 === 0);
        fn() => ${eval($test)};
    }
    function test4433()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${eval($test)});
    }
    function test4434()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test()};
    }
    function test4435()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test()});
    }
    function test4436()
    {
        $this->assertTrue(0 === 0);
        fn() => ${ $test};
    }
    function test4437()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${ $test});
    }
    function test4438()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test instanceof $test};
    }
    function test4439()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test instanceof $test});
    }
    function test4440()
    {
        $this->assertTrue(0 === 0);
        fn() => ${isset($test)};
    }
    function test4441()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${isset($test)});
    }
    function test4442()
    {
        $this->assertTrue(0 === 0);
        fn() => ${match ($test) {
        }};
    }
    function test4443()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${match ($test) {
        }});
    }
    function test4444()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test->{$test}()};
    }
    function test4445()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test->{$test}()});
    }
    function test4446()
    {
        $this->assertTrue(0 === 0);
        fn() => ${new $test()};
    }
    function test4447()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${new $test()});
    }
    function test4448()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test?->{$test}()};
    }
    function test4449()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test?->{$test}()});
    }
    function test4450()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test?->{$test}};
    }
    function test4451()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test?->{$test}});
    }
    function test4452()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test--};
    }
    function test4453()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test--});
    }
    function test4454()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test++};
    }
    function test4455()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test++});
    }
    function test4456()
    {
        $this->assertTrue(0 === 0);
        fn() => ${--$test};
    }
    function test4457()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${--$test});
    }
    function test4458()
    {
        $this->assertTrue(0 === 0);
        fn() => ${++$test};
    }
    function test4459()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${++$test});
    }
    function test4460()
    {
        $this->assertTrue(0 === 0);
        fn() => ${print $test};
    }
    function test4461()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${print $test});
    }
    function test4462()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test->{$test}};
    }
    function test4463()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test->{$test}});
    }
    function test4464()
    {
        $this->assertTrue(0 === 0);
        fn() => ${``};
    }
    function test4465()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${``});
    }
    function test4466()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test::$test()};
    }
    function test4467()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test::$test()});
    }
    function test4468()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test::${$test}};
    }
    function test4469()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test::${$test}});
    }
    function test4470()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test ? $test : $test};
    }
    function test4471()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test ? $test : $test});
    }
    function test4472()
    {
        $this->assertTrue(0 === 0);
        fn() => ${throw $test};
    }
    function test4473()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${throw $test});
    }
    function test4474()
    {
        $this->assertTrue(0 === 0);
        fn() => ${-$test};
    }
    function test4475()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${-$test});
    }
    function test4476()
    {
        $this->assertTrue(0 === 0);
        fn() => ${+$test};
    }
    function test4477()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${+$test});
    }
    function test4478()
    {
        $this->assertTrue(0 === 0);
        fn() => ${${$test}};
    }
    function test4479()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${${$test}});
    }
    function test4480()
    {
        $this->assertTrue(0 === 0);
        fn() => ${yield from $test};
    }
    function test4481()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${yield from $test});
    }
    function test4482()
    {
        $this->assertTrue(0 === 0);
        fn() => ${(yield $test => $test)};
    }
    function test4483()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${(yield $test => $test)});
    }
    function test4484()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test &= $test};
    }
    function test4485()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test &= $test});
    }
    function test4486()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test |= $test};
    }
    function test4487()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test |= $test});
    }
    function test4488()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test ^= $test};
    }
    function test4489()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test ^= $test});
    }
    function test4490()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test ??= $test};
    }
    function test4491()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test ??= $test});
    }
    function test4492()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test .= $test};
    }
    function test4493()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test .= $test});
    }
    function test4494()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test /= $test};
    }
    function test4495()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test /= $test});
    }
    function test4496()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test -= $test};
    }
    function test4497()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test -= $test});
    }
    function test4498()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test %= $test};
    }
    function test4499()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test %= $test});
    }
    function test4500()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test *= $test};
    }
    function test4501()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test *= $test});
    }
    function test4502()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test += $test};
    }
    function test4503()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test += $test});
    }
    function test4504()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test **= $test};
    }
    function test4505()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test **= $test});
    }
    function test4506()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test <<= $test};
    }
    function test4507()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test <<= $test});
    }
    function test4508()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test >>= $test};
    }
    function test4509()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test >>= $test});
    }
    function test4510()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test & $test};
    }
    function test4511()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test & $test});
    }
    function test4512()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test | $test};
    }
    function test4513()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test | $test});
    }
    function test4514()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test ^ $test};
    }
    function test4515()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test ^ $test});
    }
    function test4516()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test && $test};
    }
    function test4517()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test && $test});
    }
    function test4518()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test || $test};
    }
    function test4519()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test || $test});
    }
    function test4520()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test ?? $test};
    }
    function test4521()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test ?? $test});
    }
    function test4522()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test . $test};
    }
    function test4523()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test . $test});
    }
    function test4524()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test / $test};
    }
    function test4525()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test / $test});
    }
    function test4526()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test == $test};
    }
    function test4527()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test == $test});
    }
    function test4528()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test > $test};
    }
    function test4529()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test > $test});
    }
    function test4530()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test >= $test};
    }
    function test4531()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test >= $test});
    }
    function test4532()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test === $test};
    }
    function test4533()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test === $test});
    }
    function test4534()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test and $test};
    }
    function test4535()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test and $test});
    }
    function test4536()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test or $test};
    }
    function test4537()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test or $test});
    }
    function test4538()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test xor $test};
    }
    function test4539()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test xor $test});
    }
    function test4540()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test - $test};
    }
    function test4541()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test - $test});
    }
    function test4542()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test % $test};
    }
    function test4543()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test % $test});
    }
    function test4544()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test * $test};
    }
    function test4545()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test * $test});
    }
    function test4546()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test != $test};
    }
    function test4547()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test != $test});
    }
    function test4548()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test !== $test};
    }
    function test4549()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test !== $test});
    }
    function test4550()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test + $test};
    }
    function test4551()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test + $test});
    }
    function test4552()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test ** $test};
    }
    function test4553()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test ** $test});
    }
    function test4554()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test << $test};
    }
    function test4555()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test << $test});
    }
    function test4556()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test >> $test};
    }
    function test4557()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test >> $test});
    }
    function test4558()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test < $test};
    }
    function test4559()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test < $test});
    }
    function test4560()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test <= $test};
    }
    function test4561()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test <= $test});
    }
    function test4562()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test <=> $test};
    }
    function test4563()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${$test <=> $test});
    }
    function test4564()
    {
        $this->assertTrue(0 === 0);
        fn() => ${(array) $test};
    }
    function test4565()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${(array) $test});
    }
    function test4566()
    {
        $this->assertTrue(0 === 0);
        fn() => ${(bool) $test};
    }
    function test4567()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${(bool) $test});
    }
    function test4568()
    {
        $this->assertTrue(0 === 0);
        fn() => ${(double) $test};
    }
    function test4569()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${(double) $test});
    }
    function test4570()
    {
        $this->assertTrue(0 === 0);
        fn() => ${(int) $test};
    }
    function test4571()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${(int) $test});
    }
    function test4572()
    {
        $this->assertTrue(0 === 0);
        fn() => ${(object) $test};
    }
    function test4573()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${(object) $test});
    }
    function test4574()
    {
        $this->assertTrue(0 === 0);
        fn() => ${(string) $test};
    }
    function test4575()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${(string) $test});
    }
    function test4576()
    {
        $this->assertTrue(0 === 0);
        fn() => ${0.0};
    }
    function test4577()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${0.0});
    }
    function test4578()
    {
        $this->assertTrue(0 === 0);
        fn() => ${"{$test}"};
    }
    function test4579()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${"{$test}"});
    }
    function test4580()
    {
        $this->assertTrue(0 === 0);
        fn() => ${0};
    }
    function test4581()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${0});
    }
    function test4582()
    {
        $this->assertTrue(0 === 0);
        fn() => ${'test'};
    }
    function test4583()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${'test'});
    }
    function test4584()
    {
        $this->assertTrue(0 === 0);
        fn() => ${__CLASS__};
    }
    function test4585()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${__CLASS__});
    }
    function test4586()
    {
        $this->assertTrue(0 === 0);
        fn() => ${__DIR__};
    }
    function test4587()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${__DIR__});
    }
    function test4588()
    {
        $this->assertTrue(0 === 0);
        fn() => ${__FILE__};
    }
    function test4589()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${__FILE__});
    }
    function test4590()
    {
        $this->assertTrue(0 === 0);
        fn() => ${__FUNCTION__};
    }
    function test4591()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${__FUNCTION__});
    }
    function test4592()
    {
        $this->assertTrue(0 === 0);
        fn() => ${__LINE__};
    }
    function test4593()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${__LINE__});
    }
    function test4594()
    {
        $this->assertTrue(0 === 0);
        fn() => ${__METHOD__};
    }
    function test4595()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${__METHOD__});
    }
    function test4596()
    {
        $this->assertTrue(0 === 0);
        fn() => ${__NAMESPACE__};
    }
    function test4597()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${__NAMESPACE__});
    }
    function test4598()
    {
        $this->assertTrue(0 === 0);
        fn() => ${__TRAIT__};
    }
    function test4599()
    {
        $this->assertTrue(0 === 0);
        fn() => isset(${__TRAIT__});
    }
    function test4600()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test[$test];
    }
    function test4601()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from [];
    }
    function test4602()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test = $test;
    }
    function test4603()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test =& $test;
    }
    function test4604()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from ~$test;
    }
    function test4605()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from !$test;
    }
    function test4606()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test::$test;
    }
    function test4607()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from clone $test;
    }
    function test4608()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from function () {
        };
    }
    function test4609()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test;
    }
    function test4610()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from self;
    }
    function test4611()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from empty($test);
    }
    function test4612()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from @$test;
    }
    function test4613()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from eval($test);
    }
    function test4614()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test();
    }
    function test4615()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from ( $test);
    }
    function test4616()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test instanceof $test;
    }
    function test4617()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from isset($test);
    }
    function test4618()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from match ($test) {
        };
    }
    function test4619()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test->{$test}();
    }
    function test4620()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from new $test();
    }
    function test4621()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test?->{$test}();
    }
    function test4622()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test?->{$test};
    }
    function test4623()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test--;
    }
    function test4624()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test++;
    }
    function test4625()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from --$test;
    }
    function test4626()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from ++$test;
    }
    function test4627()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from (print $test);
    }
    function test4628()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test->{$test};
    }
    function test4629()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from ``;
    }
    function test4630()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test::$test();
    }
    function test4631()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test::${$test};
    }
    function test4632()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test ? $test : $test;
    }
    function test4633()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from throw $test;
    }
    function test4634()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from -$test;
    }
    function test4635()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from +$test;
    }
    function test4636()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from ${$test};
    }
    function test4637()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from yield from $test;
    }
    function test4638()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from (yield $test => $test);
    }
    function test4639()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test &= $test;
    }
    function test4640()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test |= $test;
    }
    function test4641()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test ^= $test;
    }
    function test4642()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test ??= $test;
    }
    function test4643()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test .= $test;
    }
    function test4644()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test /= $test;
    }
    function test4645()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test -= $test;
    }
    function test4646()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test %= $test;
    }
    function test4647()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test *= $test;
    }
    function test4648()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test += $test;
    }
    function test4649()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test **= $test;
    }
    function test4650()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test <<= $test;
    }
    function test4651()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test >>= $test;
    }
    function test4652()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test & $test;
    }
    function test4653()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test | $test;
    }
    function test4654()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test ^ $test;
    }
    function test4655()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test && $test;
    }
    function test4656()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test || $test;
    }
    function test4657()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test ?? $test;
    }
    function test4658()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test . $test;
    }
    function test4659()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test / $test;
    }
    function test4660()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test == $test;
    }
    function test4661()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test > $test;
    }
    function test4662()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test >= $test;
    }
    function test4663()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test === $test;
    }
    function test4664()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from ($test and $test);
    }
    function test4665()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from ($test or $test);
    }
    function test4666()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from ($test xor $test);
    }
    function test4667()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test - $test;
    }
    function test4668()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test % $test;
    }
    function test4669()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test * $test;
    }
    function test4670()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test != $test;
    }
    function test4671()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test !== $test;
    }
    function test4672()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test + $test;
    }
    function test4673()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test ** $test;
    }
    function test4674()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test << $test;
    }
    function test4675()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test >> $test;
    }
    function test4676()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test < $test;
    }
    function test4677()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test <= $test;
    }
    function test4678()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test <=> $test;
    }
    function test4679()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from (array) $test;
    }
    function test4680()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from (bool) $test;
    }
    function test4681()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from (double) $test;
    }
    function test4682()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from (int) $test;
    }
    function test4683()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from (object) $test;
    }
    function test4684()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from (string) $test;
    }
    function test4685()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from 0.0;
    }
    function test4686()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from "{$test}";
    }
    function test4687()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from 0;
    }
    function test4688()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from 'test';
    }
    function test4689()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from __CLASS__;
    }
    function test4690()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from __DIR__;
    }
    function test4691()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from __FILE__;
    }
    function test4692()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from __FUNCTION__;
    }
    function test4693()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from __LINE__;
    }
    function test4694()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from __METHOD__;
    }
    function test4695()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from __NAMESPACE__;
    }
    function test4696()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from __TRAIT__;
    }
    function test4697()
    {
        $this->assertTrue(0 === 0);
        fn() => yield;
    }
    function test4698()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test[$test]);
    }
    function test4699()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => []);
    }
    function test4700()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test = $test);
    }
    function test4701()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test =& $test);
    }
    function test4702()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => ~$test);
    }
    function test4703()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => !$test);
    }
    function test4704()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test::$test);
    }
    function test4705()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => clone $test);
    }
    function test4706()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => function () {
        });
    }
    function test4707()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test);
    }
    function test4708()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => self);
    }
    function test4709()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => empty($test));
    }
    function test4710()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => @$test);
    }
    function test4711()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => eval($test));
    }
    function test4712()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test());
    }
    function test4713()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test =>  $test);
    }
    function test4714()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test instanceof $test);
    }
    function test4715()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => isset($test));
    }
    function test4716()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => match ($test) {
        });
    }
    function test4717()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test->{$test}());
    }
    function test4718()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => new $test());
    }
    function test4719()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test?->{$test}());
    }
    function test4720()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test?->{$test});
    }
    function test4721()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test--);
    }
    function test4722()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test++);
    }
    function test4723()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => --$test);
    }
    function test4724()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => ++$test);
    }
    function test4725()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => print $test);
    }
    function test4726()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test->{$test});
    }
    function test4727()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => ``);
    }
    function test4728()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test::$test());
    }
    function test4729()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test::${$test});
    }
    function test4730()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test ? $test : $test);
    }
    function test4731()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => throw $test);
    }
    function test4732()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => -$test);
    }
    function test4733()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => +$test);
    }
    function test4734()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => ${$test});
    }
    function test4735()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => yield from $test);
    }
    function test4736()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => (yield $test => $test));
    }
    function test4737()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test &= $test);
    }
    function test4738()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test |= $test);
    }
    function test4739()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test ^= $test);
    }
    function test4740()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test ??= $test);
    }
    function test4741()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test .= $test);
    }
    function test4742()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test /= $test);
    }
    function test4743()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test -= $test);
    }
    function test4744()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test %= $test);
    }
    function test4745()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test *= $test);
    }
    function test4746()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test += $test);
    }
    function test4747()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test **= $test);
    }
    function test4748()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test <<= $test);
    }
    function test4749()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test >>= $test);
    }
    function test4750()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test & $test);
    }
    function test4751()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test | $test);
    }
    function test4752()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test ^ $test);
    }
    function test4753()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test && $test);
    }
    function test4754()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test || $test);
    }
    function test4755()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test ?? $test);
    }
    function test4756()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test . $test);
    }
    function test4757()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test / $test);
    }
    function test4758()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test == $test);
    }
    function test4759()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test > $test);
    }
    function test4760()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test >= $test);
    }
    function test4761()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test === $test);
    }
    function test4762()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test and $test);
    }
    function test4763()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test or $test);
    }
    function test4764()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test xor $test);
    }
    function test4765()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test - $test);
    }
    function test4766()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test % $test);
    }
    function test4767()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test * $test);
    }
    function test4768()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test != $test);
    }
    function test4769()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test !== $test);
    }
    function test4770()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test + $test);
    }
    function test4771()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test ** $test);
    }
    function test4772()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test << $test);
    }
    function test4773()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test >> $test);
    }
    function test4774()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test < $test);
    }
    function test4775()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test <= $test);
    }
    function test4776()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test <=> $test);
    }
    function test4777()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => (array) $test);
    }
    function test4778()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => (bool) $test);
    }
    function test4779()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => (double) $test);
    }
    function test4780()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => (int) $test);
    }
    function test4781()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => (object) $test);
    }
    function test4782()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => (string) $test);
    }
    function test4783()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => 0.0);
    }
    function test4784()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => "{$test}");
    }
    function test4785()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => 0);
    }
    function test4786()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => 'test');
    }
    function test4787()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => __CLASS__);
    }
    function test4788()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => __DIR__);
    }
    function test4789()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => __FILE__);
    }
    function test4790()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => __FUNCTION__);
    }
    function test4791()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => __LINE__);
    }
    function test4792()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => __METHOD__);
    }
    function test4793()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => __NAMESPACE__);
    }
    function test4794()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => __TRAIT__);
    }
    function test4795()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test);
    }
    function test4796()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test[$test] => $test);
    }
    function test4797()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield [] => $test);
    }
    function test4798()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test = $test => $test);
    }
    function test4799()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test =& $test => $test);
    }
    function test4800()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield ~$test => $test);
    }
    function test4801()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield !$test => $test);
    }
    function test4802()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test::$test => $test);
    }
    function test4803()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield clone $test => $test);
    }
    function test4804()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield function () {
        } => $test);
    }
    function test4805()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test);
    }
    function test4806()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield self => $test);
    }
    function test4807()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield empty($test) => $test);
    }
    function test4808()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield @$test => $test);
    }
    function test4809()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield eval($test) => $test);
    }
    function test4810()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test() => $test);
    }
    function test4811()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield  $test => $test);
    }
    function test4812()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test instanceof $test => $test);
    }
    function test4813()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield isset($test) => $test);
    }
    function test4814()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield match ($test) {
        } => $test);
    }
    function test4815()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test->{$test}() => $test);
    }
    function test4816()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield new $test() => $test);
    }
    function test4817()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test?->{$test}() => $test);
    }
    function test4818()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test?->{$test} => $test);
    }
    function test4819()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test-- => $test);
    }
    function test4820()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test++ => $test);
    }
    function test4821()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield --$test => $test);
    }
    function test4822()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield ++$test => $test);
    }
    function test4823()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield print $test => $test);
    }
    function test4824()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test->{$test} => $test);
    }
    function test4825()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield `` => $test);
    }
    function test4826()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test::$test() => $test);
    }
    function test4827()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test::${$test} => $test);
    }
    function test4828()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test ? $test : $test => $test);
    }
    function test4829()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield throw $test => $test);
    }
    function test4830()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield -$test => $test);
    }
    function test4831()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield +$test => $test);
    }
    function test4832()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield ${$test} => $test);
    }
    function test4833()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield yield from $test => $test);
    }
    function test4834()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield (yield $test => $test) => $test);
    }
    function test4835()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test &= $test => $test);
    }
    function test4836()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test |= $test => $test);
    }
    function test4837()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test ^= $test => $test);
    }
    function test4838()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test ??= $test => $test);
    }
    function test4839()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test .= $test => $test);
    }
    function test4840()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test /= $test => $test);
    }
    function test4841()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test -= $test => $test);
    }
    function test4842()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test %= $test => $test);
    }
    function test4843()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test *= $test => $test);
    }
    function test4844()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test += $test => $test);
    }
    function test4845()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test **= $test => $test);
    }
    function test4846()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test <<= $test => $test);
    }
    function test4847()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test >>= $test => $test);
    }
    function test4848()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test & $test => $test);
    }
    function test4849()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test | $test => $test);
    }
    function test4850()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test ^ $test => $test);
    }
    function test4851()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test && $test => $test);
    }
    function test4852()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test || $test => $test);
    }
    function test4853()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test ?? $test => $test);
    }
    function test4854()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test . $test => $test);
    }
    function test4855()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test / $test => $test);
    }
    function test4856()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test == $test => $test);
    }
    function test4857()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test > $test => $test);
    }
    function test4858()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test >= $test => $test);
    }
    function test4859()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test === $test => $test);
    }
    function test4860()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test - $test => $test);
    }
    function test4861()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test % $test => $test);
    }
    function test4862()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test * $test => $test);
    }
    function test4863()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test != $test => $test);
    }
    function test4864()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test !== $test => $test);
    }
    function test4865()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test + $test => $test);
    }
    function test4866()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test ** $test => $test);
    }
    function test4867()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test << $test => $test);
    }
    function test4868()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test >> $test => $test);
    }
    function test4869()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test < $test => $test);
    }
    function test4870()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test <= $test => $test);
    }
    function test4871()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test <=> $test => $test);
    }
    function test4872()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield (array) $test => $test);
    }
    function test4873()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield (bool) $test => $test);
    }
    function test4874()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield (double) $test => $test);
    }
    function test4875()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield (int) $test => $test);
    }
    function test4876()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield (object) $test => $test);
    }
    function test4877()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield (string) $test => $test);
    }
    function test4878()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield 0.0 => $test);
    }
    function test4879()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield "{$test}" => $test);
    }
    function test4880()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield 0 => $test);
    }
    function test4881()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield 'test' => $test);
    }
    function test4882()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield __CLASS__ => $test);
    }
    function test4883()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield __DIR__ => $test);
    }
    function test4884()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield __FILE__ => $test);
    }
    function test4885()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield __FUNCTION__ => $test);
    }
    function test4886()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield __LINE__ => $test);
    }
    function test4887()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield __METHOD__ => $test);
    }
    function test4888()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield __NAMESPACE__ => $test);
    }
    function test4889()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield __TRAIT__ => $test);
    }
    function test4890()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] &= $test;
    }
    function test4891()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test &= $test;
    }
    function test4892()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test &= $test;
    }
    function test4893()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test &= $test;
    }
    function test4894()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test &= $test;
    }
    function test4895()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test;
    }
    function test4896()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test &= $test;
    }
    function test4897()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} &= $test;
    }
    function test4898()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} &= $test;
    }
    function test4899()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test &= $test;
    }
    function test4900()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test &= $test;
    }
    function test4901()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test &= $test;
    }
    function test4902()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test &= $test;
    }
    function test4903()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} &= $test;
    }
    function test4904()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test &= $test;
    }
    function test4905()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test &= $test;
    }
    function test4906()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test &= $test;
    }
    function test4907()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test &= $test;
    }
    function test4908()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test &= $test;
    }
    function test4909()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test &= $test;
    }
    function test4910()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test &= $test;
    }
    function test4911()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test &= $test;
    }
    function test4912()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test &= $test;
    }
    function test4913()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test &= $test;
    }
    function test4914()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test &= $test;
    }
    function test4915()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test &= $test;
    }
    function test4916()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test &= $test;
    }
    function test4917()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test &= $test;
    }
    function test4918()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test &= $test;
    }
    function test4919()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test &= $test;
    }
    function test4920()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test &= $test;
    }
    function test4921()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test &= $test;
    }
    function test4922()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test &= $test;
    }
    function test4923()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test &= $test;
    }
    function test4924()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test &= $test;
    }
    function test4925()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test &= $test;
    }
    function test4926()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test &= $test;
    }
    function test4927()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test &= $test;
    }
    function test4928()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test &= $test;
    }
    function test4929()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test &= $test;
    }
    function test4930()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test &= $test;
    }
    function test4931()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test &= $test;
    }
    function test4932()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test &= $test;
    }
    function test4933()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test &= $test;
    }
    function test4934()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test[$test];
    }
    function test4935()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= [];
    }
    function test4936()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test = $test;
    }
    function test4937()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test =& $test;
    }
    function test4938()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= ~$test;
    }
    function test4939()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= !$test;
    }
    function test4940()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test::$test;
    }
    function test4941()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= clone $test;
    }
    function test4942()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= function () {
        };
    }
    function test4943()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test;
    }
    function test4944()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= self;
    }
    function test4945()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= empty($test);
    }
    function test4946()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= @$test;
    }
    function test4947()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= eval($test);
    }
    function test4948()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test();
    }
    function test4949()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= ( $test);
    }
    function test4950()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test instanceof $test;
    }
    function test4951()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= isset($test);
    }
    function test4952()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= match ($test) {
        };
    }
    function test4953()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test->{$test}();
    }
    function test4954()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= new $test();
    }
    function test4955()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test?->{$test}();
    }
    function test4956()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test?->{$test};
    }
    function test4957()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test--;
    }
    function test4958()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test++;
    }
    function test4959()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= --$test;
    }
    function test4960()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= ++$test;
    }
    function test4961()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= (print $test);
    }
    function test4962()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test->{$test};
    }
    function test4963()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= ``;
    }
    function test4964()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test::$test();
    }
    function test4965()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test::${$test};
    }
    function test4966()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test ? $test : $test;
    }
    function test4967()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= throw $test;
    }
    function test4968()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= -$test;
    }
    function test4969()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= +$test;
    }
    function test4970()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= ${$test};
    }
    function test4971()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= (yield from $test);
    }
    function test4972()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= (yield $test => $test);
    }
    function test4973()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test &= $test;
    }
    function test4974()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test |= $test;
    }
    function test4975()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test ^= $test;
    }
    function test4976()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test ??= $test;
    }
    function test4977()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test .= $test;
    }
    function test4978()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test /= $test;
    }
    function test4979()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test -= $test;
    }
    function test4980()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test %= $test;
    }
    function test4981()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test *= $test;
    }
    function test4982()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test += $test;
    }
    function test4983()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test **= $test;
    }
    function test4984()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test <<= $test;
    }
    function test4985()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test >>= $test;
    }
    function test4986()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test & $test;
    }
    function test4987()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test | $test;
    }
    function test4988()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test ^ $test;
    }
    function test4989()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test && $test;
    }
    function test4990()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test || $test;
    }
    function test4991()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test ?? $test;
    }
    function test4992()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test . $test;
    }
    function test4993()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test / $test;
    }
    function test4994()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test == $test;
    }
    function test4995()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test > $test;
    }
    function test4996()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test >= $test;
    }
    function test4997()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test === $test;
    }
    function test4998()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= ($test and $test);
    }
    function test4999()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= ($test or $test);
    }
    function test5000()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= ($test xor $test);
    }
    function test5001()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test - $test;
    }
    function test5002()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test % $test;
    }
    function test5003()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test * $test;
    }
    function test5004()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test != $test;
    }
    function test5005()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test !== $test;
    }
    function test5006()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test + $test;
    }
    function test5007()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test ** $test;
    }
    function test5008()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test << $test;
    }
    function test5009()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test >> $test;
    }
    function test5010()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test < $test;
    }
    function test5011()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test <= $test;
    }
    function test5012()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test <=> $test;
    }
    function test5013()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= (array) $test;
    }
    function test5014()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= (bool) $test;
    }
    function test5015()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= (double) $test;
    }
    function test5016()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= (int) $test;
    }
    function test5017()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= (object) $test;
    }
    function test5018()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= (string) $test;
    }
    function test5019()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= 0.0;
    }
    function test5020()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= "{$test}";
    }
    function test5021()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= 0;
    }
    function test5022()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= 'test';
    }
    function test5023()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= __CLASS__;
    }
    function test5024()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= __DIR__;
    }
    function test5025()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= __FILE__;
    }
    function test5026()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= __FUNCTION__;
    }
    function test5027()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= __LINE__;
    }
    function test5028()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= __METHOD__;
    }
    function test5029()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= __NAMESPACE__;
    }
    function test5030()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= __TRAIT__;
    }
    function test5031()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] |= $test;
    }
    function test5032()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test |= $test;
    }
    function test5033()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test |= $test;
    }
    function test5034()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test |= $test;
    }
    function test5035()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test |= $test;
    }
    function test5036()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test;
    }
    function test5037()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test |= $test;
    }
    function test5038()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} |= $test;
    }
    function test5039()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} |= $test;
    }
    function test5040()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test |= $test;
    }
    function test5041()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test |= $test;
    }
    function test5042()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test |= $test;
    }
    function test5043()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test |= $test;
    }
    function test5044()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} |= $test;
    }
    function test5045()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test |= $test;
    }
    function test5046()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test |= $test;
    }
    function test5047()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test |= $test;
    }
    function test5048()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test |= $test;
    }
    function test5049()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test |= $test;
    }
    function test5050()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test |= $test;
    }
    function test5051()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test |= $test;
    }
    function test5052()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test |= $test;
    }
    function test5053()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test |= $test;
    }
    function test5054()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test |= $test;
    }
    function test5055()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test |= $test;
    }
    function test5056()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test |= $test;
    }
    function test5057()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test |= $test;
    }
    function test5058()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test |= $test;
    }
    function test5059()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test |= $test;
    }
    function test5060()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test |= $test;
    }
    function test5061()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test |= $test;
    }
    function test5062()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test |= $test;
    }
    function test5063()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test |= $test;
    }
    function test5064()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test |= $test;
    }
    function test5065()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test |= $test;
    }
    function test5066()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test |= $test;
    }
    function test5067()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test |= $test;
    }
    function test5068()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test |= $test;
    }
    function test5069()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test |= $test;
    }
    function test5070()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test |= $test;
    }
    function test5071()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test |= $test;
    }
    function test5072()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test |= $test;
    }
    function test5073()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test |= $test;
    }
    function test5074()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test |= $test;
    }
    function test5075()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test[$test];
    }
    function test5076()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= [];
    }
    function test5077()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test = $test;
    }
    function test5078()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test =& $test;
    }
    function test5079()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= ~$test;
    }
    function test5080()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= !$test;
    }
    function test5081()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test::$test;
    }
    function test5082()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= clone $test;
    }
    function test5083()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= function () {
        };
    }
    function test5084()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test;
    }
    function test5085()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= self;
    }
    function test5086()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= empty($test);
    }
    function test5087()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= @$test;
    }
    function test5088()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= eval($test);
    }
    function test5089()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test();
    }
    function test5090()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= ( $test);
    }
    function test5091()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test instanceof $test;
    }
    function test5092()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= isset($test);
    }
    function test5093()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= match ($test) {
        };
    }
    function test5094()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test->{$test}();
    }
    function test5095()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= new $test();
    }
    function test5096()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test?->{$test}();
    }
    function test5097()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test?->{$test};
    }
    function test5098()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test--;
    }
    function test5099()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test++;
    }
    function test5100()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= --$test;
    }
    function test5101()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= ++$test;
    }
    function test5102()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= (print $test);
    }
    function test5103()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test->{$test};
    }
    function test5104()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= ``;
    }
    function test5105()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test::$test();
    }
    function test5106()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test::${$test};
    }
    function test5107()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test ? $test : $test;
    }
    function test5108()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= throw $test;
    }
    function test5109()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= -$test;
    }
    function test5110()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= +$test;
    }
    function test5111()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= ${$test};
    }
    function test5112()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= (yield from $test);
    }
    function test5113()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= (yield $test => $test);
    }
    function test5114()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test &= $test;
    }
    function test5115()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test |= $test;
    }
    function test5116()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test ^= $test;
    }
    function test5117()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test ??= $test;
    }
    function test5118()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test .= $test;
    }
    function test5119()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test /= $test;
    }
    function test5120()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test -= $test;
    }
    function test5121()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test %= $test;
    }
    function test5122()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test *= $test;
    }
    function test5123()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test += $test;
    }
    function test5124()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test **= $test;
    }
    function test5125()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test <<= $test;
    }
    function test5126()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test >>= $test;
    }
    function test5127()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test & $test;
    }
    function test5128()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test | $test;
    }
    function test5129()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test ^ $test;
    }
    function test5130()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test && $test;
    }
    function test5131()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test || $test;
    }
    function test5132()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test ?? $test;
    }
    function test5133()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test . $test;
    }
    function test5134()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test / $test;
    }
    function test5135()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test == $test;
    }
    function test5136()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test > $test;
    }
    function test5137()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test >= $test;
    }
    function test5138()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test === $test;
    }
    function test5139()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= ($test and $test);
    }
    function test5140()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= ($test or $test);
    }
    function test5141()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= ($test xor $test);
    }
    function test5142()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test - $test;
    }
    function test5143()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test % $test;
    }
    function test5144()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test * $test;
    }
    function test5145()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test != $test;
    }
    function test5146()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test !== $test;
    }
    function test5147()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test + $test;
    }
    function test5148()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test ** $test;
    }
    function test5149()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test << $test;
    }
    function test5150()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test >> $test;
    }
    function test5151()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test < $test;
    }
    function test5152()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test <= $test;
    }
    function test5153()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test <=> $test;
    }
    function test5154()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= (array) $test;
    }
    function test5155()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= (bool) $test;
    }
    function test5156()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= (double) $test;
    }
    function test5157()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= (int) $test;
    }
    function test5158()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= (object) $test;
    }
    function test5159()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= (string) $test;
    }
    function test5160()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= 0.0;
    }
    function test5161()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= "{$test}";
    }
    function test5162()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= 0;
    }
    function test5163()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= 'test';
    }
    function test5164()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= __CLASS__;
    }
    function test5165()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= __DIR__;
    }
    function test5166()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= __FILE__;
    }
    function test5167()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= __FUNCTION__;
    }
    function test5168()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= __LINE__;
    }
    function test5169()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= __METHOD__;
    }
    function test5170()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= __NAMESPACE__;
    }
    function test5171()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= __TRAIT__;
    }
    function test5172()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] ^= $test;
    }
    function test5173()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test ^= $test;
    }
    function test5174()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test ^= $test;
    }
    function test5175()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test ^= $test;
    }
    function test5176()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test ^= $test;
    }
    function test5177()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test;
    }
    function test5178()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test ^= $test;
    }
    function test5179()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} ^= $test;
    }
    function test5180()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} ^= $test;
    }
    function test5181()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test ^= $test;
    }
    function test5182()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test ^= $test;
    }
    function test5183()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test ^= $test;
    }
    function test5184()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test ^= $test;
    }
    function test5185()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} ^= $test;
    }
    function test5186()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test ^= $test;
    }
    function test5187()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test ^= $test;
    }
    function test5188()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test ^= $test;
    }
    function test5189()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test ^= $test;
    }
    function test5190()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test ^= $test;
    }
    function test5191()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test ^= $test;
    }
    function test5192()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test ^= $test;
    }
    function test5193()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test ^= $test;
    }
    function test5194()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test ^= $test;
    }
    function test5195()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test ^= $test;
    }
    function test5196()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test ^= $test;
    }
    function test5197()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test ^= $test;
    }
    function test5198()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test ^= $test;
    }
    function test5199()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test ^= $test;
    }
    function test5200()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test ^= $test;
    }
    function test5201()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test ^= $test;
    }
    function test5202()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test ^= $test;
    }
    function test5203()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test ^= $test;
    }
    function test5204()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test ^= $test;
    }
    function test5205()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test ^= $test;
    }
    function test5206()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test ^= $test;
    }
    function test5207()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test ^= $test;
    }
    function test5208()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test ^= $test;
    }
    function test5209()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test ^= $test;
    }
    function test5210()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test ^= $test;
    }
    function test5211()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test ^= $test;
    }
    function test5212()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test ^= $test;
    }
    function test5213()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test ^= $test;
    }
    function test5214()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test ^= $test;
    }
    function test5215()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test ^= $test;
    }
    function test5216()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test[$test];
    }
    function test5217()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= [];
    }
    function test5218()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test = $test;
    }
    function test5219()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test =& $test;
    }
    function test5220()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= ~$test;
    }
    function test5221()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= !$test;
    }
    function test5222()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test::$test;
    }
    function test5223()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= clone $test;
    }
    function test5224()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= function () {
        };
    }
    function test5225()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test;
    }
    function test5226()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= self;
    }
    function test5227()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= empty($test);
    }
    function test5228()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= @$test;
    }
    function test5229()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= eval($test);
    }
    function test5230()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test();
    }
    function test5231()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= ( $test);
    }
    function test5232()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test instanceof $test;
    }
    function test5233()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= isset($test);
    }
    function test5234()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= match ($test) {
        };
    }
    function test5235()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test->{$test}();
    }
    function test5236()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= new $test();
    }
    function test5237()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test?->{$test}();
    }
    function test5238()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test?->{$test};
    }
    function test5239()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test--;
    }
    function test5240()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test++;
    }
    function test5241()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= --$test;
    }
    function test5242()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= ++$test;
    }
    function test5243()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= (print $test);
    }
    function test5244()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test->{$test};
    }
    function test5245()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= ``;
    }
    function test5246()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test::$test();
    }
    function test5247()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test::${$test};
    }
    function test5248()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test ? $test : $test;
    }
    function test5249()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= throw $test;
    }
    function test5250()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= -$test;
    }
    function test5251()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= +$test;
    }
    function test5252()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= ${$test};
    }
    function test5253()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= (yield from $test);
    }
    function test5254()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= (yield $test => $test);
    }
    function test5255()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test &= $test;
    }
    function test5256()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test |= $test;
    }
    function test5257()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test ^= $test;
    }
    function test5258()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test ??= $test;
    }
    function test5259()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test .= $test;
    }
    function test5260()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test /= $test;
    }
    function test5261()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test -= $test;
    }
    function test5262()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test %= $test;
    }
    function test5263()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test *= $test;
    }
    function test5264()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test += $test;
    }
    function test5265()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test **= $test;
    }
    function test5266()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test <<= $test;
    }
    function test5267()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test >>= $test;
    }
    function test5268()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test & $test;
    }
    function test5269()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test | $test;
    }
    function test5270()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test ^ $test;
    }
    function test5271()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test && $test;
    }
    function test5272()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test || $test;
    }
    function test5273()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test ?? $test;
    }
    function test5274()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test . $test;
    }
    function test5275()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test / $test;
    }
    function test5276()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test == $test;
    }
    function test5277()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test > $test;
    }
    function test5278()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test >= $test;
    }
    function test5279()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test === $test;
    }
    function test5280()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= ($test and $test);
    }
    function test5281()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= ($test or $test);
    }
    function test5282()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= ($test xor $test);
    }
    function test5283()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test - $test;
    }
    function test5284()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test % $test;
    }
    function test5285()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test * $test;
    }
    function test5286()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test != $test;
    }
    function test5287()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test !== $test;
    }
    function test5288()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test + $test;
    }
    function test5289()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test ** $test;
    }
    function test5290()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test << $test;
    }
    function test5291()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test >> $test;
    }
    function test5292()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test < $test;
    }
    function test5293()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test <= $test;
    }
    function test5294()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test <=> $test;
    }
    function test5295()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= (array) $test;
    }
    function test5296()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= (bool) $test;
    }
    function test5297()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= (double) $test;
    }
    function test5298()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= (int) $test;
    }
    function test5299()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= (object) $test;
    }
    function test5300()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= (string) $test;
    }
    function test5301()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= 0.0;
    }
    function test5302()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= "{$test}";
    }
    function test5303()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= 0;
    }
    function test5304()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= 'test';
    }
    function test5305()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= __CLASS__;
    }
    function test5306()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= __DIR__;
    }
    function test5307()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= __FILE__;
    }
    function test5308()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= __FUNCTION__;
    }
    function test5309()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= __LINE__;
    }
    function test5310()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= __METHOD__;
    }
    function test5311()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= __NAMESPACE__;
    }
    function test5312()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= __TRAIT__;
    }
    function test5313()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] ??= $test;
    }
    function test5314()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test ??= $test;
    }
    function test5315()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test ??= $test;
    }
    function test5316()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test ??= $test;
    }
    function test5317()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test ??= $test;
    }
    function test5318()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test;
    }
    function test5319()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test ??= $test;
    }
    function test5320()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} ??= $test;
    }
    function test5321()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} ??= $test;
    }
    function test5322()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test ??= $test;
    }
    function test5323()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test ??= $test;
    }
    function test5324()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test ??= $test;
    }
    function test5325()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test ??= $test;
    }
    function test5326()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} ??= $test;
    }
    function test5327()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test ??= $test;
    }
    function test5328()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test ??= $test;
    }
    function test5329()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test ??= $test;
    }
    function test5330()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test ??= $test;
    }
    function test5331()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test ??= $test;
    }
    function test5332()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test ??= $test;
    }
    function test5333()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test ??= $test;
    }
    function test5334()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test ??= $test;
    }
    function test5335()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test ??= $test;
    }
    function test5336()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test ??= $test;
    }
    function test5337()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test ??= $test;
    }
    function test5338()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test ??= $test;
    }
    function test5339()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test ??= $test;
    }
    function test5340()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test ??= $test;
    }
    function test5341()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test ??= $test;
    }
    function test5342()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test ??= $test;
    }
    function test5343()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test ??= $test;
    }
    function test5344()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test ??= $test;
    }
    function test5345()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test ??= $test;
    }
    function test5346()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test ??= $test;
    }
    function test5347()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test ??= $test;
    }
    function test5348()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test ??= $test;
    }
    function test5349()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test ??= $test;
    }
    function test5350()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test ??= $test;
    }
    function test5351()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test ??= $test;
    }
    function test5352()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test ??= $test;
    }
    function test5353()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test ??= $test;
    }
    function test5354()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test ??= $test;
    }
    function test5355()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test ??= $test;
    }
    function test5356()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test ??= $test;
    }
    function test5357()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test[$test];
    }
    function test5358()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= [];
    }
    function test5359()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test = $test;
    }
    function test5360()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test =& $test;
    }
    function test5361()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= ~$test;
    }
    function test5362()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= !$test;
    }
    function test5363()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test::$test;
    }
    function test5364()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= clone $test;
    }
    function test5365()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= function () {
        };
    }
    function test5366()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test;
    }
    function test5367()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= self;
    }
    function test5368()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= empty($test);
    }
    function test5369()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= @$test;
    }
    function test5370()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= eval($test);
    }
    function test5371()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test();
    }
    function test5372()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= ( $test);
    }
    function test5373()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test instanceof $test;
    }
    function test5374()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= isset($test);
    }
    function test5375()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= match ($test) {
        };
    }
    function test5376()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test->{$test}();
    }
    function test5377()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= new $test();
    }
    function test5378()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test?->{$test}();
    }
    function test5379()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test?->{$test};
    }
    function test5380()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test--;
    }
    function test5381()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test++;
    }
    function test5382()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= --$test;
    }
    function test5383()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= ++$test;
    }
    function test5384()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= (print $test);
    }
    function test5385()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test->{$test};
    }
    function test5386()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= ``;
    }
    function test5387()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test::$test();
    }
    function test5388()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test::${$test};
    }
    function test5389()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test ? $test : $test;
    }
    function test5390()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= throw $test;
    }
    function test5391()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= -$test;
    }
    function test5392()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= +$test;
    }
    function test5393()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= ${$test};
    }
    function test5394()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= (yield from $test);
    }
    function test5395()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= (yield $test => $test);
    }
    function test5396()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test &= $test;
    }
    function test5397()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test |= $test;
    }
    function test5398()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test ^= $test;
    }
    function test5399()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test ??= $test;
    }
    function test5400()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test .= $test;
    }
    function test5401()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test /= $test;
    }
    function test5402()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test -= $test;
    }
    function test5403()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test %= $test;
    }
    function test5404()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test *= $test;
    }
    function test5405()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test += $test;
    }
    function test5406()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test **= $test;
    }
    function test5407()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test <<= $test;
    }
    function test5408()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test >>= $test;
    }
    function test5409()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test & $test;
    }
    function test5410()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test | $test;
    }
    function test5411()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test ^ $test;
    }
    function test5412()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test && $test;
    }
    function test5413()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test || $test;
    }
    function test5414()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test ?? $test;
    }
    function test5415()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test . $test;
    }
    function test5416()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test / $test;
    }
    function test5417()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test == $test;
    }
    function test5418()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test > $test;
    }
    function test5419()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test >= $test;
    }
    function test5420()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test === $test;
    }
    function test5421()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= ($test and $test);
    }
    function test5422()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= ($test or $test);
    }
    function test5423()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= ($test xor $test);
    }
    function test5424()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test - $test;
    }
    function test5425()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test % $test;
    }
    function test5426()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test * $test;
    }
    function test5427()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test != $test;
    }
    function test5428()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test !== $test;
    }
    function test5429()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test + $test;
    }
    function test5430()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test ** $test;
    }
    function test5431()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test << $test;
    }
    function test5432()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test >> $test;
    }
    function test5433()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test < $test;
    }
    function test5434()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test <= $test;
    }
    function test5435()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test <=> $test;
    }
    function test5436()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= (array) $test;
    }
    function test5437()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= (bool) $test;
    }
    function test5438()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= (double) $test;
    }
    function test5439()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= (int) $test;
    }
    function test5440()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= (object) $test;
    }
    function test5441()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= (string) $test;
    }
    function test5442()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= 0.0;
    }
    function test5443()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= "{$test}";
    }
    function test5444()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= 0;
    }
    function test5445()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= 'test';
    }
    function test5446()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= __CLASS__;
    }
    function test5447()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= __DIR__;
    }
    function test5448()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= __FILE__;
    }
    function test5449()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= __FUNCTION__;
    }
    function test5450()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= __LINE__;
    }
    function test5451()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= __METHOD__;
    }
    function test5452()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= __NAMESPACE__;
    }
    function test5453()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= __TRAIT__;
    }
    function test5454()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] .= $test;
    }
    function test5455()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test .= $test;
    }
    function test5456()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test .= $test;
    }
    function test5457()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test .= $test;
    }
    function test5458()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test .= $test;
    }
    function test5459()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test;
    }
    function test5460()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test .= $test;
    }
    function test5461()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} .= $test;
    }
    function test5462()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} .= $test;
    }
    function test5463()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test .= $test;
    }
    function test5464()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test .= $test;
    }
    function test5465()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test .= $test;
    }
    function test5466()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test .= $test;
    }
    function test5467()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} .= $test;
    }
    function test5468()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test .= $test;
    }
    function test5469()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test .= $test;
    }
    function test5470()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test .= $test;
    }
    function test5471()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test .= $test;
    }
    function test5472()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test .= $test;
    }
    function test5473()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test .= $test;
    }
    function test5474()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test .= $test;
    }
    function test5475()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test .= $test;
    }
    function test5476()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test .= $test;
    }
    function test5477()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test .= $test;
    }
    function test5478()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test .= $test;
    }
    function test5479()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test .= $test;
    }
    function test5480()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test .= $test;
    }
    function test5481()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test .= $test;
    }
    function test5482()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test .= $test;
    }
    function test5483()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test .= $test;
    }
    function test5484()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test .= $test;
    }
    function test5485()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test .= $test;
    }
    function test5486()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test .= $test;
    }
    function test5487()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test .= $test;
    }
    function test5488()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test .= $test;
    }
    function test5489()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test .= $test;
    }
    function test5490()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test .= $test;
    }
    function test5491()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test .= $test;
    }
    function test5492()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test .= $test;
    }
    function test5493()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test .= $test;
    }
    function test5494()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test .= $test;
    }
    function test5495()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test .= $test;
    }
    function test5496()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test .= $test;
    }
    function test5497()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test .= $test;
    }
    function test5498()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test[$test];
    }
    function test5499()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= [];
    }
    function test5500()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test = $test;
    }
    function test5501()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test =& $test;
    }
    function test5502()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= ~$test;
    }
    function test5503()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= !$test;
    }
    function test5504()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test::$test;
    }
    function test5505()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= clone $test;
    }
    function test5506()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= function () {
        };
    }
    function test5507()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test;
    }
    function test5508()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= self;
    }
    function test5509()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= empty($test);
    }
    function test5510()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= @$test;
    }
    function test5511()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= eval($test);
    }
    function test5512()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test();
    }
    function test5513()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= ( $test);
    }
    function test5514()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test instanceof $test;
    }
    function test5515()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= isset($test);
    }
    function test5516()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= match ($test) {
        };
    }
    function test5517()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test->{$test}();
    }
    function test5518()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= new $test();
    }
    function test5519()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test?->{$test}();
    }
    function test5520()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test?->{$test};
    }
    function test5521()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test--;
    }
    function test5522()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test++;
    }
    function test5523()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= --$test;
    }
    function test5524()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= ++$test;
    }
    function test5525()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= (print $test);
    }
    function test5526()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test->{$test};
    }
    function test5527()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= ``;
    }
    function test5528()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test::$test();
    }
    function test5529()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test::${$test};
    }
    function test5530()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test ? $test : $test;
    }
    function test5531()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= throw $test;
    }
    function test5532()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= -$test;
    }
    function test5533()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= +$test;
    }
    function test5534()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= ${$test};
    }
    function test5535()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= (yield from $test);
    }
    function test5536()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= (yield $test => $test);
    }
    function test5537()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test &= $test;
    }
    function test5538()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test |= $test;
    }
    function test5539()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test ^= $test;
    }
    function test5540()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test ??= $test;
    }
    function test5541()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test .= $test;
    }
    function test5542()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test /= $test;
    }
    function test5543()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test -= $test;
    }
    function test5544()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test %= $test;
    }
    function test5545()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test *= $test;
    }
    function test5546()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test += $test;
    }
    function test5547()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test **= $test;
    }
    function test5548()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test <<= $test;
    }
    function test5549()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test >>= $test;
    }
    function test5550()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test & $test;
    }
    function test5551()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test | $test;
    }
    function test5552()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test ^ $test;
    }
    function test5553()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test && $test;
    }
    function test5554()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test || $test;
    }
    function test5555()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test ?? $test;
    }
    function test5556()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test . $test;
    }
    function test5557()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test / $test;
    }
    function test5558()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test == $test;
    }
    function test5559()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test > $test;
    }
    function test5560()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test >= $test;
    }
    function test5561()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test === $test;
    }
    function test5562()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= ($test and $test);
    }
    function test5563()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= ($test or $test);
    }
    function test5564()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= ($test xor $test);
    }
    function test5565()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test - $test;
    }
    function test5566()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test % $test;
    }
    function test5567()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test * $test;
    }
    function test5568()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test != $test;
    }
    function test5569()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test !== $test;
    }
    function test5570()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test + $test;
    }
    function test5571()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test ** $test;
    }
    function test5572()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test << $test;
    }
    function test5573()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test >> $test;
    }
    function test5574()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test < $test;
    }
    function test5575()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test <= $test;
    }
    function test5576()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test <=> $test;
    }
    function test5577()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= (array) $test;
    }
    function test5578()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= (bool) $test;
    }
    function test5579()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= (double) $test;
    }
    function test5580()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= (int) $test;
    }
    function test5581()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= (object) $test;
    }
    function test5582()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= (string) $test;
    }
    function test5583()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= 0.0;
    }
    function test5584()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= "{$test}";
    }
    function test5585()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= 0;
    }
    function test5586()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= 'test';
    }
    function test5587()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= __CLASS__;
    }
    function test5588()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= __DIR__;
    }
    function test5589()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= __FILE__;
    }
    function test5590()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= __FUNCTION__;
    }
    function test5591()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= __LINE__;
    }
    function test5592()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= __METHOD__;
    }
    function test5593()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= __NAMESPACE__;
    }
    function test5594()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= __TRAIT__;
    }
    function test5595()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] /= $test;
    }
    function test5596()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test /= $test;
    }
    function test5597()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test /= $test;
    }
    function test5598()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test /= $test;
    }
    function test5599()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test /= $test;
    }
    function test5600()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test;
    }
    function test5601()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test /= $test;
    }
    function test5602()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} /= $test;
    }
    function test5603()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} /= $test;
    }
    function test5604()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test /= $test;
    }
    function test5605()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test /= $test;
    }
    function test5606()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test /= $test;
    }
    function test5607()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test /= $test;
    }
    function test5608()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} /= $test;
    }
    function test5609()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test /= $test;
    }
    function test5610()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test /= $test;
    }
    function test5611()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test /= $test;
    }
    function test5612()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test /= $test;
    }
    function test5613()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test /= $test;
    }
    function test5614()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test /= $test;
    }
    function test5615()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test /= $test;
    }
    function test5616()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test /= $test;
    }
    function test5617()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test /= $test;
    }
    function test5618()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test /= $test;
    }
    function test5619()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test /= $test;
    }
    function test5620()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test /= $test;
    }
    function test5621()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test /= $test;
    }
    function test5622()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test /= $test;
    }
    function test5623()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test /= $test;
    }
    function test5624()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test /= $test;
    }
    function test5625()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test /= $test;
    }
    function test5626()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test /= $test;
    }
    function test5627()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test /= $test;
    }
    function test5628()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test /= $test;
    }
    function test5629()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test /= $test;
    }
    function test5630()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test /= $test;
    }
    function test5631()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test /= $test;
    }
    function test5632()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test /= $test;
    }
    function test5633()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test /= $test;
    }
    function test5634()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test /= $test;
    }
    function test5635()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test /= $test;
    }
    function test5636()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test /= $test;
    }
    function test5637()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test /= $test;
    }
    function test5638()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test /= $test;
    }
    function test5639()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test[$test];
    }
    function test5640()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= [];
    }
    function test5641()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test = $test;
    }
    function test5642()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test =& $test;
    }
    function test5643()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= ~$test;
    }
    function test5644()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= !$test;
    }
    function test5645()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test::$test;
    }
    function test5646()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= clone $test;
    }
    function test5647()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= function () {
        };
    }
    function test5648()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test;
    }
    function test5649()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= self;
    }
    function test5650()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= empty($test);
    }
    function test5651()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= @$test;
    }
    function test5652()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= eval($test);
    }
    function test5653()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test();
    }
    function test5654()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= ( $test);
    }
    function test5655()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test instanceof $test;
    }
    function test5656()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= isset($test);
    }
    function test5657()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= match ($test) {
        };
    }
    function test5658()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test->{$test}();
    }
    function test5659()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= new $test();
    }
    function test5660()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test?->{$test}();
    }
    function test5661()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test?->{$test};
    }
    function test5662()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test--;
    }
    function test5663()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test++;
    }
    function test5664()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= --$test;
    }
    function test5665()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= ++$test;
    }
    function test5666()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= (print $test);
    }
    function test5667()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test->{$test};
    }
    function test5668()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= ``;
    }
    function test5669()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test::$test();
    }
    function test5670()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test::${$test};
    }
    function test5671()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test ? $test : $test;
    }
    function test5672()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= throw $test;
    }
    function test5673()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= -$test;
    }
    function test5674()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= +$test;
    }
    function test5675()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= ${$test};
    }
    function test5676()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= (yield from $test);
    }
    function test5677()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= (yield $test => $test);
    }
    function test5678()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test &= $test;
    }
    function test5679()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test |= $test;
    }
    function test5680()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test ^= $test;
    }
    function test5681()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test ??= $test;
    }
    function test5682()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test .= $test;
    }
    function test5683()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test /= $test;
    }
    function test5684()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test -= $test;
    }
    function test5685()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test %= $test;
    }
    function test5686()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test *= $test;
    }
    function test5687()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test += $test;
    }
    function test5688()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test **= $test;
    }
    function test5689()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test <<= $test;
    }
    function test5690()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test >>= $test;
    }
    function test5691()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test & $test;
    }
    function test5692()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test | $test;
    }
    function test5693()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test ^ $test;
    }
    function test5694()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test && $test;
    }
    function test5695()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test || $test;
    }
    function test5696()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test ?? $test;
    }
    function test5697()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test . $test;
    }
    function test5698()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test / $test;
    }
    function test5699()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test == $test;
    }
    function test5700()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test > $test;
    }
    function test5701()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test >= $test;
    }
    function test5702()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test === $test;
    }
    function test5703()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= ($test and $test);
    }
    function test5704()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= ($test or $test);
    }
    function test5705()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= ($test xor $test);
    }
    function test5706()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test - $test;
    }
    function test5707()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test % $test;
    }
    function test5708()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test * $test;
    }
    function test5709()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test != $test;
    }
    function test5710()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test !== $test;
    }
    function test5711()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test + $test;
    }
    function test5712()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test ** $test;
    }
    function test5713()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test << $test;
    }
    function test5714()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test >> $test;
    }
    function test5715()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test < $test;
    }
    function test5716()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test <= $test;
    }
    function test5717()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test <=> $test;
    }
    function test5718()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= (array) $test;
    }
    function test5719()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= (bool) $test;
    }
    function test5720()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= (double) $test;
    }
    function test5721()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= (int) $test;
    }
    function test5722()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= (object) $test;
    }
    function test5723()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= (string) $test;
    }
    function test5724()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= 0.0;
    }
    function test5725()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= "{$test}";
    }
    function test5726()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= 0;
    }
    function test5727()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= 'test';
    }
    function test5728()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= __CLASS__;
    }
    function test5729()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= __DIR__;
    }
    function test5730()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= __FILE__;
    }
    function test5731()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= __FUNCTION__;
    }
    function test5732()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= __LINE__;
    }
    function test5733()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= __METHOD__;
    }
    function test5734()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= __NAMESPACE__;
    }
    function test5735()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= __TRAIT__;
    }
    function test5736()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] -= $test;
    }
    function test5737()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test -= $test;
    }
    function test5738()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test -= $test;
    }
    function test5739()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test -= $test;
    }
    function test5740()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test -= $test;
    }
    function test5741()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test;
    }
    function test5742()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test -= $test;
    }
    function test5743()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} -= $test;
    }
    function test5744()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} -= $test;
    }
    function test5745()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test -= $test;
    }
    function test5746()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test -= $test;
    }
    function test5747()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test -= $test;
    }
    function test5748()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test -= $test;
    }
    function test5749()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} -= $test;
    }
    function test5750()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test -= $test;
    }
    function test5751()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test -= $test;
    }
    function test5752()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test -= $test;
    }
    function test5753()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test -= $test;
    }
    function test5754()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test -= $test;
    }
    function test5755()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test -= $test;
    }
    function test5756()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test -= $test;
    }
    function test5757()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test -= $test;
    }
    function test5758()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test -= $test;
    }
    function test5759()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test -= $test;
    }
    function test5760()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test -= $test;
    }
    function test5761()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test -= $test;
    }
    function test5762()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test -= $test;
    }
    function test5763()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test -= $test;
    }
    function test5764()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test -= $test;
    }
    function test5765()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test -= $test;
    }
    function test5766()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test -= $test;
    }
    function test5767()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test -= $test;
    }
    function test5768()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test -= $test;
    }
    function test5769()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test -= $test;
    }
    function test5770()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test -= $test;
    }
    function test5771()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test -= $test;
    }
    function test5772()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test -= $test;
    }
    function test5773()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test -= $test;
    }
    function test5774()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test -= $test;
    }
    function test5775()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test -= $test;
    }
    function test5776()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test -= $test;
    }
    function test5777()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test -= $test;
    }
    function test5778()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test -= $test;
    }
    function test5779()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test -= $test;
    }
    function test5780()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test[$test];
    }
    function test5781()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= [];
    }
    function test5782()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test = $test;
    }
    function test5783()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test =& $test;
    }
    function test5784()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= ~$test;
    }
    function test5785()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= !$test;
    }
    function test5786()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test::$test;
    }
    function test5787()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= clone $test;
    }
    function test5788()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= function () {
        };
    }
    function test5789()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test;
    }
    function test5790()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= self;
    }
    function test5791()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= empty($test);
    }
    function test5792()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= @$test;
    }
    function test5793()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= eval($test);
    }
    function test5794()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test();
    }
    function test5795()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= ( $test);
    }
    function test5796()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test instanceof $test;
    }
    function test5797()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= isset($test);
    }
    function test5798()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= match ($test) {
        };
    }
    function test5799()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test->{$test}();
    }
    function test5800()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= new $test();
    }
    function test5801()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test?->{$test}();
    }
    function test5802()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test?->{$test};
    }
    function test5803()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test--;
    }
    function test5804()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test++;
    }
    function test5805()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= --$test;
    }
    function test5806()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= ++$test;
    }
    function test5807()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= (print $test);
    }
    function test5808()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test->{$test};
    }
    function test5809()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= ``;
    }
    function test5810()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test::$test();
    }
    function test5811()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test::${$test};
    }
    function test5812()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test ? $test : $test;
    }
    function test5813()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= throw $test;
    }
    function test5814()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= -$test;
    }
    function test5815()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= +$test;
    }
    function test5816()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= ${$test};
    }
    function test5817()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= (yield from $test);
    }
    function test5818()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= (yield $test => $test);
    }
    function test5819()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test &= $test;
    }
    function test5820()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test |= $test;
    }
    function test5821()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test ^= $test;
    }
    function test5822()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test ??= $test;
    }
    function test5823()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test .= $test;
    }
    function test5824()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test /= $test;
    }
    function test5825()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test -= $test;
    }
    function test5826()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test %= $test;
    }
    function test5827()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test *= $test;
    }
    function test5828()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test += $test;
    }
    function test5829()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test **= $test;
    }
    function test5830()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test <<= $test;
    }
    function test5831()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test >>= $test;
    }
    function test5832()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test & $test;
    }
    function test5833()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test | $test;
    }
    function test5834()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test ^ $test;
    }
    function test5835()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test && $test;
    }
    function test5836()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test || $test;
    }
    function test5837()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test ?? $test;
    }
    function test5838()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test . $test;
    }
    function test5839()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test / $test;
    }
    function test5840()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test == $test;
    }
    function test5841()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test > $test;
    }
    function test5842()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test >= $test;
    }
    function test5843()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test === $test;
    }
    function test5844()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= ($test and $test);
    }
    function test5845()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= ($test or $test);
    }
    function test5846()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= ($test xor $test);
    }
    function test5847()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test - $test;
    }
    function test5848()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test % $test;
    }
    function test5849()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test * $test;
    }
    function test5850()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test != $test;
    }
    function test5851()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test !== $test;
    }
    function test5852()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test + $test;
    }
    function test5853()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test ** $test;
    }
    function test5854()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test << $test;
    }
    function test5855()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test >> $test;
    }
    function test5856()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test < $test;
    }
    function test5857()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test <= $test;
    }
    function test5858()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test <=> $test;
    }
    function test5859()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= (array) $test;
    }
    function test5860()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= (bool) $test;
    }
    function test5861()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= (double) $test;
    }
    function test5862()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= (int) $test;
    }
    function test5863()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= (object) $test;
    }
    function test5864()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= (string) $test;
    }
    function test5865()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= 0.0;
    }
    function test5866()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= "{$test}";
    }
    function test5867()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= 0;
    }
    function test5868()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= 'test';
    }
    function test5869()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= __CLASS__;
    }
    function test5870()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= __DIR__;
    }
    function test5871()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= __FILE__;
    }
    function test5872()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= __FUNCTION__;
    }
    function test5873()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= __LINE__;
    }
    function test5874()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= __METHOD__;
    }
    function test5875()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= __NAMESPACE__;
    }
    function test5876()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= __TRAIT__;
    }
    function test5877()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] %= $test;
    }
    function test5878()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test %= $test;
    }
    function test5879()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test %= $test;
    }
    function test5880()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test %= $test;
    }
    function test5881()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test %= $test;
    }
    function test5882()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test;
    }
    function test5883()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test %= $test;
    }
    function test5884()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} %= $test;
    }
    function test5885()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} %= $test;
    }
    function test5886()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test %= $test;
    }
    function test5887()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test %= $test;
    }
    function test5888()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test %= $test;
    }
    function test5889()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test %= $test;
    }
    function test5890()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} %= $test;
    }
    function test5891()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test %= $test;
    }
    function test5892()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test %= $test;
    }
    function test5893()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test %= $test;
    }
    function test5894()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test %= $test;
    }
    function test5895()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test %= $test;
    }
    function test5896()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test %= $test;
    }
    function test5897()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test %= $test;
    }
    function test5898()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test %= $test;
    }
    function test5899()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test %= $test;
    }
    function test5900()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test %= $test;
    }
    function test5901()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test %= $test;
    }
    function test5902()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test %= $test;
    }
    function test5903()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test %= $test;
    }
    function test5904()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test %= $test;
    }
    function test5905()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test %= $test;
    }
    function test5906()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test %= $test;
    }
    function test5907()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test %= $test;
    }
    function test5908()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test %= $test;
    }
    function test5909()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test %= $test;
    }
    function test5910()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test %= $test;
    }
    function test5911()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test %= $test;
    }
    function test5912()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test %= $test;
    }
    function test5913()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test %= $test;
    }
    function test5914()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test %= $test;
    }
    function test5915()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test %= $test;
    }
    function test5916()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test %= $test;
    }
    function test5917()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test %= $test;
    }
    function test5918()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test %= $test;
    }
    function test5919()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test %= $test;
    }
    function test5920()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test %= $test;
    }
    function test5921()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test[$test];
    }
    function test5922()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= [];
    }
    function test5923()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test = $test;
    }
    function test5924()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test =& $test;
    }
    function test5925()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= ~$test;
    }
    function test5926()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= !$test;
    }
    function test5927()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test::$test;
    }
    function test5928()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= clone $test;
    }
    function test5929()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= function () {
        };
    }
    function test5930()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test;
    }
    function test5931()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= self;
    }
    function test5932()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= empty($test);
    }
    function test5933()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= @$test;
    }
    function test5934()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= eval($test);
    }
    function test5935()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test();
    }
    function test5936()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= ( $test);
    }
    function test5937()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test instanceof $test;
    }
    function test5938()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= isset($test);
    }
    function test5939()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= match ($test) {
        };
    }
    function test5940()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test->{$test}();
    }
    function test5941()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= new $test();
    }
    function test5942()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test?->{$test}();
    }
    function test5943()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test?->{$test};
    }
    function test5944()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test--;
    }
    function test5945()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test++;
    }
    function test5946()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= --$test;
    }
    function test5947()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= ++$test;
    }
    function test5948()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= (print $test);
    }
    function test5949()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test->{$test};
    }
    function test5950()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= ``;
    }
    function test5951()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test::$test();
    }
    function test5952()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test::${$test};
    }
    function test5953()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test ? $test : $test;
    }
    function test5954()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= throw $test;
    }
    function test5955()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= -$test;
    }
    function test5956()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= +$test;
    }
    function test5957()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= ${$test};
    }
    function test5958()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= (yield from $test);
    }
    function test5959()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= (yield $test => $test);
    }
    function test5960()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test &= $test;
    }
    function test5961()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test |= $test;
    }
    function test5962()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test ^= $test;
    }
    function test5963()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test ??= $test;
    }
    function test5964()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test .= $test;
    }
    function test5965()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test /= $test;
    }
    function test5966()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test -= $test;
    }
    function test5967()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test %= $test;
    }
    function test5968()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test *= $test;
    }
    function test5969()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test += $test;
    }
    function test5970()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test **= $test;
    }
    function test5971()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test <<= $test;
    }
    function test5972()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test >>= $test;
    }
    function test5973()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test & $test;
    }
    function test5974()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test | $test;
    }
    function test5975()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test ^ $test;
    }
    function test5976()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test && $test;
    }
    function test5977()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test || $test;
    }
    function test5978()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test ?? $test;
    }
    function test5979()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test . $test;
    }
    function test5980()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test / $test;
    }
    function test5981()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test == $test;
    }
    function test5982()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test > $test;
    }
    function test5983()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test >= $test;
    }
    function test5984()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test === $test;
    }
    function test5985()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= ($test and $test);
    }
    function test5986()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= ($test or $test);
    }
    function test5987()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= ($test xor $test);
    }
    function test5988()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test - $test;
    }
    function test5989()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test % $test;
    }
    function test5990()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test * $test;
    }
    function test5991()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test != $test;
    }
    function test5992()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test !== $test;
    }
    function test5993()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test + $test;
    }
    function test5994()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test ** $test;
    }
    function test5995()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test << $test;
    }
    function test5996()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test >> $test;
    }
    function test5997()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test < $test;
    }
    function test5998()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test <= $test;
    }
    function test5999()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test <=> $test;
    }
    function test6000()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= (array) $test;
    }
    function test6001()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= (bool) $test;
    }
    function test6002()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= (double) $test;
    }
    function test6003()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= (int) $test;
    }
    function test6004()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= (object) $test;
    }
    function test6005()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= (string) $test;
    }
    function test6006()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= 0.0;
    }
    function test6007()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= "{$test}";
    }
    function test6008()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= 0;
    }
    function test6009()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= 'test';
    }
    function test6010()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= __CLASS__;
    }
    function test6011()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= __DIR__;
    }
    function test6012()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= __FILE__;
    }
    function test6013()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= __FUNCTION__;
    }
    function test6014()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= __LINE__;
    }
    function test6015()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= __METHOD__;
    }
    function test6016()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= __NAMESPACE__;
    }
    function test6017()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= __TRAIT__;
    }
    function test6018()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] *= $test;
    }
    function test6019()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test *= $test;
    }
    function test6020()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test *= $test;
    }
    function test6021()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test *= $test;
    }
    function test6022()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test *= $test;
    }
    function test6023()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test;
    }
    function test6024()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test *= $test;
    }
    function test6025()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} *= $test;
    }
    function test6026()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} *= $test;
    }
    function test6027()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test *= $test;
    }
    function test6028()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test *= $test;
    }
    function test6029()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test *= $test;
    }
    function test6030()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test *= $test;
    }
    function test6031()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} *= $test;
    }
    function test6032()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test *= $test;
    }
    function test6033()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test *= $test;
    }
    function test6034()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test *= $test;
    }
    function test6035()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test *= $test;
    }
    function test6036()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test *= $test;
    }
    function test6037()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test *= $test;
    }
    function test6038()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test *= $test;
    }
    function test6039()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test *= $test;
    }
    function test6040()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test *= $test;
    }
    function test6041()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test *= $test;
    }
    function test6042()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test *= $test;
    }
    function test6043()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test *= $test;
    }
    function test6044()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test *= $test;
    }
    function test6045()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test *= $test;
    }
    function test6046()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test *= $test;
    }
    function test6047()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test *= $test;
    }
    function test6048()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test *= $test;
    }
    function test6049()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test *= $test;
    }
    function test6050()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test *= $test;
    }
    function test6051()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test *= $test;
    }
    function test6052()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test *= $test;
    }
    function test6053()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test *= $test;
    }
    function test6054()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test *= $test;
    }
    function test6055()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test *= $test;
    }
    function test6056()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test *= $test;
    }
    function test6057()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test *= $test;
    }
    function test6058()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test *= $test;
    }
    function test6059()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test *= $test;
    }
    function test6060()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test *= $test;
    }
    function test6061()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test *= $test;
    }
    function test6062()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test[$test];
    }
    function test6063()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= [];
    }
    function test6064()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test = $test;
    }
    function test6065()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test =& $test;
    }
    function test6066()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= ~$test;
    }
    function test6067()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= !$test;
    }
    function test6068()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test::$test;
    }
    function test6069()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= clone $test;
    }
    function test6070()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= function () {
        };
    }
    function test6071()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test;
    }
    function test6072()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= self;
    }
    function test6073()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= empty($test);
    }
    function test6074()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= @$test;
    }
    function test6075()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= eval($test);
    }
    function test6076()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test();
    }
    function test6077()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= ( $test);
    }
    function test6078()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test instanceof $test;
    }
    function test6079()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= isset($test);
    }
    function test6080()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= match ($test) {
        };
    }
    function test6081()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test->{$test}();
    }
    function test6082()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= new $test();
    }
    function test6083()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test?->{$test}();
    }
    function test6084()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test?->{$test};
    }
    function test6085()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test--;
    }
    function test6086()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test++;
    }
    function test6087()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= --$test;
    }
    function test6088()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= ++$test;
    }
    function test6089()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= (print $test);
    }
    function test6090()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test->{$test};
    }
    function test6091()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= ``;
    }
    function test6092()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test::$test();
    }
    function test6093()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test::${$test};
    }
    function test6094()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test ? $test : $test;
    }
    function test6095()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= throw $test;
    }
    function test6096()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= -$test;
    }
    function test6097()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= +$test;
    }
    function test6098()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= ${$test};
    }
    function test6099()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= (yield from $test);
    }
    function test6100()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= (yield $test => $test);
    }
    function test6101()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test &= $test;
    }
    function test6102()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test |= $test;
    }
    function test6103()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test ^= $test;
    }
    function test6104()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test ??= $test;
    }
    function test6105()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test .= $test;
    }
    function test6106()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test /= $test;
    }
    function test6107()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test -= $test;
    }
    function test6108()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test %= $test;
    }
    function test6109()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test *= $test;
    }
    function test6110()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test += $test;
    }
    function test6111()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test **= $test;
    }
    function test6112()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test <<= $test;
    }
    function test6113()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test >>= $test;
    }
    function test6114()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test & $test;
    }
    function test6115()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test | $test;
    }
    function test6116()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test ^ $test;
    }
    function test6117()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test && $test;
    }
    function test6118()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test || $test;
    }
    function test6119()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test ?? $test;
    }
    function test6120()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test . $test;
    }
    function test6121()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test / $test;
    }
    function test6122()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test == $test;
    }
    function test6123()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test > $test;
    }
    function test6124()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test >= $test;
    }
    function test6125()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test === $test;
    }
    function test6126()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= ($test and $test);
    }
    function test6127()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= ($test or $test);
    }
    function test6128()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= ($test xor $test);
    }
    function test6129()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test - $test;
    }
    function test6130()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test % $test;
    }
    function test6131()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test * $test;
    }
    function test6132()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test != $test;
    }
    function test6133()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test !== $test;
    }
    function test6134()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test + $test;
    }
    function test6135()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test ** $test;
    }
    function test6136()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test << $test;
    }
    function test6137()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test >> $test;
    }
    function test6138()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test < $test;
    }
    function test6139()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test <= $test;
    }
    function test6140()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test <=> $test;
    }
    function test6141()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= (array) $test;
    }
    function test6142()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= (bool) $test;
    }
    function test6143()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= (double) $test;
    }
    function test6144()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= (int) $test;
    }
    function test6145()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= (object) $test;
    }
    function test6146()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= (string) $test;
    }
    function test6147()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= 0.0;
    }
    function test6148()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= "{$test}";
    }
    function test6149()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= 0;
    }
    function test6150()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= 'test';
    }
    function test6151()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= __CLASS__;
    }
    function test6152()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= __DIR__;
    }
    function test6153()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= __FILE__;
    }
    function test6154()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= __FUNCTION__;
    }
    function test6155()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= __LINE__;
    }
    function test6156()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= __METHOD__;
    }
    function test6157()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= __NAMESPACE__;
    }
    function test6158()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= __TRAIT__;
    }
    function test6159()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] += $test;
    }
    function test6160()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test += $test;
    }
    function test6161()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test += $test;
    }
    function test6162()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test += $test;
    }
    function test6163()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test += $test;
    }
    function test6164()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test;
    }
    function test6165()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test += $test;
    }
    function test6166()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} += $test;
    }
    function test6167()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} += $test;
    }
    function test6168()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test += $test;
    }
    function test6169()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test += $test;
    }
    function test6170()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test += $test;
    }
    function test6171()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test += $test;
    }
    function test6172()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} += $test;
    }
    function test6173()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test += $test;
    }
    function test6174()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test += $test;
    }
    function test6175()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test += $test;
    }
    function test6176()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test += $test;
    }
    function test6177()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test += $test;
    }
    function test6178()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test += $test;
    }
    function test6179()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test += $test;
    }
    function test6180()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test += $test;
    }
    function test6181()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test += $test;
    }
    function test6182()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test += $test;
    }
    function test6183()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test += $test;
    }
    function test6184()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test += $test;
    }
    function test6185()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test += $test;
    }
    function test6186()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test += $test;
    }
    function test6187()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test += $test;
    }
    function test6188()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test += $test;
    }
    function test6189()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test += $test;
    }
    function test6190()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test += $test;
    }
    function test6191()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test += $test;
    }
    function test6192()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test += $test;
    }
    function test6193()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test += $test;
    }
    function test6194()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test += $test;
    }
    function test6195()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test += $test;
    }
    function test6196()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test += $test;
    }
    function test6197()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test += $test;
    }
    function test6198()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test += $test;
    }
    function test6199()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test += $test;
    }
    function test6200()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test += $test;
    }
    function test6201()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test += $test;
    }
    function test6202()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test += $test;
    }
    function test6203()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test[$test];
    }
    function test6204()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += [];
    }
    function test6205()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test = $test;
    }
    function test6206()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test =& $test;
    }
    function test6207()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += ~$test;
    }
    function test6208()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += !$test;
    }
    function test6209()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test::$test;
    }
    function test6210()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += clone $test;
    }
    function test6211()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += function () {
        };
    }
    function test6212()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test;
    }
    function test6213()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += self;
    }
    function test6214()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += empty($test);
    }
    function test6215()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += @$test;
    }
    function test6216()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += eval($test);
    }
    function test6217()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test();
    }
    function test6218()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += ( $test);
    }
    function test6219()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test instanceof $test;
    }
    function test6220()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += isset($test);
    }
    function test6221()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += match ($test) {
        };
    }
    function test6222()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test->{$test}();
    }
    function test6223()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += new $test();
    }
    function test6224()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test?->{$test}();
    }
    function test6225()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test?->{$test};
    }
    function test6226()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test--;
    }
    function test6227()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test++;
    }
    function test6228()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += --$test;
    }
    function test6229()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += ++$test;
    }
    function test6230()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += (print $test);
    }
    function test6231()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test->{$test};
    }
    function test6232()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += ``;
    }
    function test6233()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test::$test();
    }
    function test6234()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test::${$test};
    }
    function test6235()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test ? $test : $test;
    }
    function test6236()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += throw $test;
    }
    function test6237()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += -$test;
    }
    function test6238()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += +$test;
    }
    function test6239()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += ${$test};
    }
    function test6240()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += (yield from $test);
    }
    function test6241()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += (yield $test => $test);
    }
    function test6242()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test &= $test;
    }
    function test6243()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test |= $test;
    }
    function test6244()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test ^= $test;
    }
    function test6245()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test ??= $test;
    }
    function test6246()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test .= $test;
    }
    function test6247()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test /= $test;
    }
    function test6248()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test -= $test;
    }
    function test6249()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test %= $test;
    }
    function test6250()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test *= $test;
    }
    function test6251()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test += $test;
    }
    function test6252()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test **= $test;
    }
    function test6253()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test <<= $test;
    }
    function test6254()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test >>= $test;
    }
    function test6255()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test & $test;
    }
    function test6256()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test | $test;
    }
    function test6257()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test ^ $test;
    }
    function test6258()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test && $test;
    }
    function test6259()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test || $test;
    }
    function test6260()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test ?? $test;
    }
    function test6261()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test . $test;
    }
    function test6262()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test / $test;
    }
    function test6263()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test == $test;
    }
    function test6264()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test > $test;
    }
    function test6265()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test >= $test;
    }
    function test6266()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test === $test;
    }
    function test6267()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += ($test and $test);
    }
    function test6268()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += ($test or $test);
    }
    function test6269()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += ($test xor $test);
    }
    function test6270()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test - $test;
    }
    function test6271()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test % $test;
    }
    function test6272()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test * $test;
    }
    function test6273()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test != $test;
    }
    function test6274()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test !== $test;
    }
    function test6275()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test + $test;
    }
    function test6276()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test ** $test;
    }
    function test6277()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test << $test;
    }
    function test6278()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test >> $test;
    }
    function test6279()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test < $test;
    }
    function test6280()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test <= $test;
    }
    function test6281()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test <=> $test;
    }
    function test6282()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += (array) $test;
    }
    function test6283()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += (bool) $test;
    }
    function test6284()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += (double) $test;
    }
    function test6285()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += (int) $test;
    }
    function test6286()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += (object) $test;
    }
    function test6287()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += (string) $test;
    }
    function test6288()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += 0.0;
    }
    function test6289()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += "{$test}";
    }
    function test6290()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += 0;
    }
    function test6291()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += 'test';
    }
    function test6292()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += __CLASS__;
    }
    function test6293()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += __DIR__;
    }
    function test6294()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += __FILE__;
    }
    function test6295()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += __FUNCTION__;
    }
    function test6296()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += __LINE__;
    }
    function test6297()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += __METHOD__;
    }
    function test6298()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += __NAMESPACE__;
    }
    function test6299()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += __TRAIT__;
    }
    function test6300()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] **= $test;
    }
    function test6301()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test **= $test;
    }
    function test6302()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test **= $test;
    }
    function test6303()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test **= $test;
    }
    function test6304()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test **= $test;
    }
    function test6305()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test;
    }
    function test6306()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test **= $test;
    }
    function test6307()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} **= $test;
    }
    function test6308()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} **= $test;
    }
    function test6309()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test **= $test;
    }
    function test6310()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test **= $test;
    }
    function test6311()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test **= $test;
    }
    function test6312()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test **= $test;
    }
    function test6313()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} **= $test;
    }
    function test6314()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test **= $test;
    }
    function test6315()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test **= $test;
    }
    function test6316()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test **= $test;
    }
    function test6317()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test **= $test;
    }
    function test6318()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test **= $test;
    }
    function test6319()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test **= $test;
    }
    function test6320()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test **= $test;
    }
    function test6321()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test **= $test;
    }
    function test6322()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test **= $test;
    }
    function test6323()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test **= $test;
    }
    function test6324()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test **= $test;
    }
    function test6325()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test **= $test;
    }
    function test6326()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test **= $test;
    }
    function test6327()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test **= $test;
    }
    function test6328()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test **= $test;
    }
    function test6329()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test **= $test;
    }
    function test6330()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test **= $test;
    }
    function test6331()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test **= $test;
    }
    function test6332()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test **= $test;
    }
    function test6333()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test **= $test;
    }
    function test6334()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test **= $test;
    }
    function test6335()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test **= $test;
    }
    function test6336()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test **= $test;
    }
    function test6337()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test **= $test;
    }
    function test6338()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test **= $test;
    }
    function test6339()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test **= $test;
    }
    function test6340()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test **= $test;
    }
    function test6341()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test **= $test;
    }
    function test6342()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test **= $test;
    }
    function test6343()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test **= $test;
    }
    function test6344()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test[$test];
    }
    function test6345()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= [];
    }
    function test6346()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test = $test;
    }
    function test6347()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test =& $test;
    }
    function test6348()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= ~$test;
    }
    function test6349()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= !$test;
    }
    function test6350()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test::$test;
    }
    function test6351()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= clone $test;
    }
    function test6352()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= function () {
        };
    }
    function test6353()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test;
    }
    function test6354()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= self;
    }
    function test6355()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= empty($test);
    }
    function test6356()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= @$test;
    }
    function test6357()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= eval($test);
    }
    function test6358()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test();
    }
    function test6359()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= ( $test);
    }
    function test6360()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test instanceof $test;
    }
    function test6361()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= isset($test);
    }
    function test6362()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= match ($test) {
        };
    }
    function test6363()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test->{$test}();
    }
    function test6364()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= new $test();
    }
    function test6365()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test?->{$test}();
    }
    function test6366()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test?->{$test};
    }
    function test6367()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test--;
    }
    function test6368()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test++;
    }
    function test6369()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= --$test;
    }
    function test6370()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= ++$test;
    }
    function test6371()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= (print $test);
    }
    function test6372()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test->{$test};
    }
    function test6373()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= ``;
    }
    function test6374()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test::$test();
    }
    function test6375()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test::${$test};
    }
    function test6376()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test ? $test : $test;
    }
    function test6377()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= throw $test;
    }
    function test6378()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= -$test;
    }
    function test6379()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= +$test;
    }
    function test6380()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= ${$test};
    }
    function test6381()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= (yield from $test);
    }
    function test6382()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= (yield $test => $test);
    }
    function test6383()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test &= $test;
    }
    function test6384()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test |= $test;
    }
    function test6385()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test ^= $test;
    }
    function test6386()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test ??= $test;
    }
    function test6387()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test .= $test;
    }
    function test6388()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test /= $test;
    }
    function test6389()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test -= $test;
    }
    function test6390()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test %= $test;
    }
    function test6391()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test *= $test;
    }
    function test6392()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test += $test;
    }
    function test6393()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test **= $test;
    }
    function test6394()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test <<= $test;
    }
    function test6395()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test >>= $test;
    }
    function test6396()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test & $test;
    }
    function test6397()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test | $test;
    }
    function test6398()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test ^ $test;
    }
    function test6399()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test && $test;
    }
    function test6400()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test || $test;
    }
    function test6401()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test ?? $test;
    }
    function test6402()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test . $test;
    }
    function test6403()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test / $test;
    }
    function test6404()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test == $test;
    }
    function test6405()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test > $test;
    }
    function test6406()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test >= $test;
    }
    function test6407()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test === $test;
    }
    function test6408()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= ($test and $test);
    }
    function test6409()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= ($test or $test);
    }
    function test6410()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= ($test xor $test);
    }
    function test6411()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test - $test;
    }
    function test6412()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test % $test;
    }
    function test6413()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test * $test;
    }
    function test6414()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test != $test;
    }
    function test6415()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test !== $test;
    }
    function test6416()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test + $test;
    }
    function test6417()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test ** $test;
    }
    function test6418()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test << $test;
    }
    function test6419()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test >> $test;
    }
    function test6420()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test < $test;
    }
    function test6421()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test <= $test;
    }
    function test6422()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test <=> $test;
    }
    function test6423()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= (array) $test;
    }
    function test6424()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= (bool) $test;
    }
    function test6425()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= (double) $test;
    }
    function test6426()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= (int) $test;
    }
    function test6427()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= (object) $test;
    }
    function test6428()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= (string) $test;
    }
    function test6429()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= 0.0;
    }
    function test6430()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= "{$test}";
    }
    function test6431()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= 0;
    }
    function test6432()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= 'test';
    }
    function test6433()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= __CLASS__;
    }
    function test6434()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= __DIR__;
    }
    function test6435()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= __FILE__;
    }
    function test6436()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= __FUNCTION__;
    }
    function test6437()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= __LINE__;
    }
    function test6438()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= __METHOD__;
    }
    function test6439()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= __NAMESPACE__;
    }
    function test6440()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= __TRAIT__;
    }
    function test6441()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] <<= $test;
    }
    function test6442()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test <<= $test;
    }
    function test6443()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test <<= $test;
    }
    function test6444()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test <<= $test;
    }
    function test6445()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test <<= $test;
    }
    function test6446()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test;
    }
    function test6447()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test <<= $test;
    }
    function test6448()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} <<= $test;
    }
    function test6449()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} <<= $test;
    }
    function test6450()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test <<= $test;
    }
    function test6451()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test <<= $test;
    }
    function test6452()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test <<= $test;
    }
    function test6453()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test <<= $test;
    }
    function test6454()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} <<= $test;
    }
    function test6455()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test <<= $test;
    }
    function test6456()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test <<= $test;
    }
    function test6457()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test <<= $test;
    }
    function test6458()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test <<= $test;
    }
    function test6459()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test <<= $test;
    }
    function test6460()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test <<= $test;
    }
    function test6461()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test <<= $test;
    }
    function test6462()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test <<= $test;
    }
    function test6463()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test <<= $test;
    }
    function test6464()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test <<= $test;
    }
    function test6465()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test <<= $test;
    }
    function test6466()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test <<= $test;
    }
    function test6467()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test <<= $test;
    }
    function test6468()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test <<= $test;
    }
    function test6469()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test <<= $test;
    }
    function test6470()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test <<= $test;
    }
    function test6471()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test <<= $test;
    }
    function test6472()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test <<= $test;
    }
    function test6473()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test <<= $test;
    }
    function test6474()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test <<= $test;
    }
    function test6475()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test <<= $test;
    }
    function test6476()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test <<= $test;
    }
    function test6477()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test <<= $test;
    }
    function test6478()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test <<= $test;
    }
    function test6479()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test <<= $test;
    }
    function test6480()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test <<= $test;
    }
    function test6481()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test <<= $test;
    }
    function test6482()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test <<= $test;
    }
    function test6483()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test <<= $test;
    }
    function test6484()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test <<= $test;
    }
    function test6485()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test[$test];
    }
    function test6486()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= [];
    }
    function test6487()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test = $test;
    }
    function test6488()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test =& $test;
    }
    function test6489()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= ~$test;
    }
    function test6490()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= !$test;
    }
    function test6491()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test::$test;
    }
    function test6492()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= clone $test;
    }
    function test6493()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= function () {
        };
    }
    function test6494()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test;
    }
    function test6495()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= self;
    }
    function test6496()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= empty($test);
    }
    function test6497()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= @$test;
    }
    function test6498()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= eval($test);
    }
    function test6499()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test();
    }
    function test6500()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= ( $test);
    }
    function test6501()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test instanceof $test;
    }
    function test6502()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= isset($test);
    }
    function test6503()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= match ($test) {
        };
    }
    function test6504()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test->{$test}();
    }
    function test6505()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= new $test();
    }
    function test6506()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test?->{$test}();
    }
    function test6507()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test?->{$test};
    }
    function test6508()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test--;
    }
    function test6509()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test++;
    }
    function test6510()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= --$test;
    }
    function test6511()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= ++$test;
    }
    function test6512()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= (print $test);
    }
    function test6513()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test->{$test};
    }
    function test6514()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= ``;
    }
    function test6515()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test::$test();
    }
    function test6516()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test::${$test};
    }
    function test6517()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test ? $test : $test;
    }
    function test6518()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= throw $test;
    }
    function test6519()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= -$test;
    }
    function test6520()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= +$test;
    }
    function test6521()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= ${$test};
    }
    function test6522()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= (yield from $test);
    }
    function test6523()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= (yield $test => $test);
    }
    function test6524()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test &= $test;
    }
    function test6525()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test |= $test;
    }
    function test6526()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test ^= $test;
    }
    function test6527()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test ??= $test;
    }
    function test6528()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test .= $test;
    }
    function test6529()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test /= $test;
    }
    function test6530()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test -= $test;
    }
    function test6531()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test %= $test;
    }
    function test6532()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test *= $test;
    }
    function test6533()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test += $test;
    }
    function test6534()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test **= $test;
    }
    function test6535()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test <<= $test;
    }
    function test6536()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test >>= $test;
    }
    function test6537()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test & $test;
    }
    function test6538()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test | $test;
    }
    function test6539()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test ^ $test;
    }
    function test6540()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test && $test;
    }
    function test6541()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test || $test;
    }
    function test6542()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test ?? $test;
    }
    function test6543()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test . $test;
    }
    function test6544()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test / $test;
    }
    function test6545()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test == $test;
    }
    function test6546()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test > $test;
    }
    function test6547()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test >= $test;
    }
    function test6548()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test === $test;
    }
    function test6549()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= ($test and $test);
    }
    function test6550()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= ($test or $test);
    }
    function test6551()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= ($test xor $test);
    }
    function test6552()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test - $test;
    }
    function test6553()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test % $test;
    }
    function test6554()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test * $test;
    }
    function test6555()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test != $test;
    }
    function test6556()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test !== $test;
    }
    function test6557()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test + $test;
    }
    function test6558()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test ** $test;
    }
    function test6559()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test << $test;
    }
    function test6560()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test >> $test;
    }
    function test6561()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test < $test;
    }
    function test6562()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test <= $test;
    }
    function test6563()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test <=> $test;
    }
    function test6564()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= (array) $test;
    }
    function test6565()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= (bool) $test;
    }
    function test6566()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= (double) $test;
    }
    function test6567()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= (int) $test;
    }
    function test6568()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= (object) $test;
    }
    function test6569()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= (string) $test;
    }
    function test6570()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= 0.0;
    }
    function test6571()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= "{$test}";
    }
    function test6572()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= 0;
    }
    function test6573()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= 'test';
    }
    function test6574()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= __CLASS__;
    }
    function test6575()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= __DIR__;
    }
    function test6576()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= __FILE__;
    }
    function test6577()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= __FUNCTION__;
    }
    function test6578()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= __LINE__;
    }
    function test6579()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= __METHOD__;
    }
    function test6580()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= __NAMESPACE__;
    }
    function test6581()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= __TRAIT__;
    }
    function test6582()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] >>= $test;
    }
    function test6583()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test >>= $test;
    }
    function test6584()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test >>= $test;
    }
    function test6585()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test >>= $test;
    }
    function test6586()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test >>= $test;
    }
    function test6587()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test;
    }
    function test6588()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test >>= $test;
    }
    function test6589()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} >>= $test;
    }
    function test6590()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} >>= $test;
    }
    function test6591()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test >>= $test;
    }
    function test6592()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test >>= $test;
    }
    function test6593()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test >>= $test;
    }
    function test6594()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test >>= $test;
    }
    function test6595()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} >>= $test;
    }
    function test6596()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test >>= $test;
    }
    function test6597()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test >>= $test;
    }
    function test6598()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test >>= $test;
    }
    function test6599()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test >>= $test;
    }
    function test6600()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test >>= $test;
    }
    function test6601()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test >>= $test;
    }
    function test6602()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test >>= $test;
    }
    function test6603()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test >>= $test;
    }
    function test6604()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test >>= $test;
    }
    function test6605()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test >>= $test;
    }
    function test6606()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test >>= $test;
    }
    function test6607()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test >>= $test;
    }
    function test6608()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test >>= $test;
    }
    function test6609()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test >>= $test;
    }
    function test6610()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test >>= $test;
    }
    function test6611()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test >>= $test;
    }
    function test6612()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test >>= $test;
    }
    function test6613()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test >>= $test;
    }
    function test6614()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test >>= $test;
    }
    function test6615()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test >>= $test;
    }
    function test6616()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test >>= $test;
    }
    function test6617()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test >>= $test;
    }
    function test6618()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test >>= $test;
    }
    function test6619()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test >>= $test;
    }
    function test6620()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test >>= $test;
    }
    function test6621()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test >>= $test;
    }
    function test6622()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test >>= $test;
    }
    function test6623()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test >>= $test;
    }
    function test6624()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test >>= $test;
    }
    function test6625()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test >>= $test;
    }
    function test6626()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test[$test];
    }
    function test6627()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= [];
    }
    function test6628()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test = $test;
    }
    function test6629()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test =& $test;
    }
    function test6630()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= ~$test;
    }
    function test6631()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= !$test;
    }
    function test6632()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test::$test;
    }
    function test6633()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= clone $test;
    }
    function test6634()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= function () {
        };
    }
    function test6635()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test;
    }
    function test6636()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= self;
    }
    function test6637()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= empty($test);
    }
    function test6638()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= @$test;
    }
    function test6639()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= eval($test);
    }
    function test6640()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test();
    }
    function test6641()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= ( $test);
    }
    function test6642()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test instanceof $test;
    }
    function test6643()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= isset($test);
    }
    function test6644()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= match ($test) {
        };
    }
    function test6645()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test->{$test}();
    }
    function test6646()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= new $test();
    }
    function test6647()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test?->{$test}();
    }
    function test6648()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test?->{$test};
    }
    function test6649()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test--;
    }
    function test6650()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test++;
    }
    function test6651()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= --$test;
    }
    function test6652()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= ++$test;
    }
    function test6653()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= (print $test);
    }
    function test6654()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test->{$test};
    }
    function test6655()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= ``;
    }
    function test6656()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test::$test();
    }
    function test6657()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test::${$test};
    }
    function test6658()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test ? $test : $test;
    }
    function test6659()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= throw $test;
    }
    function test6660()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= -$test;
    }
    function test6661()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= +$test;
    }
    function test6662()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= ${$test};
    }
    function test6663()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= (yield from $test);
    }
    function test6664()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= (yield $test => $test);
    }
    function test6665()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test &= $test;
    }
    function test6666()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test |= $test;
    }
    function test6667()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test ^= $test;
    }
    function test6668()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test ??= $test;
    }
    function test6669()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test .= $test;
    }
    function test6670()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test /= $test;
    }
    function test6671()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test -= $test;
    }
    function test6672()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test %= $test;
    }
    function test6673()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test *= $test;
    }
    function test6674()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test += $test;
    }
    function test6675()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test **= $test;
    }
    function test6676()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test <<= $test;
    }
    function test6677()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test >>= $test;
    }
    function test6678()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test & $test;
    }
    function test6679()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test | $test;
    }
    function test6680()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test ^ $test;
    }
    function test6681()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test && $test;
    }
    function test6682()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test || $test;
    }
    function test6683()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test ?? $test;
    }
    function test6684()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test . $test;
    }
    function test6685()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test / $test;
    }
    function test6686()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test == $test;
    }
    function test6687()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test > $test;
    }
    function test6688()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test >= $test;
    }
    function test6689()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test === $test;
    }
    function test6690()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= ($test and $test);
    }
    function test6691()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= ($test or $test);
    }
    function test6692()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= ($test xor $test);
    }
    function test6693()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test - $test;
    }
    function test6694()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test % $test;
    }
    function test6695()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test * $test;
    }
    function test6696()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test != $test;
    }
    function test6697()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test !== $test;
    }
    function test6698()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test + $test;
    }
    function test6699()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test ** $test;
    }
    function test6700()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test << $test;
    }
    function test6701()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test >> $test;
    }
    function test6702()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test < $test;
    }
    function test6703()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test <= $test;
    }
    function test6704()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test <=> $test;
    }
    function test6705()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= (array) $test;
    }
    function test6706()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= (bool) $test;
    }
    function test6707()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= (double) $test;
    }
    function test6708()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= (int) $test;
    }
    function test6709()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= (object) $test;
    }
    function test6710()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= (string) $test;
    }
    function test6711()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= 0.0;
    }
    function test6712()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= "{$test}";
    }
    function test6713()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= 0;
    }
    function test6714()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= 'test';
    }
    function test6715()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= __CLASS__;
    }
    function test6716()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= __DIR__;
    }
    function test6717()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= __FILE__;
    }
    function test6718()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= __FUNCTION__;
    }
    function test6719()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= __LINE__;
    }
    function test6720()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= __METHOD__;
    }
    function test6721()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= __NAMESPACE__;
    }
    function test6722()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= __TRAIT__;
    }
    function test6723()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] & $test;
    }
    function test6724()
    {
        $this->assertTrue(0 === 0);
        fn() => [] & $test;
    }
    function test6725()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test = $test) & $test;
    }
    function test6726()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test =& $test) & $test;
    }
    function test6727()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test & $test;
    }
    function test6728()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test & $test;
    }
    function test6729()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test & $test;
    }
    function test6730()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test & $test;
    }
    function test6731()
    {
        $this->assertTrue(0 === 0);
        fn() => function () {
        } & $test;
    }
    function test6732()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test;
    }
    function test6733()
    {
        $this->assertTrue(0 === 0);
        fn() => self & $test;
    }
    function test6734()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test) & $test;
    }
    function test6735()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test & $test;
    }
    function test6736()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test) & $test;
    }
    function test6737()
    {
        $this->assertTrue(0 === 0);
        fn() => $test() & $test;
    }
    function test6738()
    {
        $this->assertTrue(0 === 0);
        fn() => ( $test) & $test;
    }
    function test6739()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof $test & $test;
    }
    function test6740()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test) & $test;
    }
    function test6741()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test) {
        } & $test;
    }
    function test6742()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}() & $test;
    }
    function test6743()
    {
        $this->assertTrue(0 === 0);
        fn() => new $test() & $test;
    }
    function test6744()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}() & $test;
    }
    function test6745()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test} & $test;
    }
    function test6746()
    {
        $this->assertTrue(0 === 0);
        fn() => $test-- & $test;
    }
    function test6747()
    {
        $this->assertTrue(0 === 0);
        fn() => $test++ & $test;
    }
    function test6748()
    {
        $this->assertTrue(0 === 0);
        fn() => --$test & $test;
    }
    function test6749()
    {
        $this->assertTrue(0 === 0);
        fn() => ++$test & $test;
    }
    function test6750()
    {
        $this->assertTrue(0 === 0);
        fn() => (print $test) & $test;
    }
    function test6751()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} & $test;
    }
    function test6752()
    {
        $this->assertTrue(0 === 0);
        fn() => `` & $test;
    }
    function test6753()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test() & $test;
    }
    function test6754()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} & $test;
    }
    function test6755()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ? $test : $test) & $test;
    }
    function test6756()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test & $test;
    }
    function test6757()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test & $test;
    }
    function test6758()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test & $test;
    }
    function test6759()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} & $test;
    }
    function test6760()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield from $test) & $test;
    }
    function test6761()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test) & $test;
    }
    function test6762()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test &= $test) & $test;
    }
    function test6763()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test |= $test) & $test;
    }
    function test6764()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^= $test) & $test;
    }
    function test6765()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ??= $test) & $test;
    }
    function test6766()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test .= $test) & $test;
    }
    function test6767()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test /= $test) & $test;
    }
    function test6768()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test -= $test) & $test;
    }
    function test6769()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test %= $test) & $test;
    }
    function test6770()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test *= $test) & $test;
    }
    function test6771()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test += $test) & $test;
    }
    function test6772()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test **= $test) & $test;
    }
    function test6773()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <<= $test) & $test;
    }
    function test6774()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >>= $test) & $test;
    }
    function test6775()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test & $test;
    }
    function test6776()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test | $test) & $test;
    }
    function test6777()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^ $test) & $test;
    }
    function test6778()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test && $test) & $test;
    }
    function test6779()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test || $test) & $test;
    }
    function test6780()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ?? $test) & $test;
    }
    function test6781()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test & $test;
    }
    function test6782()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test & $test;
    }
    function test6783()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test & $test;
    }
    function test6784()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test & $test;
    }
    function test6785()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test & $test;
    }
    function test6786()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test & $test;
    }
    function test6787()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test and $test) & $test;
    }
    function test6788()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test or $test) & $test;
    }
    function test6789()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test xor $test) & $test;
    }
    function test6790()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test & $test;
    }
    function test6791()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test & $test;
    }
    function test6792()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test & $test;
    }
    function test6793()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test & $test;
    }
    function test6794()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test & $test;
    }
    function test6795()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test & $test;
    }
    function test6796()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test & $test;
    }
    function test6797()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test & $test;
    }
    function test6798()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test & $test;
    }
    function test6799()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test & $test;
    }
    function test6800()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test & $test;
    }
    function test6801()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test & $test;
    }
    function test6802()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test & $test;
    }
    function test6803()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test & $test;
    }
    function test6804()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test & $test;
    }
    function test6805()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test & $test;
    }
    function test6806()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test & $test;
    }
    function test6807()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test & $test;
    }
    function test6808()
    {
        $this->assertTrue(0 === 0);
        fn() => 0.0 & $test;
    }
    function test6809()
    {
        $this->assertTrue(0 === 0);
        fn() => "{$test}" & $test;
    }
    function test6810()
    {
        $this->assertTrue(0 === 0);
        fn() => 0 & $test;
    }
    function test6811()
    {
        $this->assertTrue(0 === 0);
        fn() => 'test' & $test;
    }
    function test6812()
    {
        $this->assertTrue(0 === 0);
        fn() => __CLASS__ & $test;
    }
    function test6813()
    {
        $this->assertTrue(0 === 0);
        fn() => __DIR__ & $test;
    }
    function test6814()
    {
        $this->assertTrue(0 === 0);
        fn() => __FILE__ & $test;
    }
    function test6815()
    {
        $this->assertTrue(0 === 0);
        fn() => __FUNCTION__ & $test;
    }
    function test6816()
    {
        $this->assertTrue(0 === 0);
        fn() => __LINE__ & $test;
    }
    function test6817()
    {
        $this->assertTrue(0 === 0);
        fn() => __METHOD__ & $test;
    }
    function test6818()
    {
        $this->assertTrue(0 === 0);
        fn() => __NAMESPACE__ & $test;
    }
    function test6819()
    {
        $this->assertTrue(0 === 0);
        fn() => __TRAIT__ & $test;
    }
    function test6820()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test[$test];
    }
    function test6821()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & [];
    }
    function test6822()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & ($test = $test);
    }
    function test6823()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & ($test =& $test);
    }
    function test6824()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & ~$test;
    }
    function test6825()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & !$test;
    }
    function test6826()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test::$test;
    }
    function test6827()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & clone $test;
    }
    function test6828()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & function () {
        };
    }
    function test6829()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test;
    }
    function test6830()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & self;
    }
    function test6831()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & empty($test);
    }
    function test6832()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & @$test;
    }
    function test6833()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & eval($test);
    }
    function test6834()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test();
    }
    function test6835()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & ( $test);
    }
    function test6836()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test instanceof $test;
    }
    function test6837()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & isset($test);
    }
    function test6838()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & match ($test) {
        };
    }
    function test6839()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test->{$test}();
    }
    function test6840()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & new $test();
    }
    function test6841()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test?->{$test}();
    }
    function test6842()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test?->{$test};
    }
    function test6843()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test--;
    }
    function test6844()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test++;
    }
    function test6845()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & --$test;
    }
    function test6846()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & ++$test;
    }
    function test6847()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & (print $test);
    }
    function test6848()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test->{$test};
    }
    function test6849()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & ``;
    }
    function test6850()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test::$test();
    }
    function test6851()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test::${$test};
    }
    function test6852()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & ($test ? $test : $test);
    }
    function test6853()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & throw $test;
    }
    function test6854()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & -$test;
    }
    function test6855()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & +$test;
    }
    function test6856()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & ${$test};
    }
    function test6857()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & (yield from $test);
    }
    function test6858()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & (yield $test => $test);
    }
    function test6859()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & ($test &= $test);
    }
    function test6860()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & ($test |= $test);
    }
    function test6861()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & ($test ^= $test);
    }
    function test6862()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & ($test ??= $test);
    }
    function test6863()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & ($test .= $test);
    }
    function test6864()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & ($test /= $test);
    }
    function test6865()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & ($test -= $test);
    }
    function test6866()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & ($test %= $test);
    }
    function test6867()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & ($test *= $test);
    }
    function test6868()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & ($test += $test);
    }
    function test6869()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & ($test **= $test);
    }
    function test6870()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & ($test <<= $test);
    }
    function test6871()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & ($test >>= $test);
    }
    function test6872()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & ($test & $test);
    }
    function test6873()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & ($test | $test);
    }
    function test6874()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & ($test ^ $test);
    }
    function test6875()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & ($test && $test);
    }
    function test6876()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & ($test || $test);
    }
    function test6877()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & ($test ?? $test);
    }
    function test6878()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test . $test;
    }
    function test6879()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test / $test;
    }
    function test6880()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test == $test;
    }
    function test6881()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test > $test;
    }
    function test6882()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test >= $test;
    }
    function test6883()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test === $test;
    }
    function test6884()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & ($test and $test);
    }
    function test6885()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & ($test or $test);
    }
    function test6886()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & ($test xor $test);
    }
    function test6887()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test - $test;
    }
    function test6888()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test % $test;
    }
    function test6889()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test * $test;
    }
    function test6890()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test != $test;
    }
    function test6891()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test !== $test;
    }
    function test6892()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test + $test;
    }
    function test6893()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test ** $test;
    }
    function test6894()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test << $test;
    }
    function test6895()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test >> $test;
    }
    function test6896()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test < $test;
    }
    function test6897()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test <= $test;
    }
    function test6898()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test <=> $test;
    }
    function test6899()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & (array) $test;
    }
    function test6900()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & (bool) $test;
    }
    function test6901()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & (double) $test;
    }
    function test6902()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & (int) $test;
    }
    function test6903()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & (object) $test;
    }
    function test6904()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & (string) $test;
    }
    function test6905()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & 0.0;
    }
    function test6906()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & "{$test}";
    }
    function test6907()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & 0;
    }
    function test6908()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & 'test';
    }
    function test6909()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & __CLASS__;
    }
    function test6910()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & __DIR__;
    }
    function test6911()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & __FILE__;
    }
    function test6912()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & __FUNCTION__;
    }
    function test6913()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & __LINE__;
    }
    function test6914()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & __METHOD__;
    }
    function test6915()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & __NAMESPACE__;
    }
    function test6916()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & __TRAIT__;
    }
    function test6917()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] | $test;
    }
    function test6918()
    {
        $this->assertTrue(0 === 0);
        fn() => [] | $test;
    }
    function test6919()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test = $test) | $test;
    }
    function test6920()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test =& $test) | $test;
    }
    function test6921()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test | $test;
    }
    function test6922()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test | $test;
    }
    function test6923()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test | $test;
    }
    function test6924()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test | $test;
    }
    function test6925()
    {
        $this->assertTrue(0 === 0);
        fn() => function () {
        } | $test;
    }
    function test6926()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test;
    }
    function test6927()
    {
        $this->assertTrue(0 === 0);
        fn() => self | $test;
    }
    function test6928()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test) | $test;
    }
    function test6929()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test | $test;
    }
    function test6930()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test) | $test;
    }
    function test6931()
    {
        $this->assertTrue(0 === 0);
        fn() => $test() | $test;
    }
    function test6932()
    {
        $this->assertTrue(0 === 0);
        fn() => ( $test) | $test;
    }
    function test6933()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof $test | $test;
    }
    function test6934()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test) | $test;
    }
    function test6935()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test) {
        } | $test;
    }
    function test6936()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}() | $test;
    }
    function test6937()
    {
        $this->assertTrue(0 === 0);
        fn() => new $test() | $test;
    }
    function test6938()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}() | $test;
    }
    function test6939()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test} | $test;
    }
    function test6940()
    {
        $this->assertTrue(0 === 0);
        fn() => $test-- | $test;
    }
    function test6941()
    {
        $this->assertTrue(0 === 0);
        fn() => $test++ | $test;
    }
    function test6942()
    {
        $this->assertTrue(0 === 0);
        fn() => --$test | $test;
    }
    function test6943()
    {
        $this->assertTrue(0 === 0);
        fn() => ++$test | $test;
    }
    function test6944()
    {
        $this->assertTrue(0 === 0);
        fn() => (print $test) | $test;
    }
    function test6945()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} | $test;
    }
    function test6946()
    {
        $this->assertTrue(0 === 0);
        fn() => `` | $test;
    }
    function test6947()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test() | $test;
    }
    function test6948()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} | $test;
    }
    function test6949()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ? $test : $test) | $test;
    }
    function test6950()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test | $test;
    }
    function test6951()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test | $test;
    }
    function test6952()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test | $test;
    }
    function test6953()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} | $test;
    }
    function test6954()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield from $test) | $test;
    }
    function test6955()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test) | $test;
    }
    function test6956()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test &= $test) | $test;
    }
    function test6957()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test |= $test) | $test;
    }
    function test6958()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^= $test) | $test;
    }
    function test6959()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ??= $test) | $test;
    }
    function test6960()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test .= $test) | $test;
    }
    function test6961()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test /= $test) | $test;
    }
    function test6962()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test -= $test) | $test;
    }
    function test6963()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test %= $test) | $test;
    }
    function test6964()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test *= $test) | $test;
    }
    function test6965()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test += $test) | $test;
    }
    function test6966()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test **= $test) | $test;
    }
    function test6967()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <<= $test) | $test;
    }
    function test6968()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >>= $test) | $test;
    }
    function test6969()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test | $test;
    }
    function test6970()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test | $test;
    }
    function test6971()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test | $test;
    }
    function test6972()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test && $test) | $test;
    }
    function test6973()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test || $test) | $test;
    }
    function test6974()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ?? $test) | $test;
    }
    function test6975()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test | $test;
    }
    function test6976()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test | $test;
    }
    function test6977()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test | $test;
    }
    function test6978()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test | $test;
    }
    function test6979()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test | $test;
    }
    function test6980()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test | $test;
    }
    function test6981()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test and $test) | $test;
    }
    function test6982()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test or $test) | $test;
    }
    function test6983()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test xor $test) | $test;
    }
    function test6984()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test | $test;
    }
    function test6985()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test | $test;
    }
    function test6986()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test | $test;
    }
    function test6987()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test | $test;
    }
    function test6988()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test | $test;
    }
    function test6989()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test | $test;
    }
    function test6990()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test | $test;
    }
    function test6991()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test | $test;
    }
    function test6992()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test | $test;
    }
    function test6993()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test | $test;
    }
    function test6994()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test | $test;
    }
    function test6995()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test | $test;
    }
    function test6996()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test | $test;
    }
    function test6997()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test | $test;
    }
    function test6998()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test | $test;
    }
    function test6999()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test | $test;
    }
    function test7000()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test | $test;
    }
    function test7001()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test | $test;
    }
    function test7002()
    {
        $this->assertTrue(0 === 0);
        fn() => 0.0 | $test;
    }
    function test7003()
    {
        $this->assertTrue(0 === 0);
        fn() => "{$test}" | $test;
    }
    function test7004()
    {
        $this->assertTrue(0 === 0);
        fn() => 0 | $test;
    }
    function test7005()
    {
        $this->assertTrue(0 === 0);
        fn() => 'test' | $test;
    }
    function test7006()
    {
        $this->assertTrue(0 === 0);
        fn() => __CLASS__ | $test;
    }
    function test7007()
    {
        $this->assertTrue(0 === 0);
        fn() => __DIR__ | $test;
    }
    function test7008()
    {
        $this->assertTrue(0 === 0);
        fn() => __FILE__ | $test;
    }
    function test7009()
    {
        $this->assertTrue(0 === 0);
        fn() => __FUNCTION__ | $test;
    }
    function test7010()
    {
        $this->assertTrue(0 === 0);
        fn() => __LINE__ | $test;
    }
    function test7011()
    {
        $this->assertTrue(0 === 0);
        fn() => __METHOD__ | $test;
    }
    function test7012()
    {
        $this->assertTrue(0 === 0);
        fn() => __NAMESPACE__ | $test;
    }
    function test7013()
    {
        $this->assertTrue(0 === 0);
        fn() => __TRAIT__ | $test;
    }
    function test7014()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test[$test];
    }
    function test7015()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | [];
    }
    function test7016()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | ($test = $test);
    }
    function test7017()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | ($test =& $test);
    }
    function test7018()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | ~$test;
    }
    function test7019()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | !$test;
    }
    function test7020()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test::$test;
    }
    function test7021()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | clone $test;
    }
    function test7022()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | function () {
        };
    }
    function test7023()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test;
    }
    function test7024()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | self;
    }
    function test7025()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | empty($test);
    }
    function test7026()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | @$test;
    }
    function test7027()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | eval($test);
    }
    function test7028()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test();
    }
    function test7029()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | ( $test);
    }
    function test7030()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test instanceof $test;
    }
    function test7031()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | isset($test);
    }
    function test7032()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | match ($test) {
        };
    }
    function test7033()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test->{$test}();
    }
    function test7034()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | new $test();
    }
    function test7035()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test?->{$test}();
    }
    function test7036()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test?->{$test};
    }
    function test7037()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test--;
    }
    function test7038()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test++;
    }
    function test7039()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | --$test;
    }
    function test7040()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | ++$test;
    }
    function test7041()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | (print $test);
    }
    function test7042()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test->{$test};
    }
    function test7043()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | ``;
    }
    function test7044()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test::$test();
    }
    function test7045()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test::${$test};
    }
    function test7046()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | ($test ? $test : $test);
    }
    function test7047()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | throw $test;
    }
    function test7048()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | -$test;
    }
    function test7049()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | +$test;
    }
    function test7050()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | ${$test};
    }
    function test7051()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | (yield from $test);
    }
    function test7052()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | (yield $test => $test);
    }
    function test7053()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | ($test &= $test);
    }
    function test7054()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | ($test |= $test);
    }
    function test7055()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | ($test ^= $test);
    }
    function test7056()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | ($test ??= $test);
    }
    function test7057()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | ($test .= $test);
    }
    function test7058()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | ($test /= $test);
    }
    function test7059()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | ($test -= $test);
    }
    function test7060()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | ($test %= $test);
    }
    function test7061()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | ($test *= $test);
    }
    function test7062()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | ($test += $test);
    }
    function test7063()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | ($test **= $test);
    }
    function test7064()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | ($test <<= $test);
    }
    function test7065()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | ($test >>= $test);
    }
    function test7066()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test & $test;
    }
    function test7067()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | ($test | $test);
    }
    function test7068()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test ^ $test;
    }
    function test7069()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | ($test && $test);
    }
    function test7070()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | ($test || $test);
    }
    function test7071()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | ($test ?? $test);
    }
    function test7072()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test . $test;
    }
    function test7073()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test / $test;
    }
    function test7074()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test == $test;
    }
    function test7075()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test > $test;
    }
    function test7076()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test >= $test;
    }
    function test7077()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test === $test;
    }
    function test7078()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | ($test and $test);
    }
    function test7079()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | ($test or $test);
    }
    function test7080()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | ($test xor $test);
    }
    function test7081()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test - $test;
    }
    function test7082()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test % $test;
    }
    function test7083()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test * $test;
    }
    function test7084()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test != $test;
    }
    function test7085()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test !== $test;
    }
    function test7086()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test + $test;
    }
    function test7087()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test ** $test;
    }
    function test7088()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test << $test;
    }
    function test7089()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test >> $test;
    }
    function test7090()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test < $test;
    }
    function test7091()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test <= $test;
    }
    function test7092()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test <=> $test;
    }
    function test7093()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | (array) $test;
    }
    function test7094()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | (bool) $test;
    }
    function test7095()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | (double) $test;
    }
    function test7096()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | (int) $test;
    }
    function test7097()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | (object) $test;
    }
    function test7098()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | (string) $test;
    }
    function test7099()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | 0.0;
    }
    function test7100()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | "{$test}";
    }
    function test7101()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | 0;
    }
    function test7102()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | 'test';
    }
    function test7103()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | __CLASS__;
    }
    function test7104()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | __DIR__;
    }
    function test7105()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | __FILE__;
    }
    function test7106()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | __FUNCTION__;
    }
    function test7107()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | __LINE__;
    }
    function test7108()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | __METHOD__;
    }
    function test7109()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | __NAMESPACE__;
    }
    function test7110()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | __TRAIT__;
    }
    function test7111()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] ^ $test;
    }
    function test7112()
    {
        $this->assertTrue(0 === 0);
        fn() => [] ^ $test;
    }
    function test7113()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test = $test) ^ $test;
    }
    function test7114()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test =& $test) ^ $test;
    }
    function test7115()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test ^ $test;
    }
    function test7116()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test ^ $test;
    }
    function test7117()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test ^ $test;
    }
    function test7118()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test ^ $test;
    }
    function test7119()
    {
        $this->assertTrue(0 === 0);
        fn() => function () {
        } ^ $test;
    }
    function test7120()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test;
    }
    function test7121()
    {
        $this->assertTrue(0 === 0);
        fn() => self ^ $test;
    }
    function test7122()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test) ^ $test;
    }
    function test7123()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test ^ $test;
    }
    function test7124()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test) ^ $test;
    }
    function test7125()
    {
        $this->assertTrue(0 === 0);
        fn() => $test() ^ $test;
    }
    function test7126()
    {
        $this->assertTrue(0 === 0);
        fn() => ( $test) ^ $test;
    }
    function test7127()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof $test ^ $test;
    }
    function test7128()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test) ^ $test;
    }
    function test7129()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test) {
        } ^ $test;
    }
    function test7130()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}() ^ $test;
    }
    function test7131()
    {
        $this->assertTrue(0 === 0);
        fn() => new $test() ^ $test;
    }
    function test7132()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}() ^ $test;
    }
    function test7133()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test} ^ $test;
    }
    function test7134()
    {
        $this->assertTrue(0 === 0);
        fn() => $test-- ^ $test;
    }
    function test7135()
    {
        $this->assertTrue(0 === 0);
        fn() => $test++ ^ $test;
    }
    function test7136()
    {
        $this->assertTrue(0 === 0);
        fn() => --$test ^ $test;
    }
    function test7137()
    {
        $this->assertTrue(0 === 0);
        fn() => ++$test ^ $test;
    }
    function test7138()
    {
        $this->assertTrue(0 === 0);
        fn() => (print $test) ^ $test;
    }
    function test7139()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} ^ $test;
    }
    function test7140()
    {
        $this->assertTrue(0 === 0);
        fn() => `` ^ $test;
    }
    function test7141()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test() ^ $test;
    }
    function test7142()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} ^ $test;
    }
    function test7143()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ? $test : $test) ^ $test;
    }
    function test7144()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test ^ $test;
    }
    function test7145()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test ^ $test;
    }
    function test7146()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test ^ $test;
    }
    function test7147()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} ^ $test;
    }
    function test7148()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield from $test) ^ $test;
    }
    function test7149()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test) ^ $test;
    }
    function test7150()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test &= $test) ^ $test;
    }
    function test7151()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test |= $test) ^ $test;
    }
    function test7152()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^= $test) ^ $test;
    }
    function test7153()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ??= $test) ^ $test;
    }
    function test7154()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test .= $test) ^ $test;
    }
    function test7155()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test /= $test) ^ $test;
    }
    function test7156()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test -= $test) ^ $test;
    }
    function test7157()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test %= $test) ^ $test;
    }
    function test7158()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test *= $test) ^ $test;
    }
    function test7159()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test += $test) ^ $test;
    }
    function test7160()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test **= $test) ^ $test;
    }
    function test7161()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <<= $test) ^ $test;
    }
    function test7162()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >>= $test) ^ $test;
    }
    function test7163()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test ^ $test;
    }
    function test7164()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test | $test) ^ $test;
    }
    function test7165()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test ^ $test;
    }
    function test7166()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test && $test) ^ $test;
    }
    function test7167()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test || $test) ^ $test;
    }
    function test7168()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ?? $test) ^ $test;
    }
    function test7169()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test ^ $test;
    }
    function test7170()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test ^ $test;
    }
    function test7171()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test ^ $test;
    }
    function test7172()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test ^ $test;
    }
    function test7173()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test ^ $test;
    }
    function test7174()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test ^ $test;
    }
    function test7175()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test and $test) ^ $test;
    }
    function test7176()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test or $test) ^ $test;
    }
    function test7177()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test xor $test) ^ $test;
    }
    function test7178()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test ^ $test;
    }
    function test7179()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test ^ $test;
    }
    function test7180()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test ^ $test;
    }
    function test7181()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test ^ $test;
    }
    function test7182()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test ^ $test;
    }
    function test7183()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test ^ $test;
    }
    function test7184()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test ^ $test;
    }
    function test7185()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test ^ $test;
    }
    function test7186()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test ^ $test;
    }
    function test7187()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test ^ $test;
    }
    function test7188()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test ^ $test;
    }
    function test7189()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test ^ $test;
    }
    function test7190()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test ^ $test;
    }
    function test7191()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test ^ $test;
    }
    function test7192()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test ^ $test;
    }
    function test7193()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test ^ $test;
    }
    function test7194()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test ^ $test;
    }
    function test7195()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test ^ $test;
    }
    function test7196()
    {
        $this->assertTrue(0 === 0);
        fn() => 0.0 ^ $test;
    }
    function test7197()
    {
        $this->assertTrue(0 === 0);
        fn() => "{$test}" ^ $test;
    }
    function test7198()
    {
        $this->assertTrue(0 === 0);
        fn() => 0 ^ $test;
    }
    function test7199()
    {
        $this->assertTrue(0 === 0);
        fn() => 'test' ^ $test;
    }
    function test7200()
    {
        $this->assertTrue(0 === 0);
        fn() => __CLASS__ ^ $test;
    }
    function test7201()
    {
        $this->assertTrue(0 === 0);
        fn() => __DIR__ ^ $test;
    }
    function test7202()
    {
        $this->assertTrue(0 === 0);
        fn() => __FILE__ ^ $test;
    }
    function test7203()
    {
        $this->assertTrue(0 === 0);
        fn() => __FUNCTION__ ^ $test;
    }
    function test7204()
    {
        $this->assertTrue(0 === 0);
        fn() => __LINE__ ^ $test;
    }
    function test7205()
    {
        $this->assertTrue(0 === 0);
        fn() => __METHOD__ ^ $test;
    }
    function test7206()
    {
        $this->assertTrue(0 === 0);
        fn() => __NAMESPACE__ ^ $test;
    }
    function test7207()
    {
        $this->assertTrue(0 === 0);
        fn() => __TRAIT__ ^ $test;
    }
    function test7208()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test[$test];
    }
    function test7209()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ [];
    }
    function test7210()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ ($test = $test);
    }
    function test7211()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ ($test =& $test);
    }
    function test7212()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ ~$test;
    }
    function test7213()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ !$test;
    }
    function test7214()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test::$test;
    }
    function test7215()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ clone $test;
    }
    function test7216()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ function () {
        };
    }
    function test7217()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test;
    }
    function test7218()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ self;
    }
    function test7219()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ empty($test);
    }
    function test7220()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ @$test;
    }
    function test7221()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ eval($test);
    }
    function test7222()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test();
    }
    function test7223()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ ( $test);
    }
    function test7224()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test instanceof $test;
    }
    function test7225()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ isset($test);
    }
    function test7226()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ match ($test) {
        };
    }
    function test7227()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test->{$test}();
    }
    function test7228()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ new $test();
    }
    function test7229()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test?->{$test}();
    }
    function test7230()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test?->{$test};
    }
    function test7231()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test--;
    }
    function test7232()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test++;
    }
    function test7233()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ --$test;
    }
    function test7234()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ ++$test;
    }
    function test7235()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ (print $test);
    }
    function test7236()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test->{$test};
    }
    function test7237()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ ``;
    }
    function test7238()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test::$test();
    }
    function test7239()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test::${$test};
    }
    function test7240()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ ($test ? $test : $test);
    }
    function test7241()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ throw $test;
    }
    function test7242()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ -$test;
    }
    function test7243()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ +$test;
    }
    function test7244()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ ${$test};
    }
    function test7245()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ (yield from $test);
    }
    function test7246()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ (yield $test => $test);
    }
    function test7247()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ ($test &= $test);
    }
    function test7248()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ ($test |= $test);
    }
    function test7249()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ ($test ^= $test);
    }
    function test7250()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ ($test ??= $test);
    }
    function test7251()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ ($test .= $test);
    }
    function test7252()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ ($test /= $test);
    }
    function test7253()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ ($test -= $test);
    }
    function test7254()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ ($test %= $test);
    }
    function test7255()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ ($test *= $test);
    }
    function test7256()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ ($test += $test);
    }
    function test7257()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ ($test **= $test);
    }
    function test7258()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ ($test <<= $test);
    }
    function test7259()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ ($test >>= $test);
    }
    function test7260()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test & $test;
    }
    function test7261()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ ($test | $test);
    }
    function test7262()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ ($test ^ $test);
    }
    function test7263()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ ($test && $test);
    }
    function test7264()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ ($test || $test);
    }
    function test7265()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ ($test ?? $test);
    }
    function test7266()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test . $test;
    }
    function test7267()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test / $test;
    }
    function test7268()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test == $test;
    }
    function test7269()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test > $test;
    }
    function test7270()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test >= $test;
    }
    function test7271()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test === $test;
    }
    function test7272()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ ($test and $test);
    }
    function test7273()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ ($test or $test);
    }
    function test7274()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ ($test xor $test);
    }
    function test7275()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test - $test;
    }
    function test7276()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test % $test;
    }
    function test7277()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test * $test;
    }
    function test7278()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test != $test;
    }
    function test7279()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test !== $test;
    }
    function test7280()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test + $test;
    }
    function test7281()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test ** $test;
    }
    function test7282()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test << $test;
    }
    function test7283()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test >> $test;
    }
    function test7284()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test < $test;
    }
    function test7285()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test <= $test;
    }
    function test7286()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test <=> $test;
    }
    function test7287()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ (array) $test;
    }
    function test7288()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ (bool) $test;
    }
    function test7289()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ (double) $test;
    }
    function test7290()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ (int) $test;
    }
    function test7291()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ (object) $test;
    }
    function test7292()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ (string) $test;
    }
    function test7293()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ 0.0;
    }
    function test7294()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ "{$test}";
    }
    function test7295()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ 0;
    }
    function test7296()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ 'test';
    }
    function test7297()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ __CLASS__;
    }
    function test7298()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ __DIR__;
    }
    function test7299()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ __FILE__;
    }
    function test7300()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ __FUNCTION__;
    }
    function test7301()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ __LINE__;
    }
    function test7302()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ __METHOD__;
    }
    function test7303()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ __NAMESPACE__;
    }
    function test7304()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ __TRAIT__;
    }
    function test7305()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] && $test;
    }
    function test7306()
    {
        $this->assertTrue(0 === 0);
        fn() => [] && $test;
    }
    function test7307()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test = $test) && $test;
    }
    function test7308()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test =& $test) && $test;
    }
    function test7309()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test && $test;
    }
    function test7310()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test && $test;
    }
    function test7311()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test && $test;
    }
    function test7312()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test && $test;
    }
    function test7313()
    {
        $this->assertTrue(0 === 0);
        fn() => function () {
        } && $test;
    }
    function test7314()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test;
    }
    function test7315()
    {
        $this->assertTrue(0 === 0);
        fn() => self && $test;
    }
    function test7316()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test) && $test;
    }
    function test7317()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test && $test;
    }
    function test7318()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test) && $test;
    }
    function test7319()
    {
        $this->assertTrue(0 === 0);
        fn() => $test() && $test;
    }
    function test7320()
    {
        $this->assertTrue(0 === 0);
        fn() => ( $test) && $test;
    }
    function test7321()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof $test && $test;
    }
    function test7322()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test) && $test;
    }
    function test7323()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test) {
        } && $test;
    }
    function test7324()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}() && $test;
    }
    function test7325()
    {
        $this->assertTrue(0 === 0);
        fn() => new $test() && $test;
    }
    function test7326()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}() && $test;
    }
    function test7327()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test} && $test;
    }
    function test7328()
    {
        $this->assertTrue(0 === 0);
        fn() => $test-- && $test;
    }
    function test7329()
    {
        $this->assertTrue(0 === 0);
        fn() => $test++ && $test;
    }
    function test7330()
    {
        $this->assertTrue(0 === 0);
        fn() => --$test && $test;
    }
    function test7331()
    {
        $this->assertTrue(0 === 0);
        fn() => ++$test && $test;
    }
    function test7332()
    {
        $this->assertTrue(0 === 0);
        fn() => (print $test) && $test;
    }
    function test7333()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} && $test;
    }
    function test7334()
    {
        $this->assertTrue(0 === 0);
        fn() => `` && $test;
    }
    function test7335()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test() && $test;
    }
    function test7336()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} && $test;
    }
    function test7337()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ? $test : $test) && $test;
    }
    function test7338()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test && $test;
    }
    function test7339()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test && $test;
    }
    function test7340()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test && $test;
    }
    function test7341()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} && $test;
    }
    function test7342()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield from $test) && $test;
    }
    function test7343()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test) && $test;
    }
    function test7344()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test &= $test) && $test;
    }
    function test7345()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test |= $test) && $test;
    }
    function test7346()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^= $test) && $test;
    }
    function test7347()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ??= $test) && $test;
    }
    function test7348()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test .= $test) && $test;
    }
    function test7349()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test /= $test) && $test;
    }
    function test7350()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test -= $test) && $test;
    }
    function test7351()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test %= $test) && $test;
    }
    function test7352()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test *= $test) && $test;
    }
    function test7353()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test += $test) && $test;
    }
    function test7354()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test **= $test) && $test;
    }
    function test7355()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <<= $test) && $test;
    }
    function test7356()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >>= $test) && $test;
    }
    function test7357()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test && $test;
    }
    function test7358()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test && $test;
    }
    function test7359()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test && $test;
    }
    function test7360()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test && $test;
    }
    function test7361()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test || $test) && $test;
    }
    function test7362()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ?? $test) && $test;
    }
    function test7363()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test && $test;
    }
    function test7364()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test && $test;
    }
    function test7365()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test && $test;
    }
    function test7366()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test && $test;
    }
    function test7367()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test && $test;
    }
    function test7368()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test && $test;
    }
    function test7369()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test and $test) && $test;
    }
    function test7370()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test or $test) && $test;
    }
    function test7371()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test xor $test) && $test;
    }
    function test7372()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test && $test;
    }
    function test7373()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test && $test;
    }
    function test7374()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test && $test;
    }
    function test7375()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test && $test;
    }
    function test7376()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test && $test;
    }
    function test7377()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test && $test;
    }
    function test7378()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test && $test;
    }
    function test7379()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test && $test;
    }
    function test7380()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test && $test;
    }
    function test7381()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test && $test;
    }
    function test7382()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test && $test;
    }
    function test7383()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test && $test;
    }
    function test7384()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test && $test;
    }
    function test7385()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test && $test;
    }
    function test7386()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test && $test;
    }
    function test7387()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test && $test;
    }
    function test7388()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test && $test;
    }
    function test7389()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test && $test;
    }
    function test7390()
    {
        $this->assertTrue(0 === 0);
        fn() => 0.0 && $test;
    }
    function test7391()
    {
        $this->assertTrue(0 === 0);
        fn() => "{$test}" && $test;
    }
    function test7392()
    {
        $this->assertTrue(0 === 0);
        fn() => 0 && $test;
    }
    function test7393()
    {
        $this->assertTrue(0 === 0);
        fn() => 'test' && $test;
    }
    function test7394()
    {
        $this->assertTrue(0 === 0);
        fn() => __CLASS__ && $test;
    }
    function test7395()
    {
        $this->assertTrue(0 === 0);
        fn() => __DIR__ && $test;
    }
    function test7396()
    {
        $this->assertTrue(0 === 0);
        fn() => __FILE__ && $test;
    }
    function test7397()
    {
        $this->assertTrue(0 === 0);
        fn() => __FUNCTION__ && $test;
    }
    function test7398()
    {
        $this->assertTrue(0 === 0);
        fn() => __LINE__ && $test;
    }
    function test7399()
    {
        $this->assertTrue(0 === 0);
        fn() => __METHOD__ && $test;
    }
    function test7400()
    {
        $this->assertTrue(0 === 0);
        fn() => __NAMESPACE__ && $test;
    }
    function test7401()
    {
        $this->assertTrue(0 === 0);
        fn() => __TRAIT__ && $test;
    }
    function test7402()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test[$test];
    }
    function test7403()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && [];
    }
    function test7404()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && ($test = $test);
    }
    function test7405()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && ($test =& $test);
    }
    function test7406()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && ~$test;
    }
    function test7407()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && !$test;
    }
    function test7408()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test::$test;
    }
    function test7409()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && clone $test;
    }
    function test7410()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && function () {
        };
    }
    function test7411()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test;
    }
    function test7412()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && self;
    }
    function test7413()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && empty($test);
    }
    function test7414()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && @$test;
    }
    function test7415()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && eval($test);
    }
    function test7416()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test();
    }
    function test7417()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && ( $test);
    }
    function test7418()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test instanceof $test;
    }
    function test7419()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && isset($test);
    }
    function test7420()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && match ($test) {
        };
    }
    function test7421()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test->{$test}();
    }
    function test7422()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && new $test();
    }
    function test7423()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test?->{$test}();
    }
    function test7424()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test?->{$test};
    }
    function test7425()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test--;
    }
    function test7426()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test++;
    }
    function test7427()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && --$test;
    }
    function test7428()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && ++$test;
    }
    function test7429()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && (print $test);
    }
    function test7430()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test->{$test};
    }
    function test7431()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && ``;
    }
    function test7432()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test::$test();
    }
    function test7433()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test::${$test};
    }
    function test7434()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && ($test ? $test : $test);
    }
    function test7435()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && throw $test;
    }
    function test7436()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && -$test;
    }
    function test7437()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && +$test;
    }
    function test7438()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && ${$test};
    }
    function test7439()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && (yield from $test);
    }
    function test7440()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && (yield $test => $test);
    }
    function test7441()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && ($test &= $test);
    }
    function test7442()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && ($test |= $test);
    }
    function test7443()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && ($test ^= $test);
    }
    function test7444()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && ($test ??= $test);
    }
    function test7445()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && ($test .= $test);
    }
    function test7446()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && ($test /= $test);
    }
    function test7447()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && ($test -= $test);
    }
    function test7448()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && ($test %= $test);
    }
    function test7449()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && ($test *= $test);
    }
    function test7450()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && ($test += $test);
    }
    function test7451()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && ($test **= $test);
    }
    function test7452()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && ($test <<= $test);
    }
    function test7453()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && ($test >>= $test);
    }
    function test7454()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test & $test;
    }
    function test7455()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test | $test;
    }
    function test7456()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test ^ $test;
    }
    function test7457()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && ($test && $test);
    }
    function test7458()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && ($test || $test);
    }
    function test7459()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && ($test ?? $test);
    }
    function test7460()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test . $test;
    }
    function test7461()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test / $test;
    }
    function test7462()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test == $test;
    }
    function test7463()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test > $test;
    }
    function test7464()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test >= $test;
    }
    function test7465()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test === $test;
    }
    function test7466()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && ($test and $test);
    }
    function test7467()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && ($test or $test);
    }
    function test7468()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && ($test xor $test);
    }
    function test7469()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test - $test;
    }
    function test7470()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test % $test;
    }
    function test7471()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test * $test;
    }
    function test7472()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test != $test;
    }
    function test7473()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test !== $test;
    }
    function test7474()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test + $test;
    }
    function test7475()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test ** $test;
    }
    function test7476()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test << $test;
    }
    function test7477()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test >> $test;
    }
    function test7478()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test < $test;
    }
    function test7479()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test <= $test;
    }
    function test7480()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test <=> $test;
    }
    function test7481()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && (array) $test;
    }
    function test7482()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && (bool) $test;
    }
    function test7483()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && (double) $test;
    }
    function test7484()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && (int) $test;
    }
    function test7485()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && (object) $test;
    }
    function test7486()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && (string) $test;
    }
    function test7487()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && 0.0;
    }
    function test7488()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && "{$test}";
    }
    function test7489()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && 0;
    }
    function test7490()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && 'test';
    }
    function test7491()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && __CLASS__;
    }
    function test7492()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && __DIR__;
    }
    function test7493()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && __FILE__;
    }
    function test7494()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && __FUNCTION__;
    }
    function test7495()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && __LINE__;
    }
    function test7496()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && __METHOD__;
    }
    function test7497()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && __NAMESPACE__;
    }
    function test7498()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && __TRAIT__;
    }
    function test7499()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] || $test;
    }
    function test7500()
    {
        $this->assertTrue(0 === 0);
        fn() => [] || $test;
    }
    function test7501()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test = $test) || $test;
    }
    function test7502()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test =& $test) || $test;
    }
    function test7503()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test || $test;
    }
    function test7504()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test || $test;
    }
    function test7505()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test || $test;
    }
    function test7506()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test || $test;
    }
    function test7507()
    {
        $this->assertTrue(0 === 0);
        fn() => function () {
        } || $test;
    }
    function test7508()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test;
    }
    function test7509()
    {
        $this->assertTrue(0 === 0);
        fn() => self || $test;
    }
    function test7510()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test) || $test;
    }
    function test7511()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test || $test;
    }
    function test7512()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test) || $test;
    }
    function test7513()
    {
        $this->assertTrue(0 === 0);
        fn() => $test() || $test;
    }
    function test7514()
    {
        $this->assertTrue(0 === 0);
        fn() => ( $test) || $test;
    }
    function test7515()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof $test || $test;
    }
    function test7516()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test) || $test;
    }
    function test7517()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test) {
        } || $test;
    }
    function test7518()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}() || $test;
    }
    function test7519()
    {
        $this->assertTrue(0 === 0);
        fn() => new $test() || $test;
    }
    function test7520()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}() || $test;
    }
    function test7521()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test} || $test;
    }
    function test7522()
    {
        $this->assertTrue(0 === 0);
        fn() => $test-- || $test;
    }
    function test7523()
    {
        $this->assertTrue(0 === 0);
        fn() => $test++ || $test;
    }
    function test7524()
    {
        $this->assertTrue(0 === 0);
        fn() => --$test || $test;
    }
    function test7525()
    {
        $this->assertTrue(0 === 0);
        fn() => ++$test || $test;
    }
    function test7526()
    {
        $this->assertTrue(0 === 0);
        fn() => (print $test) || $test;
    }
    function test7527()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} || $test;
    }
    function test7528()
    {
        $this->assertTrue(0 === 0);
        fn() => `` || $test;
    }
    function test7529()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test() || $test;
    }
    function test7530()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} || $test;
    }
    function test7531()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ? $test : $test) || $test;
    }
    function test7532()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test || $test;
    }
    function test7533()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test || $test;
    }
    function test7534()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test || $test;
    }
    function test7535()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} || $test;
    }
    function test7536()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield from $test) || $test;
    }
    function test7537()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test) || $test;
    }
    function test7538()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test &= $test) || $test;
    }
    function test7539()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test |= $test) || $test;
    }
    function test7540()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^= $test) || $test;
    }
    function test7541()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ??= $test) || $test;
    }
    function test7542()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test .= $test) || $test;
    }
    function test7543()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test /= $test) || $test;
    }
    function test7544()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test -= $test) || $test;
    }
    function test7545()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test %= $test) || $test;
    }
    function test7546()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test *= $test) || $test;
    }
    function test7547()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test += $test) || $test;
    }
    function test7548()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test **= $test) || $test;
    }
    function test7549()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <<= $test) || $test;
    }
    function test7550()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >>= $test) || $test;
    }
    function test7551()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test || $test;
    }
    function test7552()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test || $test;
    }
    function test7553()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test || $test;
    }
    function test7554()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test || $test;
    }
    function test7555()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test || $test;
    }
    function test7556()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ?? $test) || $test;
    }
    function test7557()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test || $test;
    }
    function test7558()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test || $test;
    }
    function test7559()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test || $test;
    }
    function test7560()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test || $test;
    }
    function test7561()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test || $test;
    }
    function test7562()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test || $test;
    }
    function test7563()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test and $test) || $test;
    }
    function test7564()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test or $test) || $test;
    }
    function test7565()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test xor $test) || $test;
    }
    function test7566()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test || $test;
    }
    function test7567()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test || $test;
    }
    function test7568()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test || $test;
    }
    function test7569()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test || $test;
    }
    function test7570()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test || $test;
    }
    function test7571()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test || $test;
    }
    function test7572()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test || $test;
    }
    function test7573()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test || $test;
    }
    function test7574()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test || $test;
    }
    function test7575()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test || $test;
    }
    function test7576()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test || $test;
    }
    function test7577()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test || $test;
    }
    function test7578()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test || $test;
    }
    function test7579()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test || $test;
    }
    function test7580()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test || $test;
    }
    function test7581()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test || $test;
    }
    function test7582()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test || $test;
    }
    function test7583()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test || $test;
    }
    function test7584()
    {
        $this->assertTrue(0 === 0);
        fn() => 0.0 || $test;
    }
    function test7585()
    {
        $this->assertTrue(0 === 0);
        fn() => "{$test}" || $test;
    }
    function test7586()
    {
        $this->assertTrue(0 === 0);
        fn() => 0 || $test;
    }
    function test7587()
    {
        $this->assertTrue(0 === 0);
        fn() => 'test' || $test;
    }
    function test7588()
    {
        $this->assertTrue(0 === 0);
        fn() => __CLASS__ || $test;
    }
    function test7589()
    {
        $this->assertTrue(0 === 0);
        fn() => __DIR__ || $test;
    }
    function test7590()
    {
        $this->assertTrue(0 === 0);
        fn() => __FILE__ || $test;
    }
    function test7591()
    {
        $this->assertTrue(0 === 0);
        fn() => __FUNCTION__ || $test;
    }
    function test7592()
    {
        $this->assertTrue(0 === 0);
        fn() => __LINE__ || $test;
    }
    function test7593()
    {
        $this->assertTrue(0 === 0);
        fn() => __METHOD__ || $test;
    }
    function test7594()
    {
        $this->assertTrue(0 === 0);
        fn() => __NAMESPACE__ || $test;
    }
    function test7595()
    {
        $this->assertTrue(0 === 0);
        fn() => __TRAIT__ || $test;
    }
    function test7596()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test[$test];
    }
    function test7597()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || [];
    }
    function test7598()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || ($test = $test);
    }
    function test7599()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || ($test =& $test);
    }
    function test7600()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || ~$test;
    }
    function test7601()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || !$test;
    }
    function test7602()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test::$test;
    }
    function test7603()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || clone $test;
    }
    function test7604()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || function () {
        };
    }
    function test7605()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test;
    }
    function test7606()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || self;
    }
    function test7607()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || empty($test);
    }
    function test7608()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || @$test;
    }
    function test7609()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || eval($test);
    }
    function test7610()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test();
    }
    function test7611()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || ( $test);
    }
    function test7612()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test instanceof $test;
    }
    function test7613()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || isset($test);
    }
    function test7614()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || match ($test) {
        };
    }
    function test7615()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test->{$test}();
    }
    function test7616()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || new $test();
    }
    function test7617()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test?->{$test}();
    }
    function test7618()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test?->{$test};
    }
    function test7619()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test--;
    }
    function test7620()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test++;
    }
    function test7621()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || --$test;
    }
    function test7622()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || ++$test;
    }
    function test7623()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || (print $test);
    }
    function test7624()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test->{$test};
    }
    function test7625()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || ``;
    }
    function test7626()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test::$test();
    }
    function test7627()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test::${$test};
    }
    function test7628()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || ($test ? $test : $test);
    }
    function test7629()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || throw $test;
    }
    function test7630()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || -$test;
    }
    function test7631()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || +$test;
    }
    function test7632()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || ${$test};
    }
    function test7633()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || (yield from $test);
    }
    function test7634()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || (yield $test => $test);
    }
    function test7635()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || ($test &= $test);
    }
    function test7636()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || ($test |= $test);
    }
    function test7637()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || ($test ^= $test);
    }
    function test7638()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || ($test ??= $test);
    }
    function test7639()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || ($test .= $test);
    }
    function test7640()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || ($test /= $test);
    }
    function test7641()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || ($test -= $test);
    }
    function test7642()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || ($test %= $test);
    }
    function test7643()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || ($test *= $test);
    }
    function test7644()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || ($test += $test);
    }
    function test7645()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || ($test **= $test);
    }
    function test7646()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || ($test <<= $test);
    }
    function test7647()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || ($test >>= $test);
    }
    function test7648()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test & $test;
    }
    function test7649()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test | $test;
    }
    function test7650()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test ^ $test;
    }
    function test7651()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test && $test;
    }
    function test7652()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || ($test || $test);
    }
    function test7653()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || ($test ?? $test);
    }
    function test7654()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test . $test;
    }
    function test7655()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test / $test;
    }
    function test7656()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test == $test;
    }
    function test7657()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test > $test;
    }
    function test7658()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test >= $test;
    }
    function test7659()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test === $test;
    }
    function test7660()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || ($test and $test);
    }
    function test7661()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || ($test or $test);
    }
    function test7662()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || ($test xor $test);
    }
    function test7663()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test - $test;
    }
    function test7664()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test % $test;
    }
    function test7665()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test * $test;
    }
    function test7666()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test != $test;
    }
    function test7667()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test !== $test;
    }
    function test7668()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test + $test;
    }
    function test7669()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test ** $test;
    }
    function test7670()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test << $test;
    }
    function test7671()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test >> $test;
    }
    function test7672()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test < $test;
    }
    function test7673()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test <= $test;
    }
    function test7674()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test <=> $test;
    }
    function test7675()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || (array) $test;
    }
    function test7676()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || (bool) $test;
    }
    function test7677()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || (double) $test;
    }
    function test7678()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || (int) $test;
    }
    function test7679()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || (object) $test;
    }
    function test7680()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || (string) $test;
    }
    function test7681()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || 0.0;
    }
    function test7682()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || "{$test}";
    }
    function test7683()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || 0;
    }
    function test7684()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || 'test';
    }
    function test7685()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || __CLASS__;
    }
    function test7686()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || __DIR__;
    }
    function test7687()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || __FILE__;
    }
    function test7688()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || __FUNCTION__;
    }
    function test7689()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || __LINE__;
    }
    function test7690()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || __METHOD__;
    }
    function test7691()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || __NAMESPACE__;
    }
    function test7692()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || __TRAIT__;
    }
    function test7693()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] ?? $test;
    }
    function test7694()
    {
        $this->assertTrue(0 === 0);
        fn() => [] ?? $test;
    }
    function test7695()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test = $test) ?? $test;
    }
    function test7696()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test =& $test) ?? $test;
    }
    function test7697()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test ?? $test;
    }
    function test7698()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test ?? $test;
    }
    function test7699()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test ?? $test;
    }
    function test7700()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test ?? $test;
    }
    function test7701()
    {
        $this->assertTrue(0 === 0);
        fn() => function () {
        } ?? $test;
    }
    function test7702()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test;
    }
    function test7703()
    {
        $this->assertTrue(0 === 0);
        fn() => self ?? $test;
    }
    function test7704()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test) ?? $test;
    }
    function test7705()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test ?? $test;
    }
    function test7706()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test) ?? $test;
    }
    function test7707()
    {
        $this->assertTrue(0 === 0);
        fn() => $test() ?? $test;
    }
    function test7708()
    {
        $this->assertTrue(0 === 0);
        fn() => ( $test) ?? $test;
    }
    function test7709()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof $test ?? $test;
    }
    function test7710()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test) ?? $test;
    }
    function test7711()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test) {
        } ?? $test;
    }
    function test7712()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}() ?? $test;
    }
    function test7713()
    {
        $this->assertTrue(0 === 0);
        fn() => new $test() ?? $test;
    }
    function test7714()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}() ?? $test;
    }
    function test7715()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test} ?? $test;
    }
    function test7716()
    {
        $this->assertTrue(0 === 0);
        fn() => $test-- ?? $test;
    }
    function test7717()
    {
        $this->assertTrue(0 === 0);
        fn() => $test++ ?? $test;
    }
    function test7718()
    {
        $this->assertTrue(0 === 0);
        fn() => --$test ?? $test;
    }
    function test7719()
    {
        $this->assertTrue(0 === 0);
        fn() => ++$test ?? $test;
    }
    function test7720()
    {
        $this->assertTrue(0 === 0);
        fn() => (print $test) ?? $test;
    }
    function test7721()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} ?? $test;
    }
    function test7722()
    {
        $this->assertTrue(0 === 0);
        fn() => `` ?? $test;
    }
    function test7723()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test() ?? $test;
    }
    function test7724()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} ?? $test;
    }
    function test7725()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ? $test : $test) ?? $test;
    }
    function test7726()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test ?? $test;
    }
    function test7727()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test ?? $test;
    }
    function test7728()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test ?? $test;
    }
    function test7729()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} ?? $test;
    }
    function test7730()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield from $test) ?? $test;
    }
    function test7731()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test) ?? $test;
    }
    function test7732()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test &= $test) ?? $test;
    }
    function test7733()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test |= $test) ?? $test;
    }
    function test7734()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^= $test) ?? $test;
    }
    function test7735()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ??= $test) ?? $test;
    }
    function test7736()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test .= $test) ?? $test;
    }
    function test7737()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test /= $test) ?? $test;
    }
    function test7738()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test -= $test) ?? $test;
    }
    function test7739()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test %= $test) ?? $test;
    }
    function test7740()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test *= $test) ?? $test;
    }
    function test7741()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test += $test) ?? $test;
    }
    function test7742()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test **= $test) ?? $test;
    }
    function test7743()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <<= $test) ?? $test;
    }
    function test7744()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >>= $test) ?? $test;
    }
    function test7745()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test ?? $test;
    }
    function test7746()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test ?? $test;
    }
    function test7747()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test ?? $test;
    }
    function test7748()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test ?? $test;
    }
    function test7749()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test ?? $test;
    }
    function test7750()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ?? $test) ?? $test;
    }
    function test7751()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test ?? $test;
    }
    function test7752()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test ?? $test;
    }
    function test7753()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test ?? $test;
    }
    function test7754()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test ?? $test;
    }
    function test7755()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test ?? $test;
    }
    function test7756()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test ?? $test;
    }
    function test7757()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test and $test) ?? $test;
    }
    function test7758()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test or $test) ?? $test;
    }
    function test7759()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test xor $test) ?? $test;
    }
    function test7760()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test ?? $test;
    }
    function test7761()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test ?? $test;
    }
    function test7762()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test ?? $test;
    }
    function test7763()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test ?? $test;
    }
    function test7764()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test ?? $test;
    }
    function test7765()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test ?? $test;
    }
    function test7766()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test ?? $test;
    }
    function test7767()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test ?? $test;
    }
    function test7768()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test ?? $test;
    }
    function test7769()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test ?? $test;
    }
    function test7770()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test ?? $test;
    }
    function test7771()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test ?? $test;
    }
    function test7772()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test ?? $test;
    }
    function test7773()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test ?? $test;
    }
    function test7774()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test ?? $test;
    }
    function test7775()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test ?? $test;
    }
    function test7776()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test ?? $test;
    }
    function test7777()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test ?? $test;
    }
    function test7778()
    {
        $this->assertTrue(0 === 0);
        fn() => 0.0 ?? $test;
    }
    function test7779()
    {
        $this->assertTrue(0 === 0);
        fn() => "{$test}" ?? $test;
    }
    function test7780()
    {
        $this->assertTrue(0 === 0);
        fn() => 0 ?? $test;
    }
    function test7781()
    {
        $this->assertTrue(0 === 0);
        fn() => 'test' ?? $test;
    }
    function test7782()
    {
        $this->assertTrue(0 === 0);
        fn() => __CLASS__ ?? $test;
    }
    function test7783()
    {
        $this->assertTrue(0 === 0);
        fn() => __DIR__ ?? $test;
    }
    function test7784()
    {
        $this->assertTrue(0 === 0);
        fn() => __FILE__ ?? $test;
    }
    function test7785()
    {
        $this->assertTrue(0 === 0);
        fn() => __FUNCTION__ ?? $test;
    }
    function test7786()
    {
        $this->assertTrue(0 === 0);
        fn() => __LINE__ ?? $test;
    }
    function test7787()
    {
        $this->assertTrue(0 === 0);
        fn() => __METHOD__ ?? $test;
    }
    function test7788()
    {
        $this->assertTrue(0 === 0);
        fn() => __NAMESPACE__ ?? $test;
    }
    function test7789()
    {
        $this->assertTrue(0 === 0);
        fn() => __TRAIT__ ?? $test;
    }
    function test7790()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test[$test];
    }
    function test7791()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? [];
    }
    function test7792()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? ($test = $test);
    }
    function test7793()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? ($test =& $test);
    }
    function test7794()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? ~$test;
    }
    function test7795()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? !$test;
    }
    function test7796()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test::$test;
    }
    function test7797()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? clone $test;
    }
    function test7798()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? function () {
        };
    }
    function test7799()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test;
    }
    function test7800()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? self;
    }
    function test7801()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? empty($test);
    }
    function test7802()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? @$test;
    }
    function test7803()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? eval($test);
    }
    function test7804()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test();
    }
    function test7805()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? ( $test);
    }
    function test7806()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test instanceof $test;
    }
    function test7807()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? isset($test);
    }
    function test7808()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? match ($test) {
        };
    }
    function test7809()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test->{$test}();
    }
    function test7810()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? new $test();
    }
    function test7811()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test?->{$test}();
    }
    function test7812()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test?->{$test};
    }
    function test7813()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test--;
    }
    function test7814()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test++;
    }
    function test7815()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? --$test;
    }
    function test7816()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? ++$test;
    }
    function test7817()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? (print $test);
    }
    function test7818()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test->{$test};
    }
    function test7819()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? ``;
    }
    function test7820()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test::$test();
    }
    function test7821()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test::${$test};
    }
    function test7822()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? ($test ? $test : $test);
    }
    function test7823()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? throw $test;
    }
    function test7824()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? -$test;
    }
    function test7825()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? +$test;
    }
    function test7826()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? ${$test};
    }
    function test7827()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? (yield from $test);
    }
    function test7828()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? (yield $test => $test);
    }
    function test7829()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? ($test &= $test);
    }
    function test7830()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? ($test |= $test);
    }
    function test7831()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? ($test ^= $test);
    }
    function test7832()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? ($test ??= $test);
    }
    function test7833()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? ($test .= $test);
    }
    function test7834()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? ($test /= $test);
    }
    function test7835()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? ($test -= $test);
    }
    function test7836()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? ($test %= $test);
    }
    function test7837()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? ($test *= $test);
    }
    function test7838()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? ($test += $test);
    }
    function test7839()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? ($test **= $test);
    }
    function test7840()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? ($test <<= $test);
    }
    function test7841()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? ($test >>= $test);
    }
    function test7842()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test & $test;
    }
    function test7843()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test | $test;
    }
    function test7844()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test ^ $test;
    }
    function test7845()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test && $test;
    }
    function test7846()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test || $test;
    }
    function test7847()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test ?? $test;
    }
    function test7848()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test . $test;
    }
    function test7849()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test / $test;
    }
    function test7850()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test == $test;
    }
    function test7851()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test > $test;
    }
    function test7852()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test >= $test;
    }
    function test7853()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test === $test;
    }
    function test7854()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? ($test and $test);
    }
    function test7855()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? ($test or $test);
    }
    function test7856()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? ($test xor $test);
    }
    function test7857()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test - $test;
    }
    function test7858()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test % $test;
    }
    function test7859()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test * $test;
    }
    function test7860()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test != $test;
    }
    function test7861()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test !== $test;
    }
    function test7862()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test + $test;
    }
    function test7863()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test ** $test;
    }
    function test7864()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test << $test;
    }
    function test7865()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test >> $test;
    }
    function test7866()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test < $test;
    }
    function test7867()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test <= $test;
    }
    function test7868()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test <=> $test;
    }
    function test7869()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? (array) $test;
    }
    function test7870()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? (bool) $test;
    }
    function test7871()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? (double) $test;
    }
    function test7872()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? (int) $test;
    }
    function test7873()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? (object) $test;
    }
    function test7874()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? (string) $test;
    }
    function test7875()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? 0.0;
    }
    function test7876()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? "{$test}";
    }
    function test7877()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? 0;
    }
    function test7878()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? 'test';
    }
    function test7879()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? __CLASS__;
    }
    function test7880()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? __DIR__;
    }
    function test7881()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? __FILE__;
    }
    function test7882()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? __FUNCTION__;
    }
    function test7883()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? __LINE__;
    }
    function test7884()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? __METHOD__;
    }
    function test7885()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? __NAMESPACE__;
    }
    function test7886()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? __TRAIT__;
    }
    function test7887()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] . $test;
    }
    function test7888()
    {
        $this->assertTrue(0 === 0);
        fn() => [] . $test;
    }
    function test7889()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test = $test) . $test;
    }
    function test7890()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test =& $test) . $test;
    }
    function test7891()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test . $test;
    }
    function test7892()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test . $test;
    }
    function test7893()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test . $test;
    }
    function test7894()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test . $test;
    }
    function test7895()
    {
        $this->assertTrue(0 === 0);
        fn() => function () {
        } . $test;
    }
    function test7896()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test;
    }
    function test7897()
    {
        $this->assertTrue(0 === 0);
        fn() => self . $test;
    }
    function test7898()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test) . $test;
    }
    function test7899()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test . $test;
    }
    function test7900()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test) . $test;
    }
    function test7901()
    {
        $this->assertTrue(0 === 0);
        fn() => $test() . $test;
    }
    function test7902()
    {
        $this->assertTrue(0 === 0);
        fn() => ( $test) . $test;
    }
    function test7903()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof $test . $test;
    }
    function test7904()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test) . $test;
    }
    function test7905()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test) {
        } . $test;
    }
    function test7906()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}() . $test;
    }
    function test7907()
    {
        $this->assertTrue(0 === 0);
        fn() => new $test() . $test;
    }
    function test7908()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}() . $test;
    }
    function test7909()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test} . $test;
    }
    function test7910()
    {
        $this->assertTrue(0 === 0);
        fn() => $test-- . $test;
    }
    function test7911()
    {
        $this->assertTrue(0 === 0);
        fn() => $test++ . $test;
    }
    function test7912()
    {
        $this->assertTrue(0 === 0);
        fn() => --$test . $test;
    }
    function test7913()
    {
        $this->assertTrue(0 === 0);
        fn() => ++$test . $test;
    }
    function test7914()
    {
        $this->assertTrue(0 === 0);
        fn() => (print $test) . $test;
    }
    function test7915()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} . $test;
    }
    function test7916()
    {
        $this->assertTrue(0 === 0);
        fn() => `` . $test;
    }
    function test7917()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test() . $test;
    }
    function test7918()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} . $test;
    }
    function test7919()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ? $test : $test) . $test;
    }
    function test7920()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test . $test;
    }
    function test7921()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test . $test;
    }
    function test7922()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test . $test;
    }
    function test7923()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} . $test;
    }
    function test7924()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield from $test) . $test;
    }
    function test7925()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test) . $test;
    }
    function test7926()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test &= $test) . $test;
    }
    function test7927()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test |= $test) . $test;
    }
    function test7928()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^= $test) . $test;
    }
    function test7929()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ??= $test) . $test;
    }
    function test7930()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test .= $test) . $test;
    }
    function test7931()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test /= $test) . $test;
    }
    function test7932()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test -= $test) . $test;
    }
    function test7933()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test %= $test) . $test;
    }
    function test7934()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test *= $test) . $test;
    }
    function test7935()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test += $test) . $test;
    }
    function test7936()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test **= $test) . $test;
    }
    function test7937()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <<= $test) . $test;
    }
    function test7938()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >>= $test) . $test;
    }
    function test7939()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test & $test) . $test;
    }
    function test7940()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test | $test) . $test;
    }
    function test7941()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^ $test) . $test;
    }
    function test7942()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test && $test) . $test;
    }
    function test7943()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test || $test) . $test;
    }
    function test7944()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ?? $test) . $test;
    }
    function test7945()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test . $test;
    }
    function test7946()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test . $test;
    }
    function test7947()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test == $test) . $test;
    }
    function test7948()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test > $test) . $test;
    }
    function test7949()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >= $test) . $test;
    }
    function test7950()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test === $test) . $test;
    }
    function test7951()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test and $test) . $test;
    }
    function test7952()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test or $test) . $test;
    }
    function test7953()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test xor $test) . $test;
    }
    function test7954()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test . $test;
    }
    function test7955()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test . $test;
    }
    function test7956()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test . $test;
    }
    function test7957()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test != $test) . $test;
    }
    function test7958()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test !== $test) . $test;
    }
    function test7959()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test . $test;
    }
    function test7960()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test . $test;
    }
    function test7961()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test << $test) . $test;
    }
    function test7962()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >> $test) . $test;
    }
    function test7963()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test < $test) . $test;
    }
    function test7964()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <= $test) . $test;
    }
    function test7965()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <=> $test) . $test;
    }
    function test7966()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test . $test;
    }
    function test7967()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test . $test;
    }
    function test7968()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test . $test;
    }
    function test7969()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test . $test;
    }
    function test7970()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test . $test;
    }
    function test7971()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test . $test;
    }
    function test7972()
    {
        $this->assertTrue(0 === 0);
        fn() => 0.0 . $test;
    }
    function test7973()
    {
        $this->assertTrue(0 === 0);
        fn() => "{$test}" . $test;
    }
    function test7974()
    {
        $this->assertTrue(0 === 0);
        fn() => 0 . $test;
    }
    function test7975()
    {
        $this->assertTrue(0 === 0);
        fn() => 'test' . $test;
    }
    function test7976()
    {
        $this->assertTrue(0 === 0);
        fn() => __CLASS__ . $test;
    }
    function test7977()
    {
        $this->assertTrue(0 === 0);
        fn() => __DIR__ . $test;
    }
    function test7978()
    {
        $this->assertTrue(0 === 0);
        fn() => __FILE__ . $test;
    }
    function test7979()
    {
        $this->assertTrue(0 === 0);
        fn() => __FUNCTION__ . $test;
    }
    function test7980()
    {
        $this->assertTrue(0 === 0);
        fn() => __LINE__ . $test;
    }
    function test7981()
    {
        $this->assertTrue(0 === 0);
        fn() => __METHOD__ . $test;
    }
    function test7982()
    {
        $this->assertTrue(0 === 0);
        fn() => __NAMESPACE__ . $test;
    }
    function test7983()
    {
        $this->assertTrue(0 === 0);
        fn() => __TRAIT__ . $test;
    }
    function test7984()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test[$test];
    }
    function test7985()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . [];
    }
    function test7986()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ($test = $test);
    }
    function test7987()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ($test =& $test);
    }
    function test7988()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ~$test;
    }
    function test7989()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . !$test;
    }
    function test7990()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test::$test;
    }
    function test7991()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . clone $test;
    }
    function test7992()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . function () {
        };
    }
    function test7993()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test;
    }
    function test7994()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . self;
    }
    function test7995()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . empty($test);
    }
    function test7996()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . @$test;
    }
    function test7997()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . eval($test);
    }
    function test7998()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test();
    }
    function test7999()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ( $test);
    }
    function test8000()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test instanceof $test;
    }
    function test8001()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . isset($test);
    }
    function test8002()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . match ($test) {
        };
    }
    function test8003()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test->{$test}();
    }
    function test8004()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . new $test();
    }
    function test8005()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test?->{$test}();
    }
    function test8006()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test?->{$test};
    }
    function test8007()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test--;
    }
    function test8008()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test++;
    }
    function test8009()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . --$test;
    }
    function test8010()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ++$test;
    }
    function test8011()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . (print $test);
    }
    function test8012()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test->{$test};
    }
    function test8013()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ``;
    }
    function test8014()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test::$test();
    }
    function test8015()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test::${$test};
    }
    function test8016()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ($test ? $test : $test);
    }
    function test8017()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . throw $test;
    }
    function test8018()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . -$test;
    }
    function test8019()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . +$test;
    }
    function test8020()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ${$test};
    }
    function test8021()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . (yield from $test);
    }
    function test8022()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . (yield $test => $test);
    }
    function test8023()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ($test &= $test);
    }
    function test8024()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ($test |= $test);
    }
    function test8025()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ($test ^= $test);
    }
    function test8026()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ($test ??= $test);
    }
    function test8027()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ($test .= $test);
    }
    function test8028()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ($test /= $test);
    }
    function test8029()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ($test -= $test);
    }
    function test8030()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ($test %= $test);
    }
    function test8031()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ($test *= $test);
    }
    function test8032()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ($test += $test);
    }
    function test8033()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ($test **= $test);
    }
    function test8034()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ($test <<= $test);
    }
    function test8035()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ($test >>= $test);
    }
    function test8036()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ($test & $test);
    }
    function test8037()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ($test | $test);
    }
    function test8038()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ($test ^ $test);
    }
    function test8039()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ($test && $test);
    }
    function test8040()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ($test || $test);
    }
    function test8041()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ($test ?? $test);
    }
    function test8042()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ($test . $test);
    }
    function test8043()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test / $test;
    }
    function test8044()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ($test == $test);
    }
    function test8045()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ($test > $test);
    }
    function test8046()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ($test >= $test);
    }
    function test8047()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ($test === $test);
    }
    function test8048()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ($test and $test);
    }
    function test8049()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ($test or $test);
    }
    function test8050()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ($test xor $test);
    }
    function test8051()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ($test - $test);
    }
    function test8052()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test % $test;
    }
    function test8053()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test * $test;
    }
    function test8054()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ($test != $test);
    }
    function test8055()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ($test !== $test);
    }
    function test8056()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ($test + $test);
    }
    function test8057()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test ** $test;
    }
    function test8058()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ($test << $test);
    }
    function test8059()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ($test >> $test);
    }
    function test8060()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ($test < $test);
    }
    function test8061()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ($test <= $test);
    }
    function test8062()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . ($test <=> $test);
    }
    function test8063()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . (array) $test;
    }
    function test8064()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . (bool) $test;
    }
    function test8065()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . (double) $test;
    }
    function test8066()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . (int) $test;
    }
    function test8067()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . (object) $test;
    }
    function test8068()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . (string) $test;
    }
    function test8069()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . 0.0;
    }
    function test8070()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . "{$test}";
    }
    function test8071()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . 0;
    }
    function test8072()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . 'test';
    }
    function test8073()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . __CLASS__;
    }
    function test8074()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . __DIR__;
    }
    function test8075()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . __FILE__;
    }
    function test8076()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . __FUNCTION__;
    }
    function test8077()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . __LINE__;
    }
    function test8078()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . __METHOD__;
    }
    function test8079()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . __NAMESPACE__;
    }
    function test8080()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . __TRAIT__;
    }
    function test8081()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] / $test;
    }
    function test8082()
    {
        $this->assertTrue(0 === 0);
        fn() => [] / $test;
    }
    function test8083()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test = $test) / $test;
    }
    function test8084()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test =& $test) / $test;
    }
    function test8085()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test / $test;
    }
    function test8086()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test / $test;
    }
    function test8087()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test / $test;
    }
    function test8088()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test / $test;
    }
    function test8089()
    {
        $this->assertTrue(0 === 0);
        fn() => function () {
        } / $test;
    }
    function test8090()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test;
    }
    function test8091()
    {
        $this->assertTrue(0 === 0);
        fn() => self / $test;
    }
    function test8092()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test) / $test;
    }
    function test8093()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test / $test;
    }
    function test8094()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test) / $test;
    }
    function test8095()
    {
        $this->assertTrue(0 === 0);
        fn() => $test() / $test;
    }
    function test8096()
    {
        $this->assertTrue(0 === 0);
        fn() => ( $test) / $test;
    }
    function test8097()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof $test / $test;
    }
    function test8098()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test) / $test;
    }
    function test8099()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test) {
        } / $test;
    }
    function test8100()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}() / $test;
    }
    function test8101()
    {
        $this->assertTrue(0 === 0);
        fn() => new $test() / $test;
    }
    function test8102()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}() / $test;
    }
    function test8103()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test} / $test;
    }
    function test8104()
    {
        $this->assertTrue(0 === 0);
        fn() => $test-- / $test;
    }
    function test8105()
    {
        $this->assertTrue(0 === 0);
        fn() => $test++ / $test;
    }
    function test8106()
    {
        $this->assertTrue(0 === 0);
        fn() => --$test / $test;
    }
    function test8107()
    {
        $this->assertTrue(0 === 0);
        fn() => ++$test / $test;
    }
    function test8108()
    {
        $this->assertTrue(0 === 0);
        fn() => (print $test) / $test;
    }
    function test8109()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} / $test;
    }
    function test8110()
    {
        $this->assertTrue(0 === 0);
        fn() => `` / $test;
    }
    function test8111()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test() / $test;
    }
    function test8112()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} / $test;
    }
    function test8113()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ? $test : $test) / $test;
    }
    function test8114()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test / $test;
    }
    function test8115()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test / $test;
    }
    function test8116()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test / $test;
    }
    function test8117()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} / $test;
    }
    function test8118()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield from $test) / $test;
    }
    function test8119()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test) / $test;
    }
    function test8120()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test &= $test) / $test;
    }
    function test8121()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test |= $test) / $test;
    }
    function test8122()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^= $test) / $test;
    }
    function test8123()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ??= $test) / $test;
    }
    function test8124()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test .= $test) / $test;
    }
    function test8125()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test /= $test) / $test;
    }
    function test8126()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test -= $test) / $test;
    }
    function test8127()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test %= $test) / $test;
    }
    function test8128()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test *= $test) / $test;
    }
    function test8129()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test += $test) / $test;
    }
    function test8130()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test **= $test) / $test;
    }
    function test8131()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <<= $test) / $test;
    }
    function test8132()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >>= $test) / $test;
    }
    function test8133()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test & $test) / $test;
    }
    function test8134()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test | $test) / $test;
    }
    function test8135()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^ $test) / $test;
    }
    function test8136()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test && $test) / $test;
    }
    function test8137()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test || $test) / $test;
    }
    function test8138()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ?? $test) / $test;
    }
    function test8139()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test . $test) / $test;
    }
    function test8140()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test / $test;
    }
    function test8141()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test == $test) / $test;
    }
    function test8142()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test > $test) / $test;
    }
    function test8143()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >= $test) / $test;
    }
    function test8144()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test === $test) / $test;
    }
    function test8145()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test and $test) / $test;
    }
    function test8146()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test or $test) / $test;
    }
    function test8147()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test xor $test) / $test;
    }
    function test8148()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test - $test) / $test;
    }
    function test8149()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test / $test;
    }
    function test8150()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test / $test;
    }
    function test8151()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test != $test) / $test;
    }
    function test8152()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test !== $test) / $test;
    }
    function test8153()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test + $test) / $test;
    }
    function test8154()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test / $test;
    }
    function test8155()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test << $test) / $test;
    }
    function test8156()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >> $test) / $test;
    }
    function test8157()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test < $test) / $test;
    }
    function test8158()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <= $test) / $test;
    }
    function test8159()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <=> $test) / $test;
    }
    function test8160()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test / $test;
    }
    function test8161()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test / $test;
    }
    function test8162()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test / $test;
    }
    function test8163()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test / $test;
    }
    function test8164()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test / $test;
    }
    function test8165()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test / $test;
    }
    function test8166()
    {
        $this->assertTrue(0 === 0);
        fn() => 0.0 / $test;
    }
    function test8167()
    {
        $this->assertTrue(0 === 0);
        fn() => "{$test}" / $test;
    }
    function test8168()
    {
        $this->assertTrue(0 === 0);
        fn() => 0 / $test;
    }
    function test8169()
    {
        $this->assertTrue(0 === 0);
        fn() => 'test' / $test;
    }
    function test8170()
    {
        $this->assertTrue(0 === 0);
        fn() => __CLASS__ / $test;
    }
    function test8171()
    {
        $this->assertTrue(0 === 0);
        fn() => __DIR__ / $test;
    }
    function test8172()
    {
        $this->assertTrue(0 === 0);
        fn() => __FILE__ / $test;
    }
    function test8173()
    {
        $this->assertTrue(0 === 0);
        fn() => __FUNCTION__ / $test;
    }
    function test8174()
    {
        $this->assertTrue(0 === 0);
        fn() => __LINE__ / $test;
    }
    function test8175()
    {
        $this->assertTrue(0 === 0);
        fn() => __METHOD__ / $test;
    }
    function test8176()
    {
        $this->assertTrue(0 === 0);
        fn() => __NAMESPACE__ / $test;
    }
    function test8177()
    {
        $this->assertTrue(0 === 0);
        fn() => __TRAIT__ / $test;
    }
    function test8178()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test[$test];
    }
    function test8179()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / [];
    }
    function test8180()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test = $test);
    }
    function test8181()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test =& $test);
    }
    function test8182()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ~$test;
    }
    function test8183()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / !$test;
    }
    function test8184()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test::$test;
    }
    function test8185()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / clone $test;
    }
    function test8186()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / function () {
        };
    }
    function test8187()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test;
    }
    function test8188()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / self;
    }
    function test8189()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / empty($test);
    }
    function test8190()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / @$test;
    }
    function test8191()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / eval($test);
    }
    function test8192()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test();
    }
    function test8193()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ( $test);
    }
    function test8194()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test instanceof $test;
    }
    function test8195()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / isset($test);
    }
    function test8196()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / match ($test) {
        };
    }
    function test8197()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test->{$test}();
    }
    function test8198()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / new $test();
    }
    function test8199()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test?->{$test}();
    }
    function test8200()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test?->{$test};
    }
    function test8201()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test--;
    }
    function test8202()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test++;
    }
    function test8203()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / --$test;
    }
    function test8204()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ++$test;
    }
    function test8205()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / (print $test);
    }
    function test8206()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test->{$test};
    }
    function test8207()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ``;
    }
    function test8208()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test::$test();
    }
    function test8209()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test::${$test};
    }
    function test8210()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test ? $test : $test);
    }
    function test8211()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / throw $test;
    }
    function test8212()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / -$test;
    }
    function test8213()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / +$test;
    }
    function test8214()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ${$test};
    }
    function test8215()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / (yield from $test);
    }
    function test8216()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / (yield $test => $test);
    }
    function test8217()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test &= $test);
    }
    function test8218()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test |= $test);
    }
    function test8219()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test ^= $test);
    }
    function test8220()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test ??= $test);
    }
    function test8221()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test .= $test);
    }
    function test8222()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test /= $test);
    }
    function test8223()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test -= $test);
    }
    function test8224()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test %= $test);
    }
    function test8225()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test *= $test);
    }
    function test8226()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test += $test);
    }
    function test8227()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test **= $test);
    }
    function test8228()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test <<= $test);
    }
    function test8229()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test >>= $test);
    }
    function test8230()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test & $test);
    }
    function test8231()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test | $test);
    }
    function test8232()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test ^ $test);
    }
    function test8233()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test && $test);
    }
    function test8234()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test || $test);
    }
    function test8235()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test ?? $test);
    }
    function test8236()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test . $test);
    }
    function test8237()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test / $test);
    }
    function test8238()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test == $test);
    }
    function test8239()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test > $test);
    }
    function test8240()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test >= $test);
    }
    function test8241()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test === $test);
    }
    function test8242()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test and $test);
    }
    function test8243()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test or $test);
    }
    function test8244()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test xor $test);
    }
    function test8245()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test - $test);
    }
    function test8246()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test % $test);
    }
    function test8247()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test * $test);
    }
    function test8248()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test != $test);
    }
    function test8249()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test !== $test);
    }
    function test8250()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test + $test);
    }
    function test8251()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test ** $test;
    }
    function test8252()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test << $test);
    }
    function test8253()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test >> $test);
    }
    function test8254()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test < $test);
    }
    function test8255()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test <= $test);
    }
    function test8256()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / ($test <=> $test);
    }
    function test8257()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / (array) $test;
    }
    function test8258()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / (bool) $test;
    }
    function test8259()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / (double) $test;
    }
    function test8260()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / (int) $test;
    }
    function test8261()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / (object) $test;
    }
    function test8262()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / (string) $test;
    }
    function test8263()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / 0.0;
    }
    function test8264()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / "{$test}";
    }
    function test8265()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / 0;
    }
    function test8266()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / 'test';
    }
    function test8267()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / __CLASS__;
    }
    function test8268()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / __DIR__;
    }
    function test8269()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / __FILE__;
    }
    function test8270()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / __FUNCTION__;
    }
    function test8271()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / __LINE__;
    }
    function test8272()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / __METHOD__;
    }
    function test8273()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / __NAMESPACE__;
    }
    function test8274()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / __TRAIT__;
    }
    function test8275()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] == $test;
    }
    function test8276()
    {
        $this->assertTrue(0 === 0);
        fn() => [] == $test;
    }
    function test8277()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test = $test) == $test;
    }
    function test8278()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test =& $test) == $test;
    }
    function test8279()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test == $test;
    }
    function test8280()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test == $test;
    }
    function test8281()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test == $test;
    }
    function test8282()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test == $test;
    }
    function test8283()
    {
        $this->assertTrue(0 === 0);
        fn() => function () {
        } == $test;
    }
    function test8284()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test;
    }
    function test8285()
    {
        $this->assertTrue(0 === 0);
        fn() => self == $test;
    }
    function test8286()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test) == $test;
    }
    function test8287()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test == $test;
    }
    function test8288()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test) == $test;
    }
    function test8289()
    {
        $this->assertTrue(0 === 0);
        fn() => $test() == $test;
    }
    function test8290()
    {
        $this->assertTrue(0 === 0);
        fn() => ( $test) == $test;
    }
    function test8291()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof $test == $test;
    }
    function test8292()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test) == $test;
    }
    function test8293()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test) {
        } == $test;
    }
    function test8294()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}() == $test;
    }
    function test8295()
    {
        $this->assertTrue(0 === 0);
        fn() => new $test() == $test;
    }
    function test8296()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}() == $test;
    }
    function test8297()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test} == $test;
    }
    function test8298()
    {
        $this->assertTrue(0 === 0);
        fn() => $test-- == $test;
    }
    function test8299()
    {
        $this->assertTrue(0 === 0);
        fn() => $test++ == $test;
    }
    function test8300()
    {
        $this->assertTrue(0 === 0);
        fn() => --$test == $test;
    }
    function test8301()
    {
        $this->assertTrue(0 === 0);
        fn() => ++$test == $test;
    }
    function test8302()
    {
        $this->assertTrue(0 === 0);
        fn() => (print $test) == $test;
    }
    function test8303()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} == $test;
    }
    function test8304()
    {
        $this->assertTrue(0 === 0);
        fn() => `` == $test;
    }
    function test8305()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test() == $test;
    }
    function test8306()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} == $test;
    }
    function test8307()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ? $test : $test) == $test;
    }
    function test8308()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test == $test;
    }
    function test8309()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test == $test;
    }
    function test8310()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test == $test;
    }
    function test8311()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} == $test;
    }
    function test8312()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield from $test) == $test;
    }
    function test8313()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test) == $test;
    }
    function test8314()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test &= $test) == $test;
    }
    function test8315()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test |= $test) == $test;
    }
    function test8316()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^= $test) == $test;
    }
    function test8317()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ??= $test) == $test;
    }
    function test8318()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test .= $test) == $test;
    }
    function test8319()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test /= $test) == $test;
    }
    function test8320()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test -= $test) == $test;
    }
    function test8321()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test %= $test) == $test;
    }
    function test8322()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test *= $test) == $test;
    }
    function test8323()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test += $test) == $test;
    }
    function test8324()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test **= $test) == $test;
    }
    function test8325()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <<= $test) == $test;
    }
    function test8326()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >>= $test) == $test;
    }
    function test8327()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test & $test) == $test;
    }
    function test8328()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test | $test) == $test;
    }
    function test8329()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^ $test) == $test;
    }
    function test8330()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test && $test) == $test;
    }
    function test8331()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test || $test) == $test;
    }
    function test8332()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ?? $test) == $test;
    }
    function test8333()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test == $test;
    }
    function test8334()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test == $test;
    }
    function test8335()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test == $test) == $test;
    }
    function test8336()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test == $test;
    }
    function test8337()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test == $test;
    }
    function test8338()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test === $test) == $test;
    }
    function test8339()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test and $test) == $test;
    }
    function test8340()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test or $test) == $test;
    }
    function test8341()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test xor $test) == $test;
    }
    function test8342()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test == $test;
    }
    function test8343()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test == $test;
    }
    function test8344()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test == $test;
    }
    function test8345()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test != $test) == $test;
    }
    function test8346()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test !== $test) == $test;
    }
    function test8347()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test == $test;
    }
    function test8348()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test == $test;
    }
    function test8349()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test == $test;
    }
    function test8350()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test == $test;
    }
    function test8351()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test == $test;
    }
    function test8352()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test == $test;
    }
    function test8353()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <=> $test) == $test;
    }
    function test8354()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test == $test;
    }
    function test8355()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test == $test;
    }
    function test8356()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test == $test;
    }
    function test8357()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test == $test;
    }
    function test8358()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test == $test;
    }
    function test8359()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test == $test;
    }
    function test8360()
    {
        $this->assertTrue(0 === 0);
        fn() => 0.0 == $test;
    }
    function test8361()
    {
        $this->assertTrue(0 === 0);
        fn() => "{$test}" == $test;
    }
    function test8362()
    {
        $this->assertTrue(0 === 0);
        fn() => 0 == $test;
    }
    function test8363()
    {
        $this->assertTrue(0 === 0);
        fn() => 'test' == $test;
    }
    function test8364()
    {
        $this->assertTrue(0 === 0);
        fn() => __CLASS__ == $test;
    }
    function test8365()
    {
        $this->assertTrue(0 === 0);
        fn() => __DIR__ == $test;
    }
    function test8366()
    {
        $this->assertTrue(0 === 0);
        fn() => __FILE__ == $test;
    }
    function test8367()
    {
        $this->assertTrue(0 === 0);
        fn() => __FUNCTION__ == $test;
    }
    function test8368()
    {
        $this->assertTrue(0 === 0);
        fn() => __LINE__ == $test;
    }
    function test8369()
    {
        $this->assertTrue(0 === 0);
        fn() => __METHOD__ == $test;
    }
    function test8370()
    {
        $this->assertTrue(0 === 0);
        fn() => __NAMESPACE__ == $test;
    }
    function test8371()
    {
        $this->assertTrue(0 === 0);
        fn() => __TRAIT__ == $test;
    }
    function test8372()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test[$test];
    }
    function test8373()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == [];
    }
    function test8374()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == ($test = $test);
    }
    function test8375()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == ($test =& $test);
    }
    function test8376()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == ~$test;
    }
    function test8377()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == !$test;
    }
    function test8378()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test::$test;
    }
    function test8379()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == clone $test;
    }
    function test8380()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == function () {
        };
    }
    function test8381()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test;
    }
    function test8382()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == self;
    }
    function test8383()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == empty($test);
    }
    function test8384()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == @$test;
    }
    function test8385()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == eval($test);
    }
    function test8386()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test();
    }
    function test8387()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == ( $test);
    }
    function test8388()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test instanceof $test;
    }
    function test8389()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == isset($test);
    }
    function test8390()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == match ($test) {
        };
    }
    function test8391()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test->{$test}();
    }
    function test8392()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == new $test();
    }
    function test8393()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test?->{$test}();
    }
    function test8394()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test?->{$test};
    }
    function test8395()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test--;
    }
    function test8396()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test++;
    }
    function test8397()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == --$test;
    }
    function test8398()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == ++$test;
    }
    function test8399()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == (print $test);
    }
    function test8400()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test->{$test};
    }
    function test8401()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == ``;
    }
    function test8402()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test::$test();
    }
    function test8403()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test::${$test};
    }
    function test8404()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == ($test ? $test : $test);
    }
    function test8405()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == throw $test;
    }
    function test8406()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == -$test;
    }
    function test8407()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == +$test;
    }
    function test8408()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == ${$test};
    }
    function test8409()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == (yield from $test);
    }
    function test8410()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == (yield $test => $test);
    }
    function test8411()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == ($test &= $test);
    }
    function test8412()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == ($test |= $test);
    }
    function test8413()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == ($test ^= $test);
    }
    function test8414()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == ($test ??= $test);
    }
    function test8415()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == ($test .= $test);
    }
    function test8416()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == ($test /= $test);
    }
    function test8417()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == ($test -= $test);
    }
    function test8418()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == ($test %= $test);
    }
    function test8419()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == ($test *= $test);
    }
    function test8420()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == ($test += $test);
    }
    function test8421()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == ($test **= $test);
    }
    function test8422()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == ($test <<= $test);
    }
    function test8423()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == ($test >>= $test);
    }
    function test8424()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == ($test & $test);
    }
    function test8425()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == ($test | $test);
    }
    function test8426()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == ($test ^ $test);
    }
    function test8427()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == ($test && $test);
    }
    function test8428()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == ($test || $test);
    }
    function test8429()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == ($test ?? $test);
    }
    function test8430()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test . $test;
    }
    function test8431()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test / $test;
    }
    function test8432()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == ($test == $test);
    }
    function test8433()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test > $test;
    }
    function test8434()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test >= $test;
    }
    function test8435()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == ($test === $test);
    }
    function test8436()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == ($test and $test);
    }
    function test8437()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == ($test or $test);
    }
    function test8438()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == ($test xor $test);
    }
    function test8439()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test - $test;
    }
    function test8440()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test % $test;
    }
    function test8441()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test * $test;
    }
    function test8442()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == ($test != $test);
    }
    function test8443()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == ($test !== $test);
    }
    function test8444()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test + $test;
    }
    function test8445()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test ** $test;
    }
    function test8446()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test << $test;
    }
    function test8447()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test >> $test;
    }
    function test8448()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test < $test;
    }
    function test8449()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test <= $test;
    }
    function test8450()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == ($test <=> $test);
    }
    function test8451()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == (array) $test;
    }
    function test8452()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == (bool) $test;
    }
    function test8453()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == (double) $test;
    }
    function test8454()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == (int) $test;
    }
    function test8455()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == (object) $test;
    }
    function test8456()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == (string) $test;
    }
    function test8457()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == 0.0;
    }
    function test8458()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == "{$test}";
    }
    function test8459()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == 0;
    }
    function test8460()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == 'test';
    }
    function test8461()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == __CLASS__;
    }
    function test8462()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == __DIR__;
    }
    function test8463()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == __FILE__;
    }
    function test8464()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == __FUNCTION__;
    }
    function test8465()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == __LINE__;
    }
    function test8466()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == __METHOD__;
    }
    function test8467()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == __NAMESPACE__;
    }
    function test8468()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == __TRAIT__;
    }
    function test8469()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] > $test;
    }
    function test8470()
    {
        $this->assertTrue(0 === 0);
        fn() => [] > $test;
    }
    function test8471()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test = $test) > $test;
    }
    function test8472()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test =& $test) > $test;
    }
    function test8473()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test > $test;
    }
    function test8474()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test > $test;
    }
    function test8475()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test > $test;
    }
    function test8476()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test > $test;
    }
    function test8477()
    {
        $this->assertTrue(0 === 0);
        fn() => function () {
        } > $test;
    }
    function test8478()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test;
    }
    function test8479()
    {
        $this->assertTrue(0 === 0);
        fn() => self > $test;
    }
    function test8480()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test) > $test;
    }
    function test8481()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test > $test;
    }
    function test8482()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test) > $test;
    }
    function test8483()
    {
        $this->assertTrue(0 === 0);
        fn() => $test() > $test;
    }
    function test8484()
    {
        $this->assertTrue(0 === 0);
        fn() => ( $test) > $test;
    }
    function test8485()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof $test > $test;
    }
    function test8486()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test) > $test;
    }
    function test8487()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test) {
        } > $test;
    }
    function test8488()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}() > $test;
    }
    function test8489()
    {
        $this->assertTrue(0 === 0);
        fn() => new $test() > $test;
    }
    function test8490()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}() > $test;
    }
    function test8491()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test} > $test;
    }
    function test8492()
    {
        $this->assertTrue(0 === 0);
        fn() => $test-- > $test;
    }
    function test8493()
    {
        $this->assertTrue(0 === 0);
        fn() => $test++ > $test;
    }
    function test8494()
    {
        $this->assertTrue(0 === 0);
        fn() => --$test > $test;
    }
    function test8495()
    {
        $this->assertTrue(0 === 0);
        fn() => ++$test > $test;
    }
    function test8496()
    {
        $this->assertTrue(0 === 0);
        fn() => (print $test) > $test;
    }
    function test8497()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} > $test;
    }
    function test8498()
    {
        $this->assertTrue(0 === 0);
        fn() => `` > $test;
    }
    function test8499()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test() > $test;
    }
    function test8500()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} > $test;
    }
    function test8501()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ? $test : $test) > $test;
    }
    function test8502()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test > $test;
    }
    function test8503()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test > $test;
    }
    function test8504()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test > $test;
    }
    function test8505()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} > $test;
    }
    function test8506()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield from $test) > $test;
    }
    function test8507()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test) > $test;
    }
    function test8508()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test &= $test) > $test;
    }
    function test8509()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test |= $test) > $test;
    }
    function test8510()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^= $test) > $test;
    }
    function test8511()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ??= $test) > $test;
    }
    function test8512()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test .= $test) > $test;
    }
    function test8513()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test /= $test) > $test;
    }
    function test8514()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test -= $test) > $test;
    }
    function test8515()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test %= $test) > $test;
    }
    function test8516()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test *= $test) > $test;
    }
    function test8517()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test += $test) > $test;
    }
    function test8518()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test **= $test) > $test;
    }
    function test8519()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <<= $test) > $test;
    }
    function test8520()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >>= $test) > $test;
    }
    function test8521()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test & $test) > $test;
    }
    function test8522()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test | $test) > $test;
    }
    function test8523()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^ $test) > $test;
    }
    function test8524()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test && $test) > $test;
    }
    function test8525()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test || $test) > $test;
    }
    function test8526()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ?? $test) > $test;
    }
    function test8527()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test > $test;
    }
    function test8528()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test > $test;
    }
    function test8529()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test == $test) > $test;
    }
    function test8530()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test > $test) > $test;
    }
    function test8531()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >= $test) > $test;
    }
    function test8532()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test === $test) > $test;
    }
    function test8533()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test and $test) > $test;
    }
    function test8534()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test or $test) > $test;
    }
    function test8535()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test xor $test) > $test;
    }
    function test8536()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test > $test;
    }
    function test8537()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test > $test;
    }
    function test8538()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test > $test;
    }
    function test8539()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test != $test) > $test;
    }
    function test8540()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test !== $test) > $test;
    }
    function test8541()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test > $test;
    }
    function test8542()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test > $test;
    }
    function test8543()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test > $test;
    }
    function test8544()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test > $test;
    }
    function test8545()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test < $test) > $test;
    }
    function test8546()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <= $test) > $test;
    }
    function test8547()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <=> $test) > $test;
    }
    function test8548()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test > $test;
    }
    function test8549()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test > $test;
    }
    function test8550()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test > $test;
    }
    function test8551()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test > $test;
    }
    function test8552()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test > $test;
    }
    function test8553()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test > $test;
    }
    function test8554()
    {
        $this->assertTrue(0 === 0);
        fn() => 0.0 > $test;
    }
    function test8555()
    {
        $this->assertTrue(0 === 0);
        fn() => "{$test}" > $test;
    }
    function test8556()
    {
        $this->assertTrue(0 === 0);
        fn() => 0 > $test;
    }
    function test8557()
    {
        $this->assertTrue(0 === 0);
        fn() => 'test' > $test;
    }
    function test8558()
    {
        $this->assertTrue(0 === 0);
        fn() => __CLASS__ > $test;
    }
    function test8559()
    {
        $this->assertTrue(0 === 0);
        fn() => __DIR__ > $test;
    }
    function test8560()
    {
        $this->assertTrue(0 === 0);
        fn() => __FILE__ > $test;
    }
    function test8561()
    {
        $this->assertTrue(0 === 0);
        fn() => __FUNCTION__ > $test;
    }
    function test8562()
    {
        $this->assertTrue(0 === 0);
        fn() => __LINE__ > $test;
    }
    function test8563()
    {
        $this->assertTrue(0 === 0);
        fn() => __METHOD__ > $test;
    }
    function test8564()
    {
        $this->assertTrue(0 === 0);
        fn() => __NAMESPACE__ > $test;
    }
    function test8565()
    {
        $this->assertTrue(0 === 0);
        fn() => __TRAIT__ > $test;
    }
    function test8566()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test[$test];
    }
    function test8567()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > [];
    }
    function test8568()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > ($test = $test);
    }
    function test8569()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > ($test =& $test);
    }
    function test8570()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > ~$test;
    }
    function test8571()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > !$test;
    }
    function test8572()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test::$test;
    }
    function test8573()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > clone $test;
    }
    function test8574()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > function () {
        };
    }
    function test8575()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test;
    }
    function test8576()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > self;
    }
    function test8577()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > empty($test);
    }
    function test8578()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > @$test;
    }
    function test8579()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > eval($test);
    }
    function test8580()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test();
    }
    function test8581()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > ( $test);
    }
    function test8582()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test instanceof $test;
    }
    function test8583()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > isset($test);
    }
    function test8584()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > match ($test) {
        };
    }
    function test8585()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test->{$test}();
    }
    function test8586()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > new $test();
    }
    function test8587()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test?->{$test}();
    }
    function test8588()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test?->{$test};
    }
    function test8589()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test--;
    }
    function test8590()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test++;
    }
    function test8591()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > --$test;
    }
    function test8592()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > ++$test;
    }
    function test8593()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > (print $test);
    }
    function test8594()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test->{$test};
    }
    function test8595()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > ``;
    }
    function test8596()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test::$test();
    }
    function test8597()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test::${$test};
    }
    function test8598()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > ($test ? $test : $test);
    }
    function test8599()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > throw $test;
    }
    function test8600()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > -$test;
    }
    function test8601()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > +$test;
    }
    function test8602()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > ${$test};
    }
    function test8603()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > (yield from $test);
    }
    function test8604()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > (yield $test => $test);
    }
    function test8605()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > ($test &= $test);
    }
    function test8606()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > ($test |= $test);
    }
    function test8607()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > ($test ^= $test);
    }
    function test8608()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > ($test ??= $test);
    }
    function test8609()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > ($test .= $test);
    }
    function test8610()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > ($test /= $test);
    }
    function test8611()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > ($test -= $test);
    }
    function test8612()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > ($test %= $test);
    }
    function test8613()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > ($test *= $test);
    }
    function test8614()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > ($test += $test);
    }
    function test8615()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > ($test **= $test);
    }
    function test8616()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > ($test <<= $test);
    }
    function test8617()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > ($test >>= $test);
    }
    function test8618()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > ($test & $test);
    }
    function test8619()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > ($test | $test);
    }
    function test8620()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > ($test ^ $test);
    }
    function test8621()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > ($test && $test);
    }
    function test8622()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > ($test || $test);
    }
    function test8623()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > ($test ?? $test);
    }
    function test8624()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test . $test;
    }
    function test8625()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test / $test;
    }
    function test8626()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > ($test == $test);
    }
    function test8627()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > ($test > $test);
    }
    function test8628()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > ($test >= $test);
    }
    function test8629()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > ($test === $test);
    }
    function test8630()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > ($test and $test);
    }
    function test8631()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > ($test or $test);
    }
    function test8632()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > ($test xor $test);
    }
    function test8633()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test - $test;
    }
    function test8634()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test % $test;
    }
    function test8635()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test * $test;
    }
    function test8636()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > ($test != $test);
    }
    function test8637()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > ($test !== $test);
    }
    function test8638()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test + $test;
    }
    function test8639()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test ** $test;
    }
    function test8640()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test << $test;
    }
    function test8641()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test >> $test;
    }
    function test8642()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > ($test < $test);
    }
    function test8643()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > ($test <= $test);
    }
    function test8644()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > ($test <=> $test);
    }
    function test8645()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > (array) $test;
    }
    function test8646()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > (bool) $test;
    }
    function test8647()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > (double) $test;
    }
    function test8648()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > (int) $test;
    }
    function test8649()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > (object) $test;
    }
    function test8650()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > (string) $test;
    }
    function test8651()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > 0.0;
    }
    function test8652()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > "{$test}";
    }
    function test8653()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > 0;
    }
    function test8654()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > 'test';
    }
    function test8655()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > __CLASS__;
    }
    function test8656()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > __DIR__;
    }
    function test8657()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > __FILE__;
    }
    function test8658()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > __FUNCTION__;
    }
    function test8659()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > __LINE__;
    }
    function test8660()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > __METHOD__;
    }
    function test8661()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > __NAMESPACE__;
    }
    function test8662()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > __TRAIT__;
    }
    function test8663()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] >= $test;
    }
    function test8664()
    {
        $this->assertTrue(0 === 0);
        fn() => [] >= $test;
    }
    function test8665()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test = $test) >= $test;
    }
    function test8666()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test =& $test) >= $test;
    }
    function test8667()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test >= $test;
    }
    function test8668()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test >= $test;
    }
    function test8669()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test >= $test;
    }
    function test8670()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test >= $test;
    }
    function test8671()
    {
        $this->assertTrue(0 === 0);
        fn() => function () {
        } >= $test;
    }
    function test8672()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test;
    }
    function test8673()
    {
        $this->assertTrue(0 === 0);
        fn() => self >= $test;
    }
    function test8674()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test) >= $test;
    }
    function test8675()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test >= $test;
    }
    function test8676()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test) >= $test;
    }
    function test8677()
    {
        $this->assertTrue(0 === 0);
        fn() => $test() >= $test;
    }
    function test8678()
    {
        $this->assertTrue(0 === 0);
        fn() => ( $test) >= $test;
    }
    function test8679()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof $test >= $test;
    }
    function test8680()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test) >= $test;
    }
    function test8681()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test) {
        } >= $test;
    }
    function test8682()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}() >= $test;
    }
    function test8683()
    {
        $this->assertTrue(0 === 0);
        fn() => new $test() >= $test;
    }
    function test8684()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}() >= $test;
    }
    function test8685()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test} >= $test;
    }
    function test8686()
    {
        $this->assertTrue(0 === 0);
        fn() => $test-- >= $test;
    }
    function test8687()
    {
        $this->assertTrue(0 === 0);
        fn() => $test++ >= $test;
    }
    function test8688()
    {
        $this->assertTrue(0 === 0);
        fn() => --$test >= $test;
    }
    function test8689()
    {
        $this->assertTrue(0 === 0);
        fn() => ++$test >= $test;
    }
    function test8690()
    {
        $this->assertTrue(0 === 0);
        fn() => (print $test) >= $test;
    }
    function test8691()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} >= $test;
    }
    function test8692()
    {
        $this->assertTrue(0 === 0);
        fn() => `` >= $test;
    }
    function test8693()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test() >= $test;
    }
    function test8694()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} >= $test;
    }
    function test8695()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ? $test : $test) >= $test;
    }
    function test8696()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test >= $test;
    }
    function test8697()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test >= $test;
    }
    function test8698()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test >= $test;
    }
    function test8699()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} >= $test;
    }
    function test8700()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield from $test) >= $test;
    }
    function test8701()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test) >= $test;
    }
    function test8702()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test &= $test) >= $test;
    }
    function test8703()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test |= $test) >= $test;
    }
    function test8704()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^= $test) >= $test;
    }
    function test8705()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ??= $test) >= $test;
    }
    function test8706()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test .= $test) >= $test;
    }
    function test8707()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test /= $test) >= $test;
    }
    function test8708()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test -= $test) >= $test;
    }
    function test8709()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test %= $test) >= $test;
    }
    function test8710()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test *= $test) >= $test;
    }
    function test8711()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test += $test) >= $test;
    }
    function test8712()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test **= $test) >= $test;
    }
    function test8713()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <<= $test) >= $test;
    }
    function test8714()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >>= $test) >= $test;
    }
    function test8715()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test & $test) >= $test;
    }
    function test8716()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test | $test) >= $test;
    }
    function test8717()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^ $test) >= $test;
    }
    function test8718()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test && $test) >= $test;
    }
    function test8719()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test || $test) >= $test;
    }
    function test8720()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ?? $test) >= $test;
    }
    function test8721()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test >= $test;
    }
    function test8722()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test >= $test;
    }
    function test8723()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test == $test) >= $test;
    }
    function test8724()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test > $test) >= $test;
    }
    function test8725()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >= $test) >= $test;
    }
    function test8726()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test === $test) >= $test;
    }
    function test8727()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test and $test) >= $test;
    }
    function test8728()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test or $test) >= $test;
    }
    function test8729()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test xor $test) >= $test;
    }
    function test8730()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test >= $test;
    }
    function test8731()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test >= $test;
    }
    function test8732()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test >= $test;
    }
    function test8733()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test != $test) >= $test;
    }
    function test8734()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test !== $test) >= $test;
    }
    function test8735()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test >= $test;
    }
    function test8736()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test >= $test;
    }
    function test8737()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test >= $test;
    }
    function test8738()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test >= $test;
    }
    function test8739()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test < $test) >= $test;
    }
    function test8740()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <= $test) >= $test;
    }
    function test8741()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <=> $test) >= $test;
    }
    function test8742()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test >= $test;
    }
    function test8743()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test >= $test;
    }
    function test8744()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test >= $test;
    }
    function test8745()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test >= $test;
    }
    function test8746()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test >= $test;
    }
    function test8747()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test >= $test;
    }
    function test8748()
    {
        $this->assertTrue(0 === 0);
        fn() => 0.0 >= $test;
    }
    function test8749()
    {
        $this->assertTrue(0 === 0);
        fn() => "{$test}" >= $test;
    }
    function test8750()
    {
        $this->assertTrue(0 === 0);
        fn() => 0 >= $test;
    }
    function test8751()
    {
        $this->assertTrue(0 === 0);
        fn() => 'test' >= $test;
    }
    function test8752()
    {
        $this->assertTrue(0 === 0);
        fn() => __CLASS__ >= $test;
    }
    function test8753()
    {
        $this->assertTrue(0 === 0);
        fn() => __DIR__ >= $test;
    }
    function test8754()
    {
        $this->assertTrue(0 === 0);
        fn() => __FILE__ >= $test;
    }
    function test8755()
    {
        $this->assertTrue(0 === 0);
        fn() => __FUNCTION__ >= $test;
    }
    function test8756()
    {
        $this->assertTrue(0 === 0);
        fn() => __LINE__ >= $test;
    }
    function test8757()
    {
        $this->assertTrue(0 === 0);
        fn() => __METHOD__ >= $test;
    }
    function test8758()
    {
        $this->assertTrue(0 === 0);
        fn() => __NAMESPACE__ >= $test;
    }
    function test8759()
    {
        $this->assertTrue(0 === 0);
        fn() => __TRAIT__ >= $test;
    }
    function test8760()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test[$test];
    }
    function test8761()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= [];
    }
    function test8762()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= ($test = $test);
    }
    function test8763()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= ($test =& $test);
    }
    function test8764()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= ~$test;
    }
    function test8765()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= !$test;
    }
    function test8766()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test::$test;
    }
    function test8767()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= clone $test;
    }
    function test8768()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= function () {
        };
    }
    function test8769()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test;
    }
    function test8770()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= self;
    }
    function test8771()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= empty($test);
    }
    function test8772()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= @$test;
    }
    function test8773()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= eval($test);
    }
    function test8774()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test();
    }
    function test8775()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= ( $test);
    }
    function test8776()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test instanceof $test;
    }
    function test8777()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= isset($test);
    }
    function test8778()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= match ($test) {
        };
    }
    function test8779()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test->{$test}();
    }
    function test8780()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= new $test();
    }
    function test8781()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test?->{$test}();
    }
    function test8782()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test?->{$test};
    }
    function test8783()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test--;
    }
    function test8784()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test++;
    }
    function test8785()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= --$test;
    }
    function test8786()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= ++$test;
    }
    function test8787()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= (print $test);
    }
    function test8788()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test->{$test};
    }
    function test8789()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= ``;
    }
    function test8790()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test::$test();
    }
    function test8791()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test::${$test};
    }
    function test8792()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= ($test ? $test : $test);
    }
    function test8793()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= throw $test;
    }
    function test8794()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= -$test;
    }
    function test8795()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= +$test;
    }
    function test8796()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= ${$test};
    }
    function test8797()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= (yield from $test);
    }
    function test8798()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= (yield $test => $test);
    }
    function test8799()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= ($test &= $test);
    }
    function test8800()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= ($test |= $test);
    }
    function test8801()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= ($test ^= $test);
    }
    function test8802()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= ($test ??= $test);
    }
    function test8803()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= ($test .= $test);
    }
    function test8804()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= ($test /= $test);
    }
    function test8805()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= ($test -= $test);
    }
    function test8806()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= ($test %= $test);
    }
    function test8807()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= ($test *= $test);
    }
    function test8808()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= ($test += $test);
    }
    function test8809()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= ($test **= $test);
    }
    function test8810()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= ($test <<= $test);
    }
    function test8811()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= ($test >>= $test);
    }
    function test8812()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= ($test & $test);
    }
    function test8813()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= ($test | $test);
    }
    function test8814()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= ($test ^ $test);
    }
    function test8815()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= ($test && $test);
    }
    function test8816()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= ($test || $test);
    }
    function test8817()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= ($test ?? $test);
    }
    function test8818()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test . $test;
    }
    function test8819()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test / $test;
    }
    function test8820()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= ($test == $test);
    }
    function test8821()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= ($test > $test);
    }
    function test8822()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= ($test >= $test);
    }
    function test8823()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= ($test === $test);
    }
    function test8824()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= ($test and $test);
    }
    function test8825()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= ($test or $test);
    }
    function test8826()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= ($test xor $test);
    }
    function test8827()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test - $test;
    }
    function test8828()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test % $test;
    }
    function test8829()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test * $test;
    }
    function test8830()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= ($test != $test);
    }
    function test8831()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= ($test !== $test);
    }
    function test8832()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test + $test;
    }
    function test8833()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test ** $test;
    }
    function test8834()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test << $test;
    }
    function test8835()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test >> $test;
    }
    function test8836()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= ($test < $test);
    }
    function test8837()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= ($test <= $test);
    }
    function test8838()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= ($test <=> $test);
    }
    function test8839()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= (array) $test;
    }
    function test8840()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= (bool) $test;
    }
    function test8841()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= (double) $test;
    }
    function test8842()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= (int) $test;
    }
    function test8843()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= (object) $test;
    }
    function test8844()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= (string) $test;
    }
    function test8845()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= 0.0;
    }
    function test8846()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= "{$test}";
    }
    function test8847()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= 0;
    }
    function test8848()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= 'test';
    }
    function test8849()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= __CLASS__;
    }
    function test8850()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= __DIR__;
    }
    function test8851()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= __FILE__;
    }
    function test8852()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= __FUNCTION__;
    }
    function test8853()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= __LINE__;
    }
    function test8854()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= __METHOD__;
    }
    function test8855()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= __NAMESPACE__;
    }
    function test8856()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= __TRAIT__;
    }
    function test8857()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] === $test;
    }
    function test8858()
    {
        $this->assertTrue(0 === 0);
        fn() => [] === $test;
    }
    function test8859()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test = $test) === $test;
    }
    function test8860()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test =& $test) === $test;
    }
    function test8861()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test === $test;
    }
    function test8862()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test === $test;
    }
    function test8863()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test === $test;
    }
    function test8864()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test === $test;
    }
    function test8865()
    {
        $this->assertTrue(0 === 0);
        fn() => function () {
        } === $test;
    }
    function test8866()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test;
    }
    function test8867()
    {
        $this->assertTrue(0 === 0);
        fn() => self === $test;
    }
    function test8868()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test) === $test;
    }
    function test8869()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test === $test;
    }
    function test8870()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test) === $test;
    }
    function test8871()
    {
        $this->assertTrue(0 === 0);
        fn() => $test() === $test;
    }
    function test8872()
    {
        $this->assertTrue(0 === 0);
        fn() => ( $test) === $test;
    }
    function test8873()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof $test === $test;
    }
    function test8874()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test) === $test;
    }
    function test8875()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test) {
        } === $test;
    }
    function test8876()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}() === $test;
    }
    function test8877()
    {
        $this->assertTrue(0 === 0);
        fn() => new $test() === $test;
    }
    function test8878()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}() === $test;
    }
    function test8879()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test} === $test;
    }
    function test8880()
    {
        $this->assertTrue(0 === 0);
        fn() => $test-- === $test;
    }
    function test8881()
    {
        $this->assertTrue(0 === 0);
        fn() => $test++ === $test;
    }
    function test8882()
    {
        $this->assertTrue(0 === 0);
        fn() => --$test === $test;
    }
    function test8883()
    {
        $this->assertTrue(0 === 0);
        fn() => ++$test === $test;
    }
    function test8884()
    {
        $this->assertTrue(0 === 0);
        fn() => (print $test) === $test;
    }
    function test8885()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} === $test;
    }
    function test8886()
    {
        $this->assertTrue(0 === 0);
        fn() => `` === $test;
    }
    function test8887()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test() === $test;
    }
    function test8888()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} === $test;
    }
    function test8889()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ? $test : $test) === $test;
    }
    function test8890()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test === $test;
    }
    function test8891()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test === $test;
    }
    function test8892()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test === $test;
    }
    function test8893()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} === $test;
    }
    function test8894()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield from $test) === $test;
    }
    function test8895()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test) === $test;
    }
    function test8896()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test &= $test) === $test;
    }
    function test8897()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test |= $test) === $test;
    }
    function test8898()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^= $test) === $test;
    }
    function test8899()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ??= $test) === $test;
    }
    function test8900()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test .= $test) === $test;
    }
    function test8901()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test /= $test) === $test;
    }
    function test8902()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test -= $test) === $test;
    }
    function test8903()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test %= $test) === $test;
    }
    function test8904()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test *= $test) === $test;
    }
    function test8905()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test += $test) === $test;
    }
    function test8906()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test **= $test) === $test;
    }
    function test8907()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <<= $test) === $test;
    }
    function test8908()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >>= $test) === $test;
    }
    function test8909()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test & $test) === $test;
    }
    function test8910()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test | $test) === $test;
    }
    function test8911()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^ $test) === $test;
    }
    function test8912()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test && $test) === $test;
    }
    function test8913()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test || $test) === $test;
    }
    function test8914()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ?? $test) === $test;
    }
    function test8915()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test === $test;
    }
    function test8916()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test === $test;
    }
    function test8917()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test == $test) === $test;
    }
    function test8918()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test === $test;
    }
    function test8919()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test === $test;
    }
    function test8920()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test === $test) === $test;
    }
    function test8921()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test and $test) === $test;
    }
    function test8922()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test or $test) === $test;
    }
    function test8923()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test xor $test) === $test;
    }
    function test8924()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test === $test;
    }
    function test8925()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test === $test;
    }
    function test8926()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test === $test;
    }
    function test8927()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test != $test) === $test;
    }
    function test8928()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test !== $test) === $test;
    }
    function test8929()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test === $test;
    }
    function test8930()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test === $test;
    }
    function test8931()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test === $test;
    }
    function test8932()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test === $test;
    }
    function test8933()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test === $test;
    }
    function test8934()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test === $test;
    }
    function test8935()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <=> $test) === $test;
    }
    function test8936()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test === $test;
    }
    function test8937()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test === $test;
    }
    function test8938()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test === $test;
    }
    function test8939()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test === $test;
    }
    function test8940()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test === $test;
    }
    function test8941()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test === $test;
    }
    function test8942()
    {
        $this->assertTrue(0 === 0);
        fn() => 0.0 === $test;
    }
    function test8943()
    {
        $this->assertTrue(0 === 0);
        fn() => "{$test}" === $test;
    }
    function test8944()
    {
        $this->assertTrue(0 === 0);
        fn() => 0 === $test;
    }
    function test8945()
    {
        $this->assertTrue(0 === 0);
        fn() => 'test' === $test;
    }
    function test8946()
    {
        $this->assertTrue(0 === 0);
        fn() => __CLASS__ === $test;
    }
    function test8947()
    {
        $this->assertTrue(0 === 0);
        fn() => __DIR__ === $test;
    }
    function test8948()
    {
        $this->assertTrue(0 === 0);
        fn() => __FILE__ === $test;
    }
    function test8949()
    {
        $this->assertTrue(0 === 0);
        fn() => __FUNCTION__ === $test;
    }
    function test8950()
    {
        $this->assertTrue(0 === 0);
        fn() => __LINE__ === $test;
    }
    function test8951()
    {
        $this->assertTrue(0 === 0);
        fn() => __METHOD__ === $test;
    }
    function test8952()
    {
        $this->assertTrue(0 === 0);
        fn() => __NAMESPACE__ === $test;
    }
    function test8953()
    {
        $this->assertTrue(0 === 0);
        fn() => __TRAIT__ === $test;
    }
    function test8954()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test[$test];
    }
    function test8955()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === [];
    }
    function test8956()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === ($test = $test);
    }
    function test8957()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === ($test =& $test);
    }
    function test8958()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === ~$test;
    }
    function test8959()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === !$test;
    }
    function test8960()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test::$test;
    }
    function test8961()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === clone $test;
    }
    function test8962()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === function () {
        };
    }
    function test8963()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test;
    }
    function test8964()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === self;
    }
    function test8965()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === empty($test);
    }
    function test8966()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === @$test;
    }
    function test8967()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === eval($test);
    }
    function test8968()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test();
    }
    function test8969()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === ( $test);
    }
    function test8970()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test instanceof $test;
    }
    function test8971()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === isset($test);
    }
    function test8972()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === match ($test) {
        };
    }
    function test8973()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test->{$test}();
    }
    function test8974()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === new $test();
    }
    function test8975()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test?->{$test}();
    }
    function test8976()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test?->{$test};
    }
    function test8977()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test--;
    }
    function test8978()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test++;
    }
    function test8979()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === --$test;
    }
    function test8980()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === ++$test;
    }
    function test8981()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === (print $test);
    }
    function test8982()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test->{$test};
    }
    function test8983()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === ``;
    }
    function test8984()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test::$test();
    }
    function test8985()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test::${$test};
    }
    function test8986()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === ($test ? $test : $test);
    }
    function test8987()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === throw $test;
    }
    function test8988()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === -$test;
    }
    function test8989()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === +$test;
    }
    function test8990()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === ${$test};
    }
    function test8991()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === (yield from $test);
    }
    function test8992()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === (yield $test => $test);
    }
    function test8993()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === ($test &= $test);
    }
    function test8994()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === ($test |= $test);
    }
    function test8995()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === ($test ^= $test);
    }
    function test8996()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === ($test ??= $test);
    }
    function test8997()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === ($test .= $test);
    }
    function test8998()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === ($test /= $test);
    }
    function test8999()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === ($test -= $test);
    }
    function test9000()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === ($test %= $test);
    }
    function test9001()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === ($test *= $test);
    }
    function test9002()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === ($test += $test);
    }
    function test9003()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === ($test **= $test);
    }
    function test9004()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === ($test <<= $test);
    }
    function test9005()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === ($test >>= $test);
    }
    function test9006()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === ($test & $test);
    }
    function test9007()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === ($test | $test);
    }
    function test9008()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === ($test ^ $test);
    }
    function test9009()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === ($test && $test);
    }
    function test9010()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === ($test || $test);
    }
    function test9011()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === ($test ?? $test);
    }
    function test9012()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test . $test;
    }
    function test9013()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test / $test;
    }
    function test9014()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === ($test == $test);
    }
    function test9015()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test > $test;
    }
    function test9016()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test >= $test;
    }
    function test9017()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === ($test === $test);
    }
    function test9018()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === ($test and $test);
    }
    function test9019()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === ($test or $test);
    }
    function test9020()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === ($test xor $test);
    }
    function test9021()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test - $test;
    }
    function test9022()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test % $test;
    }
    function test9023()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test * $test;
    }
    function test9024()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === ($test != $test);
    }
    function test9025()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === ($test !== $test);
    }
    function test9026()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test + $test;
    }
    function test9027()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test ** $test;
    }
    function test9028()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test << $test;
    }
    function test9029()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test >> $test;
    }
    function test9030()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test < $test;
    }
    function test9031()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test <= $test;
    }
    function test9032()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === ($test <=> $test);
    }
    function test9033()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === (array) $test;
    }
    function test9034()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === (bool) $test;
    }
    function test9035()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === (double) $test;
    }
    function test9036()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === (int) $test;
    }
    function test9037()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === (object) $test;
    }
    function test9038()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === (string) $test;
    }
    function test9039()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === 0.0;
    }
    function test9040()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === "{$test}";
    }
    function test9041()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === 0;
    }
    function test9042()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === 'test';
    }
    function test9043()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === __CLASS__;
    }
    function test9044()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === __DIR__;
    }
    function test9045()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === __FILE__;
    }
    function test9046()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === __FUNCTION__;
    }
    function test9047()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === __LINE__;
    }
    function test9048()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === __METHOD__;
    }
    function test9049()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === __NAMESPACE__;
    }
    function test9050()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === __TRAIT__;
    }
    function test9051()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] and $test;
    }
    function test9052()
    {
        $this->assertTrue(0 === 0);
        fn() => [] and $test;
    }
    function test9053()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test and $test;
    }
    function test9054()
    {
        $this->assertTrue(0 === 0);
        fn() => $test =& $test and $test;
    }
    function test9055()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test and $test;
    }
    function test9056()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test and $test;
    }
    function test9057()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test and $test;
    }
    function test9058()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test and $test;
    }
    function test9059()
    {
        $this->assertTrue(0 === 0);
        fn() => function () {
        } and $test;
    }
    function test9060()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test;
    }
    function test9061()
    {
        $this->assertTrue(0 === 0);
        fn() => self and $test;
    }
    function test9062()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test) and $test;
    }
    function test9063()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test and $test;
    }
    function test9064()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test) and $test;
    }
    function test9065()
    {
        $this->assertTrue(0 === 0);
        fn() => $test() and $test;
    }
    function test9066()
    {
        $this->assertTrue(0 === 0);
        fn() => ( $test) and $test;
    }
    function test9067()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof $test and $test;
    }
    function test9068()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test) and $test;
    }
    function test9069()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test) {
        } and $test;
    }
    function test9070()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}() and $test;
    }
    function test9071()
    {
        $this->assertTrue(0 === 0);
        fn() => new $test() and $test;
    }
    function test9072()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}() and $test;
    }
    function test9073()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test} and $test;
    }
    function test9074()
    {
        $this->assertTrue(0 === 0);
        fn() => $test-- and $test;
    }
    function test9075()
    {
        $this->assertTrue(0 === 0);
        fn() => $test++ and $test;
    }
    function test9076()
    {
        $this->assertTrue(0 === 0);
        fn() => --$test and $test;
    }
    function test9077()
    {
        $this->assertTrue(0 === 0);
        fn() => ++$test and $test;
    }
    function test9078()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test and $test;
    }
    function test9079()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} and $test;
    }
    function test9080()
    {
        $this->assertTrue(0 === 0);
        fn() => `` and $test;
    }
    function test9081()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test() and $test;
    }
    function test9082()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} and $test;
    }
    function test9083()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test and $test;
    }
    function test9084()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test and $test;
    }
    function test9085()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test and $test;
    }
    function test9086()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test and $test;
    }
    function test9087()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} and $test;
    }
    function test9088()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test and $test;
    }
    function test9089()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test) and $test;
    }
    function test9090()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test and $test;
    }
    function test9091()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test and $test;
    }
    function test9092()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test and $test;
    }
    function test9093()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test and $test;
    }
    function test9094()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test and $test;
    }
    function test9095()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test and $test;
    }
    function test9096()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test and $test;
    }
    function test9097()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test and $test;
    }
    function test9098()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test and $test;
    }
    function test9099()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test and $test;
    }
    function test9100()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test and $test;
    }
    function test9101()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test and $test;
    }
    function test9102()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test and $test;
    }
    function test9103()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test and $test;
    }
    function test9104()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test and $test;
    }
    function test9105()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test and $test;
    }
    function test9106()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test and $test;
    }
    function test9107()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test and $test;
    }
    function test9108()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test and $test;
    }
    function test9109()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test and $test;
    }
    function test9110()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test and $test;
    }
    function test9111()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test and $test;
    }
    function test9112()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test and $test;
    }
    function test9113()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test and $test;
    }
    function test9114()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test and $test;
    }
    function test9115()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test and $test;
    }
    function test9116()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test or $test) and $test;
    }
    function test9117()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test xor $test) and $test;
    }
    function test9118()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test and $test;
    }
    function test9119()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test and $test;
    }
    function test9120()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test and $test;
    }
    function test9121()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test and $test;
    }
    function test9122()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test and $test;
    }
    function test9123()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test and $test;
    }
    function test9124()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test and $test;
    }
    function test9125()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test and $test;
    }
    function test9126()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test and $test;
    }
    function test9127()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test and $test;
    }
    function test9128()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test and $test;
    }
    function test9129()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test and $test;
    }
    function test9130()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test and $test;
    }
    function test9131()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test and $test;
    }
    function test9132()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test and $test;
    }
    function test9133()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test and $test;
    }
    function test9134()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test and $test;
    }
    function test9135()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test and $test;
    }
    function test9136()
    {
        $this->assertTrue(0 === 0);
        fn() => 0.0 and $test;
    }
    function test9137()
    {
        $this->assertTrue(0 === 0);
        fn() => "{$test}" and $test;
    }
    function test9138()
    {
        $this->assertTrue(0 === 0);
        fn() => 0 and $test;
    }
    function test9139()
    {
        $this->assertTrue(0 === 0);
        fn() => 'test' and $test;
    }
    function test9140()
    {
        $this->assertTrue(0 === 0);
        fn() => __CLASS__ and $test;
    }
    function test9141()
    {
        $this->assertTrue(0 === 0);
        fn() => __DIR__ and $test;
    }
    function test9142()
    {
        $this->assertTrue(0 === 0);
        fn() => __FILE__ and $test;
    }
    function test9143()
    {
        $this->assertTrue(0 === 0);
        fn() => __FUNCTION__ and $test;
    }
    function test9144()
    {
        $this->assertTrue(0 === 0);
        fn() => __LINE__ and $test;
    }
    function test9145()
    {
        $this->assertTrue(0 === 0);
        fn() => __METHOD__ and $test;
    }
    function test9146()
    {
        $this->assertTrue(0 === 0);
        fn() => __NAMESPACE__ and $test;
    }
    function test9147()
    {
        $this->assertTrue(0 === 0);
        fn() => __TRAIT__ and $test;
    }
    function test9148()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test[$test];
    }
    function test9149()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and [];
    }
    function test9150()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test = $test;
    }
    function test9151()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test =& $test;
    }
    function test9152()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and ~$test;
    }
    function test9153()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and !$test;
    }
    function test9154()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test::$test;
    }
    function test9155()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and clone $test;
    }
    function test9156()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and function () {
        };
    }
    function test9157()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test;
    }
    function test9158()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and self;
    }
    function test9159()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and empty($test);
    }
    function test9160()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and @$test;
    }
    function test9161()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and eval($test);
    }
    function test9162()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test();
    }
    function test9163()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and ( $test);
    }
    function test9164()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test instanceof $test;
    }
    function test9165()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and isset($test);
    }
    function test9166()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and match ($test) {
        };
    }
    function test9167()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test->{$test}();
    }
    function test9168()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and new $test();
    }
    function test9169()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test?->{$test}();
    }
    function test9170()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test?->{$test};
    }
    function test9171()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test--;
    }
    function test9172()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test++;
    }
    function test9173()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and --$test;
    }
    function test9174()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and ++$test;
    }
    function test9175()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and print $test;
    }
    function test9176()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test->{$test};
    }
    function test9177()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and ``;
    }
    function test9178()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test::$test();
    }
    function test9179()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test::${$test};
    }
    function test9180()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test ? $test : $test;
    }
    function test9181()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and throw $test;
    }
    function test9182()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and -$test;
    }
    function test9183()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and +$test;
    }
    function test9184()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and ${$test};
    }
    function test9185()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and yield from $test;
    }
    function test9186()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and (yield $test => $test);
    }
    function test9187()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test &= $test;
    }
    function test9188()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test |= $test;
    }
    function test9189()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test ^= $test;
    }
    function test9190()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test ??= $test;
    }
    function test9191()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test .= $test;
    }
    function test9192()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test /= $test;
    }
    function test9193()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test -= $test;
    }
    function test9194()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test %= $test;
    }
    function test9195()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test *= $test;
    }
    function test9196()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test += $test;
    }
    function test9197()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test **= $test;
    }
    function test9198()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test <<= $test;
    }
    function test9199()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test >>= $test;
    }
    function test9200()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test & $test;
    }
    function test9201()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test | $test;
    }
    function test9202()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test ^ $test;
    }
    function test9203()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test && $test;
    }
    function test9204()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test || $test;
    }
    function test9205()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test ?? $test;
    }
    function test9206()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test . $test;
    }
    function test9207()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test / $test;
    }
    function test9208()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test == $test;
    }
    function test9209()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test > $test;
    }
    function test9210()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test >= $test;
    }
    function test9211()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test === $test;
    }
    function test9212()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and ($test and $test);
    }
    function test9213()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and ($test or $test);
    }
    function test9214()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and ($test xor $test);
    }
    function test9215()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test - $test;
    }
    function test9216()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test % $test;
    }
    function test9217()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test * $test;
    }
    function test9218()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test != $test;
    }
    function test9219()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test !== $test;
    }
    function test9220()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test + $test;
    }
    function test9221()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test ** $test;
    }
    function test9222()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test << $test;
    }
    function test9223()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test >> $test;
    }
    function test9224()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test < $test;
    }
    function test9225()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test <= $test;
    }
    function test9226()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test <=> $test;
    }
    function test9227()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and (array) $test;
    }
    function test9228()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and (bool) $test;
    }
    function test9229()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and (double) $test;
    }
    function test9230()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and (int) $test;
    }
    function test9231()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and (object) $test;
    }
    function test9232()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and (string) $test;
    }
    function test9233()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and 0.0;
    }
    function test9234()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and "{$test}";
    }
    function test9235()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and 0;
    }
    function test9236()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and 'test';
    }
    function test9237()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and __CLASS__;
    }
    function test9238()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and __DIR__;
    }
    function test9239()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and __FILE__;
    }
    function test9240()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and __FUNCTION__;
    }
    function test9241()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and __LINE__;
    }
    function test9242()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and __METHOD__;
    }
    function test9243()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and __NAMESPACE__;
    }
    function test9244()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and __TRAIT__;
    }
    function test9245()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] or $test;
    }
    function test9246()
    {
        $this->assertTrue(0 === 0);
        fn() => [] or $test;
    }
    function test9247()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test or $test;
    }
    function test9248()
    {
        $this->assertTrue(0 === 0);
        fn() => $test =& $test or $test;
    }
    function test9249()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test or $test;
    }
    function test9250()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test or $test;
    }
    function test9251()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test or $test;
    }
    function test9252()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test or $test;
    }
    function test9253()
    {
        $this->assertTrue(0 === 0);
        fn() => function () {
        } or $test;
    }
    function test9254()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test;
    }
    function test9255()
    {
        $this->assertTrue(0 === 0);
        fn() => self or $test;
    }
    function test9256()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test) or $test;
    }
    function test9257()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test or $test;
    }
    function test9258()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test) or $test;
    }
    function test9259()
    {
        $this->assertTrue(0 === 0);
        fn() => $test() or $test;
    }
    function test9260()
    {
        $this->assertTrue(0 === 0);
        fn() => ( $test) or $test;
    }
    function test9261()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof $test or $test;
    }
    function test9262()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test) or $test;
    }
    function test9263()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test) {
        } or $test;
    }
    function test9264()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}() or $test;
    }
    function test9265()
    {
        $this->assertTrue(0 === 0);
        fn() => new $test() or $test;
    }
    function test9266()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}() or $test;
    }
    function test9267()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test} or $test;
    }
    function test9268()
    {
        $this->assertTrue(0 === 0);
        fn() => $test-- or $test;
    }
    function test9269()
    {
        $this->assertTrue(0 === 0);
        fn() => $test++ or $test;
    }
    function test9270()
    {
        $this->assertTrue(0 === 0);
        fn() => --$test or $test;
    }
    function test9271()
    {
        $this->assertTrue(0 === 0);
        fn() => ++$test or $test;
    }
    function test9272()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test or $test;
    }
    function test9273()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} or $test;
    }
    function test9274()
    {
        $this->assertTrue(0 === 0);
        fn() => `` or $test;
    }
    function test9275()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test() or $test;
    }
    function test9276()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} or $test;
    }
    function test9277()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test or $test;
    }
    function test9278()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test or $test;
    }
    function test9279()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test or $test;
    }
    function test9280()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test or $test;
    }
    function test9281()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} or $test;
    }
    function test9282()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test or $test;
    }
    function test9283()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test) or $test;
    }
    function test9284()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test or $test;
    }
    function test9285()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test or $test;
    }
    function test9286()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test or $test;
    }
    function test9287()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test or $test;
    }
    function test9288()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test or $test;
    }
    function test9289()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test or $test;
    }
    function test9290()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test or $test;
    }
    function test9291()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test or $test;
    }
    function test9292()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test or $test;
    }
    function test9293()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test or $test;
    }
    function test9294()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test or $test;
    }
    function test9295()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test or $test;
    }
    function test9296()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test or $test;
    }
    function test9297()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test or $test;
    }
    function test9298()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test or $test;
    }
    function test9299()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test or $test;
    }
    function test9300()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test or $test;
    }
    function test9301()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test or $test;
    }
    function test9302()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test or $test;
    }
    function test9303()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test or $test;
    }
    function test9304()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test or $test;
    }
    function test9305()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test or $test;
    }
    function test9306()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test or $test;
    }
    function test9307()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test or $test;
    }
    function test9308()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test or $test;
    }
    function test9309()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test or $test;
    }
    function test9310()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test or $test;
    }
    function test9311()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test or $test;
    }
    function test9312()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test or $test;
    }
    function test9313()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test or $test;
    }
    function test9314()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test or $test;
    }
    function test9315()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test or $test;
    }
    function test9316()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test or $test;
    }
    function test9317()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test or $test;
    }
    function test9318()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test or $test;
    }
    function test9319()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test or $test;
    }
    function test9320()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test or $test;
    }
    function test9321()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test or $test;
    }
    function test9322()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test or $test;
    }
    function test9323()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test or $test;
    }
    function test9324()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test or $test;
    }
    function test9325()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test or $test;
    }
    function test9326()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test or $test;
    }
    function test9327()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test or $test;
    }
    function test9328()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test or $test;
    }
    function test9329()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test or $test;
    }
    function test9330()
    {
        $this->assertTrue(0 === 0);
        fn() => 0.0 or $test;
    }
    function test9331()
    {
        $this->assertTrue(0 === 0);
        fn() => "{$test}" or $test;
    }
    function test9332()
    {
        $this->assertTrue(0 === 0);
        fn() => 0 or $test;
    }
    function test9333()
    {
        $this->assertTrue(0 === 0);
        fn() => 'test' or $test;
    }
    function test9334()
    {
        $this->assertTrue(0 === 0);
        fn() => __CLASS__ or $test;
    }
    function test9335()
    {
        $this->assertTrue(0 === 0);
        fn() => __DIR__ or $test;
    }
    function test9336()
    {
        $this->assertTrue(0 === 0);
        fn() => __FILE__ or $test;
    }
    function test9337()
    {
        $this->assertTrue(0 === 0);
        fn() => __FUNCTION__ or $test;
    }
    function test9338()
    {
        $this->assertTrue(0 === 0);
        fn() => __LINE__ or $test;
    }
    function test9339()
    {
        $this->assertTrue(0 === 0);
        fn() => __METHOD__ or $test;
    }
    function test9340()
    {
        $this->assertTrue(0 === 0);
        fn() => __NAMESPACE__ or $test;
    }
    function test9341()
    {
        $this->assertTrue(0 === 0);
        fn() => __TRAIT__ or $test;
    }
    function test9342()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test[$test];
    }
    function test9343()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or [];
    }
    function test9344()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test = $test;
    }
    function test9345()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test =& $test;
    }
    function test9346()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or ~$test;
    }
    function test9347()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or !$test;
    }
    function test9348()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test::$test;
    }
    function test9349()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or clone $test;
    }
    function test9350()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or function () {
        };
    }
    function test9351()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test;
    }
    function test9352()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or self;
    }
    function test9353()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or empty($test);
    }
    function test9354()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or @$test;
    }
    function test9355()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or eval($test);
    }
    function test9356()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test();
    }
    function test9357()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or ( $test);
    }
    function test9358()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test instanceof $test;
    }
    function test9359()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or isset($test);
    }
    function test9360()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or match ($test) {
        };
    }
    function test9361()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test->{$test}();
    }
    function test9362()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or new $test();
    }
    function test9363()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test?->{$test}();
    }
    function test9364()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test?->{$test};
    }
    function test9365()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test--;
    }
    function test9366()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test++;
    }
    function test9367()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or --$test;
    }
    function test9368()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or ++$test;
    }
    function test9369()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or print $test;
    }
    function test9370()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test->{$test};
    }
    function test9371()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or ``;
    }
    function test9372()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test::$test();
    }
    function test9373()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test::${$test};
    }
    function test9374()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test ? $test : $test;
    }
    function test9375()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or throw $test;
    }
    function test9376()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or -$test;
    }
    function test9377()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or +$test;
    }
    function test9378()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or ${$test};
    }
    function test9379()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or yield from $test;
    }
    function test9380()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or (yield $test => $test);
    }
    function test9381()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test &= $test;
    }
    function test9382()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test |= $test;
    }
    function test9383()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test ^= $test;
    }
    function test9384()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test ??= $test;
    }
    function test9385()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test .= $test;
    }
    function test9386()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test /= $test;
    }
    function test9387()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test -= $test;
    }
    function test9388()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test %= $test;
    }
    function test9389()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test *= $test;
    }
    function test9390()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test += $test;
    }
    function test9391()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test **= $test;
    }
    function test9392()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test <<= $test;
    }
    function test9393()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test >>= $test;
    }
    function test9394()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test & $test;
    }
    function test9395()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test | $test;
    }
    function test9396()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test ^ $test;
    }
    function test9397()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test && $test;
    }
    function test9398()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test || $test;
    }
    function test9399()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test ?? $test;
    }
    function test9400()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test . $test;
    }
    function test9401()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test / $test;
    }
    function test9402()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test == $test;
    }
    function test9403()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test > $test;
    }
    function test9404()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test >= $test;
    }
    function test9405()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test === $test;
    }
    function test9406()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test and $test;
    }
    function test9407()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or ($test or $test);
    }
    function test9408()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test xor $test;
    }
    function test9409()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test - $test;
    }
    function test9410()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test % $test;
    }
    function test9411()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test * $test;
    }
    function test9412()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test != $test;
    }
    function test9413()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test !== $test;
    }
    function test9414()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test + $test;
    }
    function test9415()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test ** $test;
    }
    function test9416()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test << $test;
    }
    function test9417()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test >> $test;
    }
    function test9418()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test < $test;
    }
    function test9419()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test <= $test;
    }
    function test9420()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or $test <=> $test;
    }
    function test9421()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or (array) $test;
    }
    function test9422()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or (bool) $test;
    }
    function test9423()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or (double) $test;
    }
    function test9424()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or (int) $test;
    }
    function test9425()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or (object) $test;
    }
    function test9426()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or (string) $test;
    }
    function test9427()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or 0.0;
    }
    function test9428()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or "{$test}";
    }
    function test9429()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or 0;
    }
    function test9430()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or 'test';
    }
    function test9431()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or __CLASS__;
    }
    function test9432()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or __DIR__;
    }
    function test9433()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or __FILE__;
    }
    function test9434()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or __FUNCTION__;
    }
    function test9435()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or __LINE__;
    }
    function test9436()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or __METHOD__;
    }
    function test9437()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or __NAMESPACE__;
    }
    function test9438()
    {
        $this->assertTrue(0 === 0);
        fn() => $test or __TRAIT__;
    }
    function test9439()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] xor $test;
    }
    function test9440()
    {
        $this->assertTrue(0 === 0);
        fn() => [] xor $test;
    }
    function test9441()
    {
        $this->assertTrue(0 === 0);
        fn() => $test = $test xor $test;
    }
    function test9442()
    {
        $this->assertTrue(0 === 0);
        fn() => $test =& $test xor $test;
    }
    function test9443()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test xor $test;
    }
    function test9444()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test xor $test;
    }
    function test9445()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test xor $test;
    }
    function test9446()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test xor $test;
    }
    function test9447()
    {
        $this->assertTrue(0 === 0);
        fn() => function () {
        } xor $test;
    }
    function test9448()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test;
    }
    function test9449()
    {
        $this->assertTrue(0 === 0);
        fn() => self xor $test;
    }
    function test9450()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test) xor $test;
    }
    function test9451()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test xor $test;
    }
    function test9452()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test) xor $test;
    }
    function test9453()
    {
        $this->assertTrue(0 === 0);
        fn() => $test() xor $test;
    }
    function test9454()
    {
        $this->assertTrue(0 === 0);
        fn() => ( $test) xor $test;
    }
    function test9455()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof $test xor $test;
    }
    function test9456()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test) xor $test;
    }
    function test9457()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test) {
        } xor $test;
    }
    function test9458()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}() xor $test;
    }
    function test9459()
    {
        $this->assertTrue(0 === 0);
        fn() => new $test() xor $test;
    }
    function test9460()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}() xor $test;
    }
    function test9461()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test} xor $test;
    }
    function test9462()
    {
        $this->assertTrue(0 === 0);
        fn() => $test-- xor $test;
    }
    function test9463()
    {
        $this->assertTrue(0 === 0);
        fn() => $test++ xor $test;
    }
    function test9464()
    {
        $this->assertTrue(0 === 0);
        fn() => --$test xor $test;
    }
    function test9465()
    {
        $this->assertTrue(0 === 0);
        fn() => ++$test xor $test;
    }
    function test9466()
    {
        $this->assertTrue(0 === 0);
        fn() => print $test xor $test;
    }
    function test9467()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} xor $test;
    }
    function test9468()
    {
        $this->assertTrue(0 === 0);
        fn() => `` xor $test;
    }
    function test9469()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test() xor $test;
    }
    function test9470()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} xor $test;
    }
    function test9471()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ? $test : $test xor $test;
    }
    function test9472()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test xor $test;
    }
    function test9473()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test xor $test;
    }
    function test9474()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test xor $test;
    }
    function test9475()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} xor $test;
    }
    function test9476()
    {
        $this->assertTrue(0 === 0);
        fn() => yield from $test xor $test;
    }
    function test9477()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test) xor $test;
    }
    function test9478()
    {
        $this->assertTrue(0 === 0);
        fn() => $test &= $test xor $test;
    }
    function test9479()
    {
        $this->assertTrue(0 === 0);
        fn() => $test |= $test xor $test;
    }
    function test9480()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^= $test xor $test;
    }
    function test9481()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ??= $test xor $test;
    }
    function test9482()
    {
        $this->assertTrue(0 === 0);
        fn() => $test .= $test xor $test;
    }
    function test9483()
    {
        $this->assertTrue(0 === 0);
        fn() => $test /= $test xor $test;
    }
    function test9484()
    {
        $this->assertTrue(0 === 0);
        fn() => $test -= $test xor $test;
    }
    function test9485()
    {
        $this->assertTrue(0 === 0);
        fn() => $test %= $test xor $test;
    }
    function test9486()
    {
        $this->assertTrue(0 === 0);
        fn() => $test *= $test xor $test;
    }
    function test9487()
    {
        $this->assertTrue(0 === 0);
        fn() => $test += $test xor $test;
    }
    function test9488()
    {
        $this->assertTrue(0 === 0);
        fn() => $test **= $test xor $test;
    }
    function test9489()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <<= $test xor $test;
    }
    function test9490()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >>= $test xor $test;
    }
    function test9491()
    {
        $this->assertTrue(0 === 0);
        fn() => $test & $test xor $test;
    }
    function test9492()
    {
        $this->assertTrue(0 === 0);
        fn() => $test | $test xor $test;
    }
    function test9493()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ^ $test xor $test;
    }
    function test9494()
    {
        $this->assertTrue(0 === 0);
        fn() => $test && $test xor $test;
    }
    function test9495()
    {
        $this->assertTrue(0 === 0);
        fn() => $test || $test xor $test;
    }
    function test9496()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ?? $test xor $test;
    }
    function test9497()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test xor $test;
    }
    function test9498()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test xor $test;
    }
    function test9499()
    {
        $this->assertTrue(0 === 0);
        fn() => $test == $test xor $test;
    }
    function test9500()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test xor $test;
    }
    function test9501()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test xor $test;
    }
    function test9502()
    {
        $this->assertTrue(0 === 0);
        fn() => $test === $test xor $test;
    }
    function test9503()
    {
        $this->assertTrue(0 === 0);
        fn() => $test and $test xor $test;
    }
    function test9504()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test or $test) xor $test;
    }
    function test9505()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test xor $test;
    }
    function test9506()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test xor $test;
    }
    function test9507()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test xor $test;
    }
    function test9508()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test xor $test;
    }
    function test9509()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test xor $test;
    }
    function test9510()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test xor $test;
    }
    function test9511()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test xor $test;
    }
    function test9512()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test xor $test;
    }
    function test9513()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test xor $test;
    }
    function test9514()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test xor $test;
    }
    function test9515()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test xor $test;
    }
    function test9516()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test xor $test;
    }
    function test9517()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test xor $test;
    }
    function test9518()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test xor $test;
    }
    function test9519()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test xor $test;
    }
    function test9520()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test xor $test;
    }
    function test9521()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test xor $test;
    }
    function test9522()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test xor $test;
    }
    function test9523()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test xor $test;
    }
    function test9524()
    {
        $this->assertTrue(0 === 0);
        fn() => 0.0 xor $test;
    }
    function test9525()
    {
        $this->assertTrue(0 === 0);
        fn() => "{$test}" xor $test;
    }
    function test9526()
    {
        $this->assertTrue(0 === 0);
        fn() => 0 xor $test;
    }
    function test9527()
    {
        $this->assertTrue(0 === 0);
        fn() => 'test' xor $test;
    }
    function test9528()
    {
        $this->assertTrue(0 === 0);
        fn() => __CLASS__ xor $test;
    }
    function test9529()
    {
        $this->assertTrue(0 === 0);
        fn() => __DIR__ xor $test;
    }
    function test9530()
    {
        $this->assertTrue(0 === 0);
        fn() => __FILE__ xor $test;
    }
    function test9531()
    {
        $this->assertTrue(0 === 0);
        fn() => __FUNCTION__ xor $test;
    }
    function test9532()
    {
        $this->assertTrue(0 === 0);
        fn() => __LINE__ xor $test;
    }
    function test9533()
    {
        $this->assertTrue(0 === 0);
        fn() => __METHOD__ xor $test;
    }
    function test9534()
    {
        $this->assertTrue(0 === 0);
        fn() => __NAMESPACE__ xor $test;
    }
    function test9535()
    {
        $this->assertTrue(0 === 0);
        fn() => __TRAIT__ xor $test;
    }
    function test9536()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test[$test];
    }
    function test9537()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor [];
    }
    function test9538()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test = $test;
    }
    function test9539()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test =& $test;
    }
    function test9540()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor ~$test;
    }
    function test9541()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor !$test;
    }
    function test9542()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test::$test;
    }
    function test9543()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor clone $test;
    }
    function test9544()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor function () {
        };
    }
    function test9545()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test;
    }
    function test9546()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor self;
    }
    function test9547()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor empty($test);
    }
    function test9548()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor @$test;
    }
    function test9549()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor eval($test);
    }
    function test9550()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test();
    }
    function test9551()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor ( $test);
    }
    function test9552()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test instanceof $test;
    }
    function test9553()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor isset($test);
    }
    function test9554()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor match ($test) {
        };
    }
    function test9555()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test->{$test}();
    }
    function test9556()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor new $test();
    }
    function test9557()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test?->{$test}();
    }
    function test9558()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test?->{$test};
    }
    function test9559()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test--;
    }
    function test9560()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test++;
    }
    function test9561()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor --$test;
    }
    function test9562()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor ++$test;
    }
    function test9563()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor print $test;
    }
    function test9564()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test->{$test};
    }
    function test9565()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor ``;
    }
    function test9566()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test::$test();
    }
    function test9567()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test::${$test};
    }
    function test9568()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test ? $test : $test;
    }
    function test9569()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor throw $test;
    }
    function test9570()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor -$test;
    }
    function test9571()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor +$test;
    }
    function test9572()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor ${$test};
    }
    function test9573()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor yield from $test;
    }
    function test9574()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor (yield $test => $test);
    }
    function test9575()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test &= $test;
    }
    function test9576()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test |= $test;
    }
    function test9577()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test ^= $test;
    }
    function test9578()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test ??= $test;
    }
    function test9579()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test .= $test;
    }
    function test9580()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test /= $test;
    }
    function test9581()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test -= $test;
    }
    function test9582()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test %= $test;
    }
    function test9583()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test *= $test;
    }
    function test9584()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test += $test;
    }
    function test9585()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test **= $test;
    }
    function test9586()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test <<= $test;
    }
    function test9587()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test >>= $test;
    }
    function test9588()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test & $test;
    }
    function test9589()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test | $test;
    }
    function test9590()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test ^ $test;
    }
    function test9591()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test && $test;
    }
    function test9592()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test || $test;
    }
    function test9593()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test ?? $test;
    }
    function test9594()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test . $test;
    }
    function test9595()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test / $test;
    }
    function test9596()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test == $test;
    }
    function test9597()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test > $test;
    }
    function test9598()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test >= $test;
    }
    function test9599()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test === $test;
    }
    function test9600()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test and $test;
    }
    function test9601()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor ($test or $test);
    }
    function test9602()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor ($test xor $test);
    }
    function test9603()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test - $test;
    }
    function test9604()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test % $test;
    }
    function test9605()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test * $test;
    }
    function test9606()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test != $test;
    }
    function test9607()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test !== $test;
    }
    function test9608()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test + $test;
    }
    function test9609()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test ** $test;
    }
    function test9610()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test << $test;
    }
    function test9611()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test >> $test;
    }
    function test9612()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test < $test;
    }
    function test9613()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test <= $test;
    }
    function test9614()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor $test <=> $test;
    }
    function test9615()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor (array) $test;
    }
    function test9616()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor (bool) $test;
    }
    function test9617()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor (double) $test;
    }
    function test9618()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor (int) $test;
    }
    function test9619()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor (object) $test;
    }
    function test9620()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor (string) $test;
    }
    function test9621()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor 0.0;
    }
    function test9622()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor "{$test}";
    }
    function test9623()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor 0;
    }
    function test9624()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor 'test';
    }
    function test9625()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor __CLASS__;
    }
    function test9626()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor __DIR__;
    }
    function test9627()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor __FILE__;
    }
    function test9628()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor __FUNCTION__;
    }
    function test9629()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor __LINE__;
    }
    function test9630()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor __METHOD__;
    }
    function test9631()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor __NAMESPACE__;
    }
    function test9632()
    {
        $this->assertTrue(0 === 0);
        fn() => $test xor __TRAIT__;
    }
    function test9633()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] - $test;
    }
    function test9634()
    {
        $this->assertTrue(0 === 0);
        fn() => [] - $test;
    }
    function test9635()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test = $test) - $test;
    }
    function test9636()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test =& $test) - $test;
    }
    function test9637()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test - $test;
    }
    function test9638()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test - $test;
    }
    function test9639()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test - $test;
    }
    function test9640()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test - $test;
    }
    function test9641()
    {
        $this->assertTrue(0 === 0);
        fn() => function () {
        } - $test;
    }
    function test9642()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test;
    }
    function test9643()
    {
        $this->assertTrue(0 === 0);
        fn() => self - $test;
    }
    function test9644()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test) - $test;
    }
    function test9645()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test - $test;
    }
    function test9646()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test) - $test;
    }
    function test9647()
    {
        $this->assertTrue(0 === 0);
        fn() => $test() - $test;
    }
    function test9648()
    {
        $this->assertTrue(0 === 0);
        fn() => ( $test) - $test;
    }
    function test9649()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof $test - $test;
    }
    function test9650()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test) - $test;
    }
    function test9651()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test) {
        } - $test;
    }
    function test9652()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}() - $test;
    }
    function test9653()
    {
        $this->assertTrue(0 === 0);
        fn() => new $test() - $test;
    }
    function test9654()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}() - $test;
    }
    function test9655()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test} - $test;
    }
    function test9656()
    {
        $this->assertTrue(0 === 0);
        fn() => $test-- - $test;
    }
    function test9657()
    {
        $this->assertTrue(0 === 0);
        fn() => $test++ - $test;
    }
    function test9658()
    {
        $this->assertTrue(0 === 0);
        fn() => --$test - $test;
    }
    function test9659()
    {
        $this->assertTrue(0 === 0);
        fn() => ++$test - $test;
    }
    function test9660()
    {
        $this->assertTrue(0 === 0);
        fn() => (print $test) - $test;
    }
    function test9661()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} - $test;
    }
    function test9662()
    {
        $this->assertTrue(0 === 0);
        fn() => `` - $test;
    }
    function test9663()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test() - $test;
    }
    function test9664()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} - $test;
    }
    function test9665()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ? $test : $test) - $test;
    }
    function test9666()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test - $test;
    }
    function test9667()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test - $test;
    }
    function test9668()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test - $test;
    }
    function test9669()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} - $test;
    }
    function test9670()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield from $test) - $test;
    }
    function test9671()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test) - $test;
    }
    function test9672()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test &= $test) - $test;
    }
    function test9673()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test |= $test) - $test;
    }
    function test9674()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^= $test) - $test;
    }
    function test9675()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ??= $test) - $test;
    }
    function test9676()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test .= $test) - $test;
    }
    function test9677()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test /= $test) - $test;
    }
    function test9678()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test -= $test) - $test;
    }
    function test9679()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test %= $test) - $test;
    }
    function test9680()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test *= $test) - $test;
    }
    function test9681()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test += $test) - $test;
    }
    function test9682()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test **= $test) - $test;
    }
    function test9683()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <<= $test) - $test;
    }
    function test9684()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >>= $test) - $test;
    }
    function test9685()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test & $test) - $test;
    }
    function test9686()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test | $test) - $test;
    }
    function test9687()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^ $test) - $test;
    }
    function test9688()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test && $test) - $test;
    }
    function test9689()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test || $test) - $test;
    }
    function test9690()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ?? $test) - $test;
    }
    function test9691()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test - $test;
    }
    function test9692()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test - $test;
    }
    function test9693()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test == $test) - $test;
    }
    function test9694()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test > $test) - $test;
    }
    function test9695()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >= $test) - $test;
    }
    function test9696()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test === $test) - $test;
    }
    function test9697()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test and $test) - $test;
    }
    function test9698()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test or $test) - $test;
    }
    function test9699()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test xor $test) - $test;
    }
    function test9700()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test - $test;
    }
    function test9701()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test - $test;
    }
    function test9702()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test - $test;
    }
    function test9703()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test != $test) - $test;
    }
    function test9704()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test !== $test) - $test;
    }
    function test9705()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test - $test;
    }
    function test9706()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test - $test;
    }
    function test9707()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test << $test) - $test;
    }
    function test9708()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >> $test) - $test;
    }
    function test9709()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test < $test) - $test;
    }
    function test9710()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <= $test) - $test;
    }
    function test9711()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <=> $test) - $test;
    }
    function test9712()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test - $test;
    }
    function test9713()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test - $test;
    }
    function test9714()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test - $test;
    }
    function test9715()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test - $test;
    }
    function test9716()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test - $test;
    }
    function test9717()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test - $test;
    }
    function test9718()
    {
        $this->assertTrue(0 === 0);
        fn() => 0.0 - $test;
    }
    function test9719()
    {
        $this->assertTrue(0 === 0);
        fn() => "{$test}" - $test;
    }
    function test9720()
    {
        $this->assertTrue(0 === 0);
        fn() => 0 - $test;
    }
    function test9721()
    {
        $this->assertTrue(0 === 0);
        fn() => 'test' - $test;
    }
    function test9722()
    {
        $this->assertTrue(0 === 0);
        fn() => __CLASS__ - $test;
    }
    function test9723()
    {
        $this->assertTrue(0 === 0);
        fn() => __DIR__ - $test;
    }
    function test9724()
    {
        $this->assertTrue(0 === 0);
        fn() => __FILE__ - $test;
    }
    function test9725()
    {
        $this->assertTrue(0 === 0);
        fn() => __FUNCTION__ - $test;
    }
    function test9726()
    {
        $this->assertTrue(0 === 0);
        fn() => __LINE__ - $test;
    }
    function test9727()
    {
        $this->assertTrue(0 === 0);
        fn() => __METHOD__ - $test;
    }
    function test9728()
    {
        $this->assertTrue(0 === 0);
        fn() => __NAMESPACE__ - $test;
    }
    function test9729()
    {
        $this->assertTrue(0 === 0);
        fn() => __TRAIT__ - $test;
    }
    function test9730()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test[$test];
    }
    function test9731()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - [];
    }
    function test9732()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ($test = $test);
    }
    function test9733()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ($test =& $test);
    }
    function test9734()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ~$test;
    }
    function test9735()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - !$test;
    }
    function test9736()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test::$test;
    }
    function test9737()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - clone $test;
    }
    function test9738()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - function () {
        };
    }
    function test9739()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test;
    }
    function test9740()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - self;
    }
    function test9741()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - empty($test);
    }
    function test9742()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - @$test;
    }
    function test9743()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - eval($test);
    }
    function test9744()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test();
    }
    function test9745()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ( $test);
    }
    function test9746()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test instanceof $test;
    }
    function test9747()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - isset($test);
    }
    function test9748()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - match ($test) {
        };
    }
    function test9749()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test->{$test}();
    }
    function test9750()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - new $test();
    }
    function test9751()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test?->{$test}();
    }
    function test9752()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test?->{$test};
    }
    function test9753()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test--;
    }
    function test9754()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test++;
    }
    function test9755()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - --$test;
    }
    function test9756()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ++$test;
    }
    function test9757()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - (print $test);
    }
    function test9758()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test->{$test};
    }
    function test9759()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ``;
    }
    function test9760()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test::$test();
    }
    function test9761()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test::${$test};
    }
    function test9762()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ($test ? $test : $test);
    }
    function test9763()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - throw $test;
    }
    function test9764()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - -$test;
    }
    function test9765()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - +$test;
    }
    function test9766()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ${$test};
    }
    function test9767()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - (yield from $test);
    }
    function test9768()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - (yield $test => $test);
    }
    function test9769()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ($test &= $test);
    }
    function test9770()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ($test |= $test);
    }
    function test9771()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ($test ^= $test);
    }
    function test9772()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ($test ??= $test);
    }
    function test9773()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ($test .= $test);
    }
    function test9774()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ($test /= $test);
    }
    function test9775()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ($test -= $test);
    }
    function test9776()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ($test %= $test);
    }
    function test9777()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ($test *= $test);
    }
    function test9778()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ($test += $test);
    }
    function test9779()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ($test **= $test);
    }
    function test9780()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ($test <<= $test);
    }
    function test9781()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ($test >>= $test);
    }
    function test9782()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ($test & $test);
    }
    function test9783()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ($test | $test);
    }
    function test9784()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ($test ^ $test);
    }
    function test9785()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ($test && $test);
    }
    function test9786()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ($test || $test);
    }
    function test9787()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ($test ?? $test);
    }
    function test9788()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ($test . $test);
    }
    function test9789()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test / $test;
    }
    function test9790()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ($test == $test);
    }
    function test9791()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ($test > $test);
    }
    function test9792()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ($test >= $test);
    }
    function test9793()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ($test === $test);
    }
    function test9794()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ($test and $test);
    }
    function test9795()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ($test or $test);
    }
    function test9796()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ($test xor $test);
    }
    function test9797()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ($test - $test);
    }
    function test9798()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test % $test;
    }
    function test9799()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test * $test;
    }
    function test9800()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ($test != $test);
    }
    function test9801()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ($test !== $test);
    }
    function test9802()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ($test + $test);
    }
    function test9803()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test ** $test;
    }
    function test9804()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ($test << $test);
    }
    function test9805()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ($test >> $test);
    }
    function test9806()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ($test < $test);
    }
    function test9807()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ($test <= $test);
    }
    function test9808()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - ($test <=> $test);
    }
    function test9809()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - (array) $test;
    }
    function test9810()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - (bool) $test;
    }
    function test9811()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - (double) $test;
    }
    function test9812()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - (int) $test;
    }
    function test9813()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - (object) $test;
    }
    function test9814()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - (string) $test;
    }
    function test9815()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - 0.0;
    }
    function test9816()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - "{$test}";
    }
    function test9817()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - 0;
    }
    function test9818()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - 'test';
    }
    function test9819()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - __CLASS__;
    }
    function test9820()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - __DIR__;
    }
    function test9821()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - __FILE__;
    }
    function test9822()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - __FUNCTION__;
    }
    function test9823()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - __LINE__;
    }
    function test9824()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - __METHOD__;
    }
    function test9825()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - __NAMESPACE__;
    }
    function test9826()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - __TRAIT__;
    }
    function test9827()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] % $test;
    }
    function test9828()
    {
        $this->assertTrue(0 === 0);
        fn() => [] % $test;
    }
    function test9829()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test = $test) % $test;
    }
    function test9830()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test =& $test) % $test;
    }
    function test9831()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test % $test;
    }
    function test9832()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test % $test;
    }
    function test9833()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test % $test;
    }
    function test9834()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test % $test;
    }
    function test9835()
    {
        $this->assertTrue(0 === 0);
        fn() => function () {
        } % $test;
    }
    function test9836()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test;
    }
    function test9837()
    {
        $this->assertTrue(0 === 0);
        fn() => self % $test;
    }
    function test9838()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test) % $test;
    }
    function test9839()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test % $test;
    }
    function test9840()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test) % $test;
    }
    function test9841()
    {
        $this->assertTrue(0 === 0);
        fn() => $test() % $test;
    }
    function test9842()
    {
        $this->assertTrue(0 === 0);
        fn() => ( $test) % $test;
    }
    function test9843()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof $test % $test;
    }
    function test9844()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test) % $test;
    }
    function test9845()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test) {
        } % $test;
    }
    function test9846()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}() % $test;
    }
    function test9847()
    {
        $this->assertTrue(0 === 0);
        fn() => new $test() % $test;
    }
    function test9848()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}() % $test;
    }
    function test9849()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test} % $test;
    }
    function test9850()
    {
        $this->assertTrue(0 === 0);
        fn() => $test-- % $test;
    }
    function test9851()
    {
        $this->assertTrue(0 === 0);
        fn() => $test++ % $test;
    }
    function test9852()
    {
        $this->assertTrue(0 === 0);
        fn() => --$test % $test;
    }
    function test9853()
    {
        $this->assertTrue(0 === 0);
        fn() => ++$test % $test;
    }
    function test9854()
    {
        $this->assertTrue(0 === 0);
        fn() => (print $test) % $test;
    }
    function test9855()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} % $test;
    }
    function test9856()
    {
        $this->assertTrue(0 === 0);
        fn() => `` % $test;
    }
    function test9857()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test() % $test;
    }
    function test9858()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} % $test;
    }
    function test9859()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ? $test : $test) % $test;
    }
    function test9860()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test % $test;
    }
    function test9861()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test % $test;
    }
    function test9862()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test % $test;
    }
    function test9863()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} % $test;
    }
    function test9864()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield from $test) % $test;
    }
    function test9865()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test) % $test;
    }
    function test9866()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test &= $test) % $test;
    }
    function test9867()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test |= $test) % $test;
    }
    function test9868()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^= $test) % $test;
    }
    function test9869()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ??= $test) % $test;
    }
    function test9870()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test .= $test) % $test;
    }
    function test9871()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test /= $test) % $test;
    }
    function test9872()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test -= $test) % $test;
    }
    function test9873()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test %= $test) % $test;
    }
    function test9874()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test *= $test) % $test;
    }
    function test9875()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test += $test) % $test;
    }
    function test9876()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test **= $test) % $test;
    }
    function test9877()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <<= $test) % $test;
    }
    function test9878()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >>= $test) % $test;
    }
    function test9879()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test & $test) % $test;
    }
    function test9880()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test | $test) % $test;
    }
    function test9881()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^ $test) % $test;
    }
    function test9882()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test && $test) % $test;
    }
    function test9883()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test || $test) % $test;
    }
    function test9884()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ?? $test) % $test;
    }
    function test9885()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test . $test) % $test;
    }
    function test9886()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test % $test;
    }
    function test9887()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test == $test) % $test;
    }
    function test9888()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test > $test) % $test;
    }
    function test9889()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >= $test) % $test;
    }
    function test9890()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test === $test) % $test;
    }
    function test9891()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test and $test) % $test;
    }
    function test9892()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test or $test) % $test;
    }
    function test9893()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test xor $test) % $test;
    }
    function test9894()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test - $test) % $test;
    }
    function test9895()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test % $test;
    }
    function test9896()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test % $test;
    }
    function test9897()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test != $test) % $test;
    }
    function test9898()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test !== $test) % $test;
    }
    function test9899()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test + $test) % $test;
    }
    function test9900()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test % $test;
    }
    function test9901()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test << $test) % $test;
    }
    function test9902()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >> $test) % $test;
    }
    function test9903()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test < $test) % $test;
    }
    function test9904()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <= $test) % $test;
    }
    function test9905()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <=> $test) % $test;
    }
    function test9906()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test % $test;
    }
    function test9907()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test % $test;
    }
    function test9908()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test % $test;
    }
    function test9909()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test % $test;
    }
    function test9910()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test % $test;
    }
    function test9911()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test % $test;
    }
    function test9912()
    {
        $this->assertTrue(0 === 0);
        fn() => 0.0 % $test;
    }
    function test9913()
    {
        $this->assertTrue(0 === 0);
        fn() => "{$test}" % $test;
    }
    function test9914()
    {
        $this->assertTrue(0 === 0);
        fn() => 0 % $test;
    }
    function test9915()
    {
        $this->assertTrue(0 === 0);
        fn() => 'test' % $test;
    }
    function test9916()
    {
        $this->assertTrue(0 === 0);
        fn() => __CLASS__ % $test;
    }
    function test9917()
    {
        $this->assertTrue(0 === 0);
        fn() => __DIR__ % $test;
    }
    function test9918()
    {
        $this->assertTrue(0 === 0);
        fn() => __FILE__ % $test;
    }
    function test9919()
    {
        $this->assertTrue(0 === 0);
        fn() => __FUNCTION__ % $test;
    }
    function test9920()
    {
        $this->assertTrue(0 === 0);
        fn() => __LINE__ % $test;
    }
    function test9921()
    {
        $this->assertTrue(0 === 0);
        fn() => __METHOD__ % $test;
    }
    function test9922()
    {
        $this->assertTrue(0 === 0);
        fn() => __NAMESPACE__ % $test;
    }
    function test9923()
    {
        $this->assertTrue(0 === 0);
        fn() => __TRAIT__ % $test;
    }
    function test9924()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test[$test];
    }
    function test9925()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % [];
    }
    function test9926()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test = $test);
    }
    function test9927()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test =& $test);
    }
    function test9928()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ~$test;
    }
    function test9929()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % !$test;
    }
    function test9930()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test::$test;
    }
    function test9931()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % clone $test;
    }
    function test9932()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % function () {
        };
    }
    function test9933()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test;
    }
    function test9934()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % self;
    }
    function test9935()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % empty($test);
    }
    function test9936()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % @$test;
    }
    function test9937()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % eval($test);
    }
    function test9938()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test();
    }
    function test9939()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ( $test);
    }
    function test9940()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test instanceof $test;
    }
    function test9941()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % isset($test);
    }
    function test9942()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % match ($test) {
        };
    }
    function test9943()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test->{$test}();
    }
    function test9944()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % new $test();
    }
    function test9945()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test?->{$test}();
    }
    function test9946()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test?->{$test};
    }
    function test9947()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test--;
    }
    function test9948()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test++;
    }
    function test9949()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % --$test;
    }
    function test9950()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ++$test;
    }
    function test9951()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % (print $test);
    }
    function test9952()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test->{$test};
    }
    function test9953()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ``;
    }
    function test9954()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test::$test();
    }
    function test9955()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test::${$test};
    }
    function test9956()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test ? $test : $test);
    }
    function test9957()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % throw $test;
    }
    function test9958()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % -$test;
    }
    function test9959()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % +$test;
    }
    function test9960()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ${$test};
    }
    function test9961()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % (yield from $test);
    }
    function test9962()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % (yield $test => $test);
    }
    function test9963()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test &= $test);
    }
    function test9964()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test |= $test);
    }
    function test9965()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test ^= $test);
    }
    function test9966()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test ??= $test);
    }
    function test9967()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test .= $test);
    }
    function test9968()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test /= $test);
    }
    function test9969()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test -= $test);
    }
    function test9970()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test %= $test);
    }
    function test9971()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test *= $test);
    }
    function test9972()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test += $test);
    }
    function test9973()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test **= $test);
    }
    function test9974()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test <<= $test);
    }
    function test9975()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test >>= $test);
    }
    function test9976()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test & $test);
    }
    function test9977()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test | $test);
    }
    function test9978()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test ^ $test);
    }
    function test9979()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test && $test);
    }
    function test9980()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test || $test);
    }
    function test9981()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test ?? $test);
    }
    function test9982()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test . $test);
    }
    function test9983()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test / $test);
    }
    function test9984()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test == $test);
    }
    function test9985()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test > $test);
    }
    function test9986()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test >= $test);
    }
    function test9987()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test === $test);
    }
    function test9988()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test and $test);
    }
    function test9989()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test or $test);
    }
    function test9990()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test xor $test);
    }
    function test9991()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test - $test);
    }
    function test9992()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test % $test);
    }
    function test9993()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test * $test);
    }
    function test9994()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test != $test);
    }
    function test9995()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test !== $test);
    }
    function test9996()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test + $test);
    }
    function test9997()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test ** $test;
    }
    function test9998()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test << $test);
    }
    function test9999()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test >> $test);
    }
    function test10000()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test < $test);
    }
    function test10001()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test <= $test);
    }
    function test10002()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % ($test <=> $test);
    }
    function test10003()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % (array) $test;
    }
    function test10004()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % (bool) $test;
    }
    function test10005()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % (double) $test;
    }
    function test10006()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % (int) $test;
    }
    function test10007()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % (object) $test;
    }
    function test10008()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % (string) $test;
    }
    function test10009()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % 0.0;
    }
    function test10010()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % "{$test}";
    }
    function test10011()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % 0;
    }
    function test10012()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % 'test';
    }
    function test10013()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % __CLASS__;
    }
    function test10014()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % __DIR__;
    }
    function test10015()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % __FILE__;
    }
    function test10016()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % __FUNCTION__;
    }
    function test10017()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % __LINE__;
    }
    function test10018()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % __METHOD__;
    }
    function test10019()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % __NAMESPACE__;
    }
    function test10020()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % __TRAIT__;
    }
    function test10021()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] * $test;
    }
    function test10022()
    {
        $this->assertTrue(0 === 0);
        fn() => [] * $test;
    }
    function test10023()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test = $test) * $test;
    }
    function test10024()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test =& $test) * $test;
    }
    function test10025()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test * $test;
    }
    function test10026()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test * $test;
    }
    function test10027()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test * $test;
    }
    function test10028()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test * $test;
    }
    function test10029()
    {
        $this->assertTrue(0 === 0);
        fn() => function () {
        } * $test;
    }
    function test10030()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test;
    }
    function test10031()
    {
        $this->assertTrue(0 === 0);
        fn() => self * $test;
    }
    function test10032()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test) * $test;
    }
    function test10033()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test * $test;
    }
    function test10034()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test) * $test;
    }
    function test10035()
    {
        $this->assertTrue(0 === 0);
        fn() => $test() * $test;
    }
    function test10036()
    {
        $this->assertTrue(0 === 0);
        fn() => ( $test) * $test;
    }
    function test10037()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof $test * $test;
    }
    function test10038()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test) * $test;
    }
    function test10039()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test) {
        } * $test;
    }
    function test10040()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}() * $test;
    }
    function test10041()
    {
        $this->assertTrue(0 === 0);
        fn() => new $test() * $test;
    }
    function test10042()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}() * $test;
    }
    function test10043()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test} * $test;
    }
    function test10044()
    {
        $this->assertTrue(0 === 0);
        fn() => $test-- * $test;
    }
    function test10045()
    {
        $this->assertTrue(0 === 0);
        fn() => $test++ * $test;
    }
    function test10046()
    {
        $this->assertTrue(0 === 0);
        fn() => --$test * $test;
    }
    function test10047()
    {
        $this->assertTrue(0 === 0);
        fn() => ++$test * $test;
    }
    function test10048()
    {
        $this->assertTrue(0 === 0);
        fn() => (print $test) * $test;
    }
    function test10049()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} * $test;
    }
    function test10050()
    {
        $this->assertTrue(0 === 0);
        fn() => `` * $test;
    }
    function test10051()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test() * $test;
    }
    function test10052()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} * $test;
    }
    function test10053()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ? $test : $test) * $test;
    }
    function test10054()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test * $test;
    }
    function test10055()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test * $test;
    }
    function test10056()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test * $test;
    }
    function test10057()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} * $test;
    }
    function test10058()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield from $test) * $test;
    }
    function test10059()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test) * $test;
    }
    function test10060()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test &= $test) * $test;
    }
    function test10061()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test |= $test) * $test;
    }
    function test10062()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^= $test) * $test;
    }
    function test10063()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ??= $test) * $test;
    }
    function test10064()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test .= $test) * $test;
    }
    function test10065()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test /= $test) * $test;
    }
    function test10066()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test -= $test) * $test;
    }
    function test10067()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test %= $test) * $test;
    }
    function test10068()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test *= $test) * $test;
    }
    function test10069()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test += $test) * $test;
    }
    function test10070()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test **= $test) * $test;
    }
    function test10071()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <<= $test) * $test;
    }
    function test10072()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >>= $test) * $test;
    }
    function test10073()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test & $test) * $test;
    }
    function test10074()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test | $test) * $test;
    }
    function test10075()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^ $test) * $test;
    }
    function test10076()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test && $test) * $test;
    }
    function test10077()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test || $test) * $test;
    }
    function test10078()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ?? $test) * $test;
    }
    function test10079()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test . $test) * $test;
    }
    function test10080()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test * $test;
    }
    function test10081()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test == $test) * $test;
    }
    function test10082()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test > $test) * $test;
    }
    function test10083()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >= $test) * $test;
    }
    function test10084()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test === $test) * $test;
    }
    function test10085()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test and $test) * $test;
    }
    function test10086()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test or $test) * $test;
    }
    function test10087()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test xor $test) * $test;
    }
    function test10088()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test - $test) * $test;
    }
    function test10089()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test * $test;
    }
    function test10090()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test * $test;
    }
    function test10091()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test != $test) * $test;
    }
    function test10092()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test !== $test) * $test;
    }
    function test10093()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test + $test) * $test;
    }
    function test10094()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test * $test;
    }
    function test10095()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test << $test) * $test;
    }
    function test10096()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >> $test) * $test;
    }
    function test10097()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test < $test) * $test;
    }
    function test10098()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <= $test) * $test;
    }
    function test10099()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <=> $test) * $test;
    }
    function test10100()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test * $test;
    }
    function test10101()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test * $test;
    }
    function test10102()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test * $test;
    }
    function test10103()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test * $test;
    }
    function test10104()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test * $test;
    }
    function test10105()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test * $test;
    }
    function test10106()
    {
        $this->assertTrue(0 === 0);
        fn() => 0.0 * $test;
    }
    function test10107()
    {
        $this->assertTrue(0 === 0);
        fn() => "{$test}" * $test;
    }
    function test10108()
    {
        $this->assertTrue(0 === 0);
        fn() => 0 * $test;
    }
    function test10109()
    {
        $this->assertTrue(0 === 0);
        fn() => 'test' * $test;
    }
    function test10110()
    {
        $this->assertTrue(0 === 0);
        fn() => __CLASS__ * $test;
    }
    function test10111()
    {
        $this->assertTrue(0 === 0);
        fn() => __DIR__ * $test;
    }
    function test10112()
    {
        $this->assertTrue(0 === 0);
        fn() => __FILE__ * $test;
    }
    function test10113()
    {
        $this->assertTrue(0 === 0);
        fn() => __FUNCTION__ * $test;
    }
    function test10114()
    {
        $this->assertTrue(0 === 0);
        fn() => __LINE__ * $test;
    }
    function test10115()
    {
        $this->assertTrue(0 === 0);
        fn() => __METHOD__ * $test;
    }
    function test10116()
    {
        $this->assertTrue(0 === 0);
        fn() => __NAMESPACE__ * $test;
    }
    function test10117()
    {
        $this->assertTrue(0 === 0);
        fn() => __TRAIT__ * $test;
    }
    function test10118()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test[$test];
    }
    function test10119()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * [];
    }
    function test10120()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test = $test);
    }
    function test10121()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test =& $test);
    }
    function test10122()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ~$test;
    }
    function test10123()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * !$test;
    }
    function test10124()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test::$test;
    }
    function test10125()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * clone $test;
    }
    function test10126()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * function () {
        };
    }
    function test10127()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test;
    }
    function test10128()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * self;
    }
    function test10129()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * empty($test);
    }
    function test10130()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * @$test;
    }
    function test10131()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * eval($test);
    }
    function test10132()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test();
    }
    function test10133()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ( $test);
    }
    function test10134()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test instanceof $test;
    }
    function test10135()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * isset($test);
    }
    function test10136()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * match ($test) {
        };
    }
    function test10137()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test->{$test}();
    }
    function test10138()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * new $test();
    }
    function test10139()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test?->{$test}();
    }
    function test10140()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test?->{$test};
    }
    function test10141()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test--;
    }
    function test10142()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test++;
    }
    function test10143()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * --$test;
    }
    function test10144()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ++$test;
    }
    function test10145()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * (print $test);
    }
    function test10146()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test->{$test};
    }
    function test10147()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ``;
    }
    function test10148()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test::$test();
    }
    function test10149()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test::${$test};
    }
    function test10150()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test ? $test : $test);
    }
    function test10151()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * throw $test;
    }
    function test10152()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * -$test;
    }
    function test10153()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * +$test;
    }
    function test10154()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ${$test};
    }
    function test10155()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * (yield from $test);
    }
    function test10156()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * (yield $test => $test);
    }
    function test10157()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test &= $test);
    }
    function test10158()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test |= $test);
    }
    function test10159()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test ^= $test);
    }
    function test10160()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test ??= $test);
    }
    function test10161()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test .= $test);
    }
    function test10162()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test /= $test);
    }
    function test10163()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test -= $test);
    }
    function test10164()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test %= $test);
    }
    function test10165()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test *= $test);
    }
    function test10166()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test += $test);
    }
    function test10167()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test **= $test);
    }
    function test10168()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test <<= $test);
    }
    function test10169()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test >>= $test);
    }
    function test10170()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test & $test);
    }
    function test10171()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test | $test);
    }
    function test10172()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test ^ $test);
    }
    function test10173()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test && $test);
    }
    function test10174()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test || $test);
    }
    function test10175()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test ?? $test);
    }
    function test10176()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test . $test);
    }
    function test10177()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test / $test);
    }
    function test10178()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test == $test);
    }
    function test10179()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test > $test);
    }
    function test10180()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test >= $test);
    }
    function test10181()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test === $test);
    }
    function test10182()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test and $test);
    }
    function test10183()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test or $test);
    }
    function test10184()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test xor $test);
    }
    function test10185()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test - $test);
    }
    function test10186()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test % $test);
    }
    function test10187()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test * $test);
    }
    function test10188()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test != $test);
    }
    function test10189()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test !== $test);
    }
    function test10190()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test + $test);
    }
    function test10191()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test ** $test;
    }
    function test10192()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test << $test);
    }
    function test10193()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test >> $test);
    }
    function test10194()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test < $test);
    }
    function test10195()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test <= $test);
    }
    function test10196()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * ($test <=> $test);
    }
    function test10197()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * (array) $test;
    }
    function test10198()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * (bool) $test;
    }
    function test10199()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * (double) $test;
    }
    function test10200()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * (int) $test;
    }
    function test10201()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * (object) $test;
    }
    function test10202()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * (string) $test;
    }
    function test10203()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * 0.0;
    }
    function test10204()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * "{$test}";
    }
    function test10205()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * 0;
    }
    function test10206()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * 'test';
    }
    function test10207()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * __CLASS__;
    }
    function test10208()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * __DIR__;
    }
    function test10209()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * __FILE__;
    }
    function test10210()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * __FUNCTION__;
    }
    function test10211()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * __LINE__;
    }
    function test10212()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * __METHOD__;
    }
    function test10213()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * __NAMESPACE__;
    }
    function test10214()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * __TRAIT__;
    }
    function test10215()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] != $test;
    }
    function test10216()
    {
        $this->assertTrue(0 === 0);
        fn() => [] != $test;
    }
    function test10217()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test = $test) != $test;
    }
    function test10218()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test =& $test) != $test;
    }
    function test10219()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test != $test;
    }
    function test10220()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test != $test;
    }
    function test10221()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test != $test;
    }
    function test10222()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test != $test;
    }
    function test10223()
    {
        $this->assertTrue(0 === 0);
        fn() => function () {
        } != $test;
    }
    function test10224()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test;
    }
    function test10225()
    {
        $this->assertTrue(0 === 0);
        fn() => self != $test;
    }
    function test10226()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test) != $test;
    }
    function test10227()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test != $test;
    }
    function test10228()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test) != $test;
    }
    function test10229()
    {
        $this->assertTrue(0 === 0);
        fn() => $test() != $test;
    }
    function test10230()
    {
        $this->assertTrue(0 === 0);
        fn() => ( $test) != $test;
    }
    function test10231()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof $test != $test;
    }
    function test10232()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test) != $test;
    }
    function test10233()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test) {
        } != $test;
    }
    function test10234()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}() != $test;
    }
    function test10235()
    {
        $this->assertTrue(0 === 0);
        fn() => new $test() != $test;
    }
    function test10236()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}() != $test;
    }
    function test10237()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test} != $test;
    }
    function test10238()
    {
        $this->assertTrue(0 === 0);
        fn() => $test-- != $test;
    }
    function test10239()
    {
        $this->assertTrue(0 === 0);
        fn() => $test++ != $test;
    }
    function test10240()
    {
        $this->assertTrue(0 === 0);
        fn() => --$test != $test;
    }
    function test10241()
    {
        $this->assertTrue(0 === 0);
        fn() => ++$test != $test;
    }
    function test10242()
    {
        $this->assertTrue(0 === 0);
        fn() => (print $test) != $test;
    }
    function test10243()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} != $test;
    }
    function test10244()
    {
        $this->assertTrue(0 === 0);
        fn() => `` != $test;
    }
    function test10245()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test() != $test;
    }
    function test10246()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} != $test;
    }
    function test10247()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ? $test : $test) != $test;
    }
    function test10248()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test != $test;
    }
    function test10249()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test != $test;
    }
    function test10250()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test != $test;
    }
    function test10251()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} != $test;
    }
    function test10252()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield from $test) != $test;
    }
    function test10253()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test) != $test;
    }
    function test10254()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test &= $test) != $test;
    }
    function test10255()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test |= $test) != $test;
    }
    function test10256()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^= $test) != $test;
    }
    function test10257()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ??= $test) != $test;
    }
    function test10258()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test .= $test) != $test;
    }
    function test10259()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test /= $test) != $test;
    }
    function test10260()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test -= $test) != $test;
    }
    function test10261()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test %= $test) != $test;
    }
    function test10262()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test *= $test) != $test;
    }
    function test10263()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test += $test) != $test;
    }
    function test10264()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test **= $test) != $test;
    }
    function test10265()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <<= $test) != $test;
    }
    function test10266()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >>= $test) != $test;
    }
    function test10267()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test & $test) != $test;
    }
    function test10268()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test | $test) != $test;
    }
    function test10269()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^ $test) != $test;
    }
    function test10270()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test && $test) != $test;
    }
    function test10271()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test || $test) != $test;
    }
    function test10272()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ?? $test) != $test;
    }
    function test10273()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test != $test;
    }
    function test10274()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test != $test;
    }
    function test10275()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test == $test) != $test;
    }
    function test10276()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test != $test;
    }
    function test10277()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test != $test;
    }
    function test10278()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test === $test) != $test;
    }
    function test10279()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test and $test) != $test;
    }
    function test10280()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test or $test) != $test;
    }
    function test10281()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test xor $test) != $test;
    }
    function test10282()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test != $test;
    }
    function test10283()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test != $test;
    }
    function test10284()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test != $test;
    }
    function test10285()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test != $test) != $test;
    }
    function test10286()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test !== $test) != $test;
    }
    function test10287()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test != $test;
    }
    function test10288()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test != $test;
    }
    function test10289()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test != $test;
    }
    function test10290()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test != $test;
    }
    function test10291()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test != $test;
    }
    function test10292()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test != $test;
    }
    function test10293()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <=> $test) != $test;
    }
    function test10294()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test != $test;
    }
    function test10295()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test != $test;
    }
    function test10296()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test != $test;
    }
    function test10297()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test != $test;
    }
    function test10298()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test != $test;
    }
    function test10299()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test != $test;
    }
    function test10300()
    {
        $this->assertTrue(0 === 0);
        fn() => 0.0 != $test;
    }
    function test10301()
    {
        $this->assertTrue(0 === 0);
        fn() => "{$test}" != $test;
    }
    function test10302()
    {
        $this->assertTrue(0 === 0);
        fn() => 0 != $test;
    }
    function test10303()
    {
        $this->assertTrue(0 === 0);
        fn() => 'test' != $test;
    }
    function test10304()
    {
        $this->assertTrue(0 === 0);
        fn() => __CLASS__ != $test;
    }
    function test10305()
    {
        $this->assertTrue(0 === 0);
        fn() => __DIR__ != $test;
    }
    function test10306()
    {
        $this->assertTrue(0 === 0);
        fn() => __FILE__ != $test;
    }
    function test10307()
    {
        $this->assertTrue(0 === 0);
        fn() => __FUNCTION__ != $test;
    }
    function test10308()
    {
        $this->assertTrue(0 === 0);
        fn() => __LINE__ != $test;
    }
    function test10309()
    {
        $this->assertTrue(0 === 0);
        fn() => __METHOD__ != $test;
    }
    function test10310()
    {
        $this->assertTrue(0 === 0);
        fn() => __NAMESPACE__ != $test;
    }
    function test10311()
    {
        $this->assertTrue(0 === 0);
        fn() => __TRAIT__ != $test;
    }
    function test10312()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test[$test];
    }
    function test10313()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != [];
    }
    function test10314()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != ($test = $test);
    }
    function test10315()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != ($test =& $test);
    }
    function test10316()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != ~$test;
    }
    function test10317()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != !$test;
    }
    function test10318()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test::$test;
    }
    function test10319()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != clone $test;
    }
    function test10320()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != function () {
        };
    }
    function test10321()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test;
    }
    function test10322()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != self;
    }
    function test10323()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != empty($test);
    }
    function test10324()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != @$test;
    }
    function test10325()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != eval($test);
    }
    function test10326()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test();
    }
    function test10327()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != ( $test);
    }
    function test10328()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test instanceof $test;
    }
    function test10329()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != isset($test);
    }
    function test10330()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != match ($test) {
        };
    }
    function test10331()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test->{$test}();
    }
    function test10332()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != new $test();
    }
    function test10333()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test?->{$test}();
    }
    function test10334()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test?->{$test};
    }
    function test10335()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test--;
    }
    function test10336()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test++;
    }
    function test10337()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != --$test;
    }
    function test10338()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != ++$test;
    }
    function test10339()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != (print $test);
    }
    function test10340()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test->{$test};
    }
    function test10341()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != ``;
    }
    function test10342()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test::$test();
    }
    function test10343()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test::${$test};
    }
    function test10344()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != ($test ? $test : $test);
    }
    function test10345()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != throw $test;
    }
    function test10346()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != -$test;
    }
    function test10347()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != +$test;
    }
    function test10348()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != ${$test};
    }
    function test10349()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != (yield from $test);
    }
    function test10350()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != (yield $test => $test);
    }
    function test10351()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != ($test &= $test);
    }
    function test10352()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != ($test |= $test);
    }
    function test10353()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != ($test ^= $test);
    }
    function test10354()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != ($test ??= $test);
    }
    function test10355()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != ($test .= $test);
    }
    function test10356()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != ($test /= $test);
    }
    function test10357()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != ($test -= $test);
    }
    function test10358()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != ($test %= $test);
    }
    function test10359()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != ($test *= $test);
    }
    function test10360()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != ($test += $test);
    }
    function test10361()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != ($test **= $test);
    }
    function test10362()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != ($test <<= $test);
    }
    function test10363()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != ($test >>= $test);
    }
    function test10364()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != ($test & $test);
    }
    function test10365()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != ($test | $test);
    }
    function test10366()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != ($test ^ $test);
    }
    function test10367()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != ($test && $test);
    }
    function test10368()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != ($test || $test);
    }
    function test10369()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != ($test ?? $test);
    }
    function test10370()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test . $test;
    }
    function test10371()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test / $test;
    }
    function test10372()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != ($test == $test);
    }
    function test10373()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test > $test;
    }
    function test10374()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test >= $test;
    }
    function test10375()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != ($test === $test);
    }
    function test10376()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != ($test and $test);
    }
    function test10377()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != ($test or $test);
    }
    function test10378()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != ($test xor $test);
    }
    function test10379()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test - $test;
    }
    function test10380()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test % $test;
    }
    function test10381()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test * $test;
    }
    function test10382()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != ($test != $test);
    }
    function test10383()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != ($test !== $test);
    }
    function test10384()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test + $test;
    }
    function test10385()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test ** $test;
    }
    function test10386()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test << $test;
    }
    function test10387()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test >> $test;
    }
    function test10388()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test < $test;
    }
    function test10389()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != $test <= $test;
    }
    function test10390()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != ($test <=> $test);
    }
    function test10391()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != (array) $test;
    }
    function test10392()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != (bool) $test;
    }
    function test10393()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != (double) $test;
    }
    function test10394()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != (int) $test;
    }
    function test10395()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != (object) $test;
    }
    function test10396()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != (string) $test;
    }
    function test10397()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != 0.0;
    }
    function test10398()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != "{$test}";
    }
    function test10399()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != 0;
    }
    function test10400()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != 'test';
    }
    function test10401()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != __CLASS__;
    }
    function test10402()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != __DIR__;
    }
    function test10403()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != __FILE__;
    }
    function test10404()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != __FUNCTION__;
    }
    function test10405()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != __LINE__;
    }
    function test10406()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != __METHOD__;
    }
    function test10407()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != __NAMESPACE__;
    }
    function test10408()
    {
        $this->assertTrue(0 === 0);
        fn() => $test != __TRAIT__;
    }
    function test10409()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] !== $test;
    }
    function test10410()
    {
        $this->assertTrue(0 === 0);
        fn() => [] !== $test;
    }
    function test10411()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test = $test) !== $test;
    }
    function test10412()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test =& $test) !== $test;
    }
    function test10413()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test !== $test;
    }
    function test10414()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test !== $test;
    }
    function test10415()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test !== $test;
    }
    function test10416()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test !== $test;
    }
    function test10417()
    {
        $this->assertTrue(0 === 0);
        fn() => function () {
        } !== $test;
    }
    function test10418()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test;
    }
    function test10419()
    {
        $this->assertTrue(0 === 0);
        fn() => self !== $test;
    }
    function test10420()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test) !== $test;
    }
    function test10421()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test !== $test;
    }
    function test10422()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test) !== $test;
    }
    function test10423()
    {
        $this->assertTrue(0 === 0);
        fn() => $test() !== $test;
    }
    function test10424()
    {
        $this->assertTrue(0 === 0);
        fn() => ( $test) !== $test;
    }
    function test10425()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof $test !== $test;
    }
    function test10426()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test) !== $test;
    }
    function test10427()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test) {
        } !== $test;
    }
    function test10428()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}() !== $test;
    }
    function test10429()
    {
        $this->assertTrue(0 === 0);
        fn() => new $test() !== $test;
    }
    function test10430()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}() !== $test;
    }
    function test10431()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test} !== $test;
    }
    function test10432()
    {
        $this->assertTrue(0 === 0);
        fn() => $test-- !== $test;
    }
    function test10433()
    {
        $this->assertTrue(0 === 0);
        fn() => $test++ !== $test;
    }
    function test10434()
    {
        $this->assertTrue(0 === 0);
        fn() => --$test !== $test;
    }
    function test10435()
    {
        $this->assertTrue(0 === 0);
        fn() => ++$test !== $test;
    }
    function test10436()
    {
        $this->assertTrue(0 === 0);
        fn() => (print $test) !== $test;
    }
    function test10437()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} !== $test;
    }
    function test10438()
    {
        $this->assertTrue(0 === 0);
        fn() => `` !== $test;
    }
    function test10439()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test() !== $test;
    }
    function test10440()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} !== $test;
    }
    function test10441()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ? $test : $test) !== $test;
    }
    function test10442()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test !== $test;
    }
    function test10443()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test !== $test;
    }
    function test10444()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test !== $test;
    }
    function test10445()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} !== $test;
    }
    function test10446()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield from $test) !== $test;
    }
    function test10447()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test) !== $test;
    }
    function test10448()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test &= $test) !== $test;
    }
    function test10449()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test |= $test) !== $test;
    }
    function test10450()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^= $test) !== $test;
    }
    function test10451()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ??= $test) !== $test;
    }
    function test10452()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test .= $test) !== $test;
    }
    function test10453()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test /= $test) !== $test;
    }
    function test10454()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test -= $test) !== $test;
    }
    function test10455()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test %= $test) !== $test;
    }
    function test10456()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test *= $test) !== $test;
    }
    function test10457()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test += $test) !== $test;
    }
    function test10458()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test **= $test) !== $test;
    }
    function test10459()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <<= $test) !== $test;
    }
    function test10460()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >>= $test) !== $test;
    }
    function test10461()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test & $test) !== $test;
    }
    function test10462()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test | $test) !== $test;
    }
    function test10463()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^ $test) !== $test;
    }
    function test10464()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test && $test) !== $test;
    }
    function test10465()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test || $test) !== $test;
    }
    function test10466()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ?? $test) !== $test;
    }
    function test10467()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test !== $test;
    }
    function test10468()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test !== $test;
    }
    function test10469()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test == $test) !== $test;
    }
    function test10470()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test !== $test;
    }
    function test10471()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test !== $test;
    }
    function test10472()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test === $test) !== $test;
    }
    function test10473()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test and $test) !== $test;
    }
    function test10474()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test or $test) !== $test;
    }
    function test10475()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test xor $test) !== $test;
    }
    function test10476()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test !== $test;
    }
    function test10477()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test !== $test;
    }
    function test10478()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test !== $test;
    }
    function test10479()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test != $test) !== $test;
    }
    function test10480()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test !== $test) !== $test;
    }
    function test10481()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test !== $test;
    }
    function test10482()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test !== $test;
    }
    function test10483()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test !== $test;
    }
    function test10484()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test !== $test;
    }
    function test10485()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test !== $test;
    }
    function test10486()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test !== $test;
    }
    function test10487()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <=> $test) !== $test;
    }
    function test10488()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test !== $test;
    }
    function test10489()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test !== $test;
    }
    function test10490()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test !== $test;
    }
    function test10491()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test !== $test;
    }
    function test10492()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test !== $test;
    }
    function test10493()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test !== $test;
    }
    function test10494()
    {
        $this->assertTrue(0 === 0);
        fn() => 0.0 !== $test;
    }
    function test10495()
    {
        $this->assertTrue(0 === 0);
        fn() => "{$test}" !== $test;
    }
    function test10496()
    {
        $this->assertTrue(0 === 0);
        fn() => 0 !== $test;
    }
    function test10497()
    {
        $this->assertTrue(0 === 0);
        fn() => 'test' !== $test;
    }
    function test10498()
    {
        $this->assertTrue(0 === 0);
        fn() => __CLASS__ !== $test;
    }
    function test10499()
    {
        $this->assertTrue(0 === 0);
        fn() => __DIR__ !== $test;
    }
    function test10500()
    {
        $this->assertTrue(0 === 0);
        fn() => __FILE__ !== $test;
    }
    function test10501()
    {
        $this->assertTrue(0 === 0);
        fn() => __FUNCTION__ !== $test;
    }
    function test10502()
    {
        $this->assertTrue(0 === 0);
        fn() => __LINE__ !== $test;
    }
    function test10503()
    {
        $this->assertTrue(0 === 0);
        fn() => __METHOD__ !== $test;
    }
    function test10504()
    {
        $this->assertTrue(0 === 0);
        fn() => __NAMESPACE__ !== $test;
    }
    function test10505()
    {
        $this->assertTrue(0 === 0);
        fn() => __TRAIT__ !== $test;
    }
    function test10506()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test[$test];
    }
    function test10507()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== [];
    }
    function test10508()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== ($test = $test);
    }
    function test10509()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== ($test =& $test);
    }
    function test10510()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== ~$test;
    }
    function test10511()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== !$test;
    }
    function test10512()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test::$test;
    }
    function test10513()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== clone $test;
    }
    function test10514()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== function () {
        };
    }
    function test10515()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test;
    }
    function test10516()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== self;
    }
    function test10517()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== empty($test);
    }
    function test10518()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== @$test;
    }
    function test10519()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== eval($test);
    }
    function test10520()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test();
    }
    function test10521()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== ( $test);
    }
    function test10522()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test instanceof $test;
    }
    function test10523()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== isset($test);
    }
    function test10524()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== match ($test) {
        };
    }
    function test10525()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test->{$test}();
    }
    function test10526()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== new $test();
    }
    function test10527()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test?->{$test}();
    }
    function test10528()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test?->{$test};
    }
    function test10529()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test--;
    }
    function test10530()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test++;
    }
    function test10531()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== --$test;
    }
    function test10532()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== ++$test;
    }
    function test10533()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== (print $test);
    }
    function test10534()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test->{$test};
    }
    function test10535()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== ``;
    }
    function test10536()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test::$test();
    }
    function test10537()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test::${$test};
    }
    function test10538()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== ($test ? $test : $test);
    }
    function test10539()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== throw $test;
    }
    function test10540()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== -$test;
    }
    function test10541()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== +$test;
    }
    function test10542()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== ${$test};
    }
    function test10543()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== (yield from $test);
    }
    function test10544()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== (yield $test => $test);
    }
    function test10545()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== ($test &= $test);
    }
    function test10546()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== ($test |= $test);
    }
    function test10547()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== ($test ^= $test);
    }
    function test10548()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== ($test ??= $test);
    }
    function test10549()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== ($test .= $test);
    }
    function test10550()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== ($test /= $test);
    }
    function test10551()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== ($test -= $test);
    }
    function test10552()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== ($test %= $test);
    }
    function test10553()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== ($test *= $test);
    }
    function test10554()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== ($test += $test);
    }
    function test10555()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== ($test **= $test);
    }
    function test10556()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== ($test <<= $test);
    }
    function test10557()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== ($test >>= $test);
    }
    function test10558()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== ($test & $test);
    }
    function test10559()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== ($test | $test);
    }
    function test10560()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== ($test ^ $test);
    }
    function test10561()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== ($test && $test);
    }
    function test10562()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== ($test || $test);
    }
    function test10563()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== ($test ?? $test);
    }
    function test10564()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test . $test;
    }
    function test10565()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test / $test;
    }
    function test10566()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== ($test == $test);
    }
    function test10567()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test > $test;
    }
    function test10568()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test >= $test;
    }
    function test10569()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== ($test === $test);
    }
    function test10570()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== ($test and $test);
    }
    function test10571()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== ($test or $test);
    }
    function test10572()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== ($test xor $test);
    }
    function test10573()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test - $test;
    }
    function test10574()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test % $test;
    }
    function test10575()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test * $test;
    }
    function test10576()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== ($test != $test);
    }
    function test10577()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== ($test !== $test);
    }
    function test10578()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test + $test;
    }
    function test10579()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test ** $test;
    }
    function test10580()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test << $test;
    }
    function test10581()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test >> $test;
    }
    function test10582()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test < $test;
    }
    function test10583()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== $test <= $test;
    }
    function test10584()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== ($test <=> $test);
    }
    function test10585()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== (array) $test;
    }
    function test10586()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== (bool) $test;
    }
    function test10587()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== (double) $test;
    }
    function test10588()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== (int) $test;
    }
    function test10589()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== (object) $test;
    }
    function test10590()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== (string) $test;
    }
    function test10591()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== 0.0;
    }
    function test10592()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== "{$test}";
    }
    function test10593()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== 0;
    }
    function test10594()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== 'test';
    }
    function test10595()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== __CLASS__;
    }
    function test10596()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== __DIR__;
    }
    function test10597()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== __FILE__;
    }
    function test10598()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== __FUNCTION__;
    }
    function test10599()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== __LINE__;
    }
    function test10600()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== __METHOD__;
    }
    function test10601()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== __NAMESPACE__;
    }
    function test10602()
    {
        $this->assertTrue(0 === 0);
        fn() => $test !== __TRAIT__;
    }
    function test10603()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] + $test;
    }
    function test10604()
    {
        $this->assertTrue(0 === 0);
        fn() => [] + $test;
    }
    function test10605()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test = $test) + $test;
    }
    function test10606()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test =& $test) + $test;
    }
    function test10607()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test + $test;
    }
    function test10608()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test + $test;
    }
    function test10609()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test + $test;
    }
    function test10610()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test + $test;
    }
    function test10611()
    {
        $this->assertTrue(0 === 0);
        fn() => function () {
        } + $test;
    }
    function test10612()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test;
    }
    function test10613()
    {
        $this->assertTrue(0 === 0);
        fn() => self + $test;
    }
    function test10614()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test) + $test;
    }
    function test10615()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test + $test;
    }
    function test10616()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test) + $test;
    }
    function test10617()
    {
        $this->assertTrue(0 === 0);
        fn() => $test() + $test;
    }
    function test10618()
    {
        $this->assertTrue(0 === 0);
        fn() => ( $test) + $test;
    }
    function test10619()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof $test + $test;
    }
    function test10620()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test) + $test;
    }
    function test10621()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test) {
        } + $test;
    }
    function test10622()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}() + $test;
    }
    function test10623()
    {
        $this->assertTrue(0 === 0);
        fn() => new $test() + $test;
    }
    function test10624()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}() + $test;
    }
    function test10625()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test} + $test;
    }
    function test10626()
    {
        $this->assertTrue(0 === 0);
        fn() => $test-- + $test;
    }
    function test10627()
    {
        $this->assertTrue(0 === 0);
        fn() => $test++ + $test;
    }
    function test10628()
    {
        $this->assertTrue(0 === 0);
        fn() => --$test + $test;
    }
    function test10629()
    {
        $this->assertTrue(0 === 0);
        fn() => ++$test + $test;
    }
    function test10630()
    {
        $this->assertTrue(0 === 0);
        fn() => (print $test) + $test;
    }
    function test10631()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} + $test;
    }
    function test10632()
    {
        $this->assertTrue(0 === 0);
        fn() => `` + $test;
    }
    function test10633()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test() + $test;
    }
    function test10634()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} + $test;
    }
    function test10635()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ? $test : $test) + $test;
    }
    function test10636()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test + $test;
    }
    function test10637()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test + $test;
    }
    function test10638()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test + $test;
    }
    function test10639()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} + $test;
    }
    function test10640()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield from $test) + $test;
    }
    function test10641()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test) + $test;
    }
    function test10642()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test &= $test) + $test;
    }
    function test10643()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test |= $test) + $test;
    }
    function test10644()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^= $test) + $test;
    }
    function test10645()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ??= $test) + $test;
    }
    function test10646()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test .= $test) + $test;
    }
    function test10647()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test /= $test) + $test;
    }
    function test10648()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test -= $test) + $test;
    }
    function test10649()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test %= $test) + $test;
    }
    function test10650()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test *= $test) + $test;
    }
    function test10651()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test += $test) + $test;
    }
    function test10652()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test **= $test) + $test;
    }
    function test10653()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <<= $test) + $test;
    }
    function test10654()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >>= $test) + $test;
    }
    function test10655()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test & $test) + $test;
    }
    function test10656()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test | $test) + $test;
    }
    function test10657()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^ $test) + $test;
    }
    function test10658()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test && $test) + $test;
    }
    function test10659()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test || $test) + $test;
    }
    function test10660()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ?? $test) + $test;
    }
    function test10661()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test + $test;
    }
    function test10662()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test + $test;
    }
    function test10663()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test == $test) + $test;
    }
    function test10664()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test > $test) + $test;
    }
    function test10665()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >= $test) + $test;
    }
    function test10666()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test === $test) + $test;
    }
    function test10667()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test and $test) + $test;
    }
    function test10668()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test or $test) + $test;
    }
    function test10669()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test xor $test) + $test;
    }
    function test10670()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test + $test;
    }
    function test10671()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test + $test;
    }
    function test10672()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test + $test;
    }
    function test10673()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test != $test) + $test;
    }
    function test10674()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test !== $test) + $test;
    }
    function test10675()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test + $test;
    }
    function test10676()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test + $test;
    }
    function test10677()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test << $test) + $test;
    }
    function test10678()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >> $test) + $test;
    }
    function test10679()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test < $test) + $test;
    }
    function test10680()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <= $test) + $test;
    }
    function test10681()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <=> $test) + $test;
    }
    function test10682()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test + $test;
    }
    function test10683()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test + $test;
    }
    function test10684()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test + $test;
    }
    function test10685()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test + $test;
    }
    function test10686()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test + $test;
    }
    function test10687()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test + $test;
    }
    function test10688()
    {
        $this->assertTrue(0 === 0);
        fn() => 0.0 + $test;
    }
    function test10689()
    {
        $this->assertTrue(0 === 0);
        fn() => "{$test}" + $test;
    }
    function test10690()
    {
        $this->assertTrue(0 === 0);
        fn() => 0 + $test;
    }
    function test10691()
    {
        $this->assertTrue(0 === 0);
        fn() => 'test' + $test;
    }
    function test10692()
    {
        $this->assertTrue(0 === 0);
        fn() => __CLASS__ + $test;
    }
    function test10693()
    {
        $this->assertTrue(0 === 0);
        fn() => __DIR__ + $test;
    }
    function test10694()
    {
        $this->assertTrue(0 === 0);
        fn() => __FILE__ + $test;
    }
    function test10695()
    {
        $this->assertTrue(0 === 0);
        fn() => __FUNCTION__ + $test;
    }
    function test10696()
    {
        $this->assertTrue(0 === 0);
        fn() => __LINE__ + $test;
    }
    function test10697()
    {
        $this->assertTrue(0 === 0);
        fn() => __METHOD__ + $test;
    }
    function test10698()
    {
        $this->assertTrue(0 === 0);
        fn() => __NAMESPACE__ + $test;
    }
    function test10699()
    {
        $this->assertTrue(0 === 0);
        fn() => __TRAIT__ + $test;
    }
    function test10700()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test[$test];
    }
    function test10701()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + [];
    }
    function test10702()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ($test = $test);
    }
    function test10703()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ($test =& $test);
    }
    function test10704()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ~$test;
    }
    function test10705()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + !$test;
    }
    function test10706()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test::$test;
    }
    function test10707()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + clone $test;
    }
    function test10708()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + function () {
        };
    }
    function test10709()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test;
    }
    function test10710()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + self;
    }
    function test10711()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + empty($test);
    }
    function test10712()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + @$test;
    }
    function test10713()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + eval($test);
    }
    function test10714()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test();
    }
    function test10715()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ( $test);
    }
    function test10716()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test instanceof $test;
    }
    function test10717()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + isset($test);
    }
    function test10718()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + match ($test) {
        };
    }
    function test10719()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test->{$test}();
    }
    function test10720()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + new $test();
    }
    function test10721()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test?->{$test}();
    }
    function test10722()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test?->{$test};
    }
    function test10723()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test--;
    }
    function test10724()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test++;
    }
    function test10725()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + --$test;
    }
    function test10726()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ++$test;
    }
    function test10727()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + (print $test);
    }
    function test10728()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test->{$test};
    }
    function test10729()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ``;
    }
    function test10730()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test::$test();
    }
    function test10731()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test::${$test};
    }
    function test10732()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ($test ? $test : $test);
    }
    function test10733()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + throw $test;
    }
    function test10734()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + -$test;
    }
    function test10735()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + +$test;
    }
    function test10736()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ${$test};
    }
    function test10737()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + (yield from $test);
    }
    function test10738()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + (yield $test => $test);
    }
    function test10739()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ($test &= $test);
    }
    function test10740()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ($test |= $test);
    }
    function test10741()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ($test ^= $test);
    }
    function test10742()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ($test ??= $test);
    }
    function test10743()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ($test .= $test);
    }
    function test10744()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ($test /= $test);
    }
    function test10745()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ($test -= $test);
    }
    function test10746()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ($test %= $test);
    }
    function test10747()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ($test *= $test);
    }
    function test10748()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ($test += $test);
    }
    function test10749()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ($test **= $test);
    }
    function test10750()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ($test <<= $test);
    }
    function test10751()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ($test >>= $test);
    }
    function test10752()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ($test & $test);
    }
    function test10753()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ($test | $test);
    }
    function test10754()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ($test ^ $test);
    }
    function test10755()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ($test && $test);
    }
    function test10756()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ($test || $test);
    }
    function test10757()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ($test ?? $test);
    }
    function test10758()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ($test . $test);
    }
    function test10759()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test / $test;
    }
    function test10760()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ($test == $test);
    }
    function test10761()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ($test > $test);
    }
    function test10762()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ($test >= $test);
    }
    function test10763()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ($test === $test);
    }
    function test10764()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ($test and $test);
    }
    function test10765()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ($test or $test);
    }
    function test10766()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ($test xor $test);
    }
    function test10767()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ($test - $test);
    }
    function test10768()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test % $test;
    }
    function test10769()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test * $test;
    }
    function test10770()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ($test != $test);
    }
    function test10771()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ($test !== $test);
    }
    function test10772()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ($test + $test);
    }
    function test10773()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test ** $test;
    }
    function test10774()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ($test << $test);
    }
    function test10775()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ($test >> $test);
    }
    function test10776()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ($test < $test);
    }
    function test10777()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ($test <= $test);
    }
    function test10778()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + ($test <=> $test);
    }
    function test10779()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + (array) $test;
    }
    function test10780()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + (bool) $test;
    }
    function test10781()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + (double) $test;
    }
    function test10782()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + (int) $test;
    }
    function test10783()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + (object) $test;
    }
    function test10784()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + (string) $test;
    }
    function test10785()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + 0.0;
    }
    function test10786()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + "{$test}";
    }
    function test10787()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + 0;
    }
    function test10788()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + 'test';
    }
    function test10789()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + __CLASS__;
    }
    function test10790()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + __DIR__;
    }
    function test10791()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + __FILE__;
    }
    function test10792()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + __FUNCTION__;
    }
    function test10793()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + __LINE__;
    }
    function test10794()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + __METHOD__;
    }
    function test10795()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + __NAMESPACE__;
    }
    function test10796()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + __TRAIT__;
    }
    function test10797()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] ** $test;
    }
    function test10798()
    {
        $this->assertTrue(0 === 0);
        fn() => [] ** $test;
    }
    function test10799()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test = $test) ** $test;
    }
    function test10800()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test =& $test) ** $test;
    }
    function test10801()
    {
        $this->assertTrue(0 === 0);
        fn() => (~$test) ** $test;
    }
    function test10802()
    {
        $this->assertTrue(0 === 0);
        fn() => (!$test) ** $test;
    }
    function test10803()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test ** $test;
    }
    function test10804()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test ** $test;
    }
    function test10805()
    {
        $this->assertTrue(0 === 0);
        fn() => function () {
        } ** $test;
    }
    function test10806()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test;
    }
    function test10807()
    {
        $this->assertTrue(0 === 0);
        fn() => self ** $test;
    }
    function test10808()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test) ** $test;
    }
    function test10809()
    {
        $this->assertTrue(0 === 0);
        fn() => (@$test) ** $test;
    }
    function test10810()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test) ** $test;
    }
    function test10811()
    {
        $this->assertTrue(0 === 0);
        fn() => $test() ** $test;
    }
    function test10812()
    {
        $this->assertTrue(0 === 0);
        fn() => ( $test) ** $test;
    }
    function test10813()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test instanceof $test) ** $test;
    }
    function test10814()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test) ** $test;
    }
    function test10815()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test) {
        } ** $test;
    }
    function test10816()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}() ** $test;
    }
    function test10817()
    {
        $this->assertTrue(0 === 0);
        fn() => new $test() ** $test;
    }
    function test10818()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}() ** $test;
    }
    function test10819()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test} ** $test;
    }
    function test10820()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test--) ** $test;
    }
    function test10821()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test++) ** $test;
    }
    function test10822()
    {
        $this->assertTrue(0 === 0);
        fn() => (--$test) ** $test;
    }
    function test10823()
    {
        $this->assertTrue(0 === 0);
        fn() => (++$test) ** $test;
    }
    function test10824()
    {
        $this->assertTrue(0 === 0);
        fn() => (print $test) ** $test;
    }
    function test10825()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} ** $test;
    }
    function test10826()
    {
        $this->assertTrue(0 === 0);
        fn() => `` ** $test;
    }
    function test10827()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test() ** $test;
    }
    function test10828()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} ** $test;
    }
    function test10829()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ? $test : $test) ** $test;
    }
    function test10830()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test ** $test;
    }
    function test10831()
    {
        $this->assertTrue(0 === 0);
        fn() => (-$test) ** $test;
    }
    function test10832()
    {
        $this->assertTrue(0 === 0);
        fn() => (+$test) ** $test;
    }
    function test10833()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} ** $test;
    }
    function test10834()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield from $test) ** $test;
    }
    function test10835()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test) ** $test;
    }
    function test10836()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test &= $test) ** $test;
    }
    function test10837()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test |= $test) ** $test;
    }
    function test10838()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^= $test) ** $test;
    }
    function test10839()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ??= $test) ** $test;
    }
    function test10840()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test .= $test) ** $test;
    }
    function test10841()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test /= $test) ** $test;
    }
    function test10842()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test -= $test) ** $test;
    }
    function test10843()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test %= $test) ** $test;
    }
    function test10844()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test *= $test) ** $test;
    }
    function test10845()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test += $test) ** $test;
    }
    function test10846()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test **= $test) ** $test;
    }
    function test10847()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <<= $test) ** $test;
    }
    function test10848()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >>= $test) ** $test;
    }
    function test10849()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test & $test) ** $test;
    }
    function test10850()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test | $test) ** $test;
    }
    function test10851()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^ $test) ** $test;
    }
    function test10852()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test && $test) ** $test;
    }
    function test10853()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test || $test) ** $test;
    }
    function test10854()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ?? $test) ** $test;
    }
    function test10855()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test . $test) ** $test;
    }
    function test10856()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test / $test) ** $test;
    }
    function test10857()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test == $test) ** $test;
    }
    function test10858()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test > $test) ** $test;
    }
    function test10859()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >= $test) ** $test;
    }
    function test10860()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test === $test) ** $test;
    }
    function test10861()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test and $test) ** $test;
    }
    function test10862()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test or $test) ** $test;
    }
    function test10863()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test xor $test) ** $test;
    }
    function test10864()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test - $test) ** $test;
    }
    function test10865()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test % $test) ** $test;
    }
    function test10866()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test * $test) ** $test;
    }
    function test10867()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test != $test) ** $test;
    }
    function test10868()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test !== $test) ** $test;
    }
    function test10869()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test + $test) ** $test;
    }
    function test10870()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ** $test) ** $test;
    }
    function test10871()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test << $test) ** $test;
    }
    function test10872()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >> $test) ** $test;
    }
    function test10873()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test < $test) ** $test;
    }
    function test10874()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <= $test) ** $test;
    }
    function test10875()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <=> $test) ** $test;
    }
    function test10876()
    {
        $this->assertTrue(0 === 0);
        fn() => ((array) $test) ** $test;
    }
    function test10877()
    {
        $this->assertTrue(0 === 0);
        fn() => ((bool) $test) ** $test;
    }
    function test10878()
    {
        $this->assertTrue(0 === 0);
        fn() => ((double) $test) ** $test;
    }
    function test10879()
    {
        $this->assertTrue(0 === 0);
        fn() => ((int) $test) ** $test;
    }
    function test10880()
    {
        $this->assertTrue(0 === 0);
        fn() => ((object) $test) ** $test;
    }
    function test10881()
    {
        $this->assertTrue(0 === 0);
        fn() => ((string) $test) ** $test;
    }
    function test10882()
    {
        $this->assertTrue(0 === 0);
        fn() => 0.0 ** $test;
    }
    function test10883()
    {
        $this->assertTrue(0 === 0);
        fn() => "{$test}" ** $test;
    }
    function test10884()
    {
        $this->assertTrue(0 === 0);
        fn() => 0 ** $test;
    }
    function test10885()
    {
        $this->assertTrue(0 === 0);
        fn() => 'test' ** $test;
    }
    function test10886()
    {
        $this->assertTrue(0 === 0);
        fn() => __CLASS__ ** $test;
    }
    function test10887()
    {
        $this->assertTrue(0 === 0);
        fn() => __DIR__ ** $test;
    }
    function test10888()
    {
        $this->assertTrue(0 === 0);
        fn() => __FILE__ ** $test;
    }
    function test10889()
    {
        $this->assertTrue(0 === 0);
        fn() => __FUNCTION__ ** $test;
    }
    function test10890()
    {
        $this->assertTrue(0 === 0);
        fn() => __LINE__ ** $test;
    }
    function test10891()
    {
        $this->assertTrue(0 === 0);
        fn() => __METHOD__ ** $test;
    }
    function test10892()
    {
        $this->assertTrue(0 === 0);
        fn() => __NAMESPACE__ ** $test;
    }
    function test10893()
    {
        $this->assertTrue(0 === 0);
        fn() => __TRAIT__ ** $test;
    }
    function test10894()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test[$test];
    }
    function test10895()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** [];
    }
    function test10896()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test = $test);
    }
    function test10897()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test =& $test);
    }
    function test10898()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** (~$test);
    }
    function test10899()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** (!$test);
    }
    function test10900()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test::$test;
    }
    function test10901()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** clone $test;
    }
    function test10902()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** function () {
        };
    }
    function test10903()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test;
    }
    function test10904()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** self;
    }
    function test10905()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** empty($test);
    }
    function test10906()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** (@$test);
    }
    function test10907()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** eval($test);
    }
    function test10908()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test();
    }
    function test10909()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ( $test);
    }
    function test10910()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test instanceof $test);
    }
    function test10911()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** isset($test);
    }
    function test10912()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** match ($test) {
        };
    }
    function test10913()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test->{$test}();
    }
    function test10914()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** new $test();
    }
    function test10915()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test?->{$test}();
    }
    function test10916()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test?->{$test};
    }
    function test10917()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test--);
    }
    function test10918()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test++);
    }
    function test10919()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** (--$test);
    }
    function test10920()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** (++$test);
    }
    function test10921()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** (print $test);
    }
    function test10922()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test->{$test};
    }
    function test10923()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ``;
    }
    function test10924()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test::$test();
    }
    function test10925()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test::${$test};
    }
    function test10926()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test ? $test : $test);
    }
    function test10927()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** throw $test;
    }
    function test10928()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** (-$test);
    }
    function test10929()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** (+$test);
    }
    function test10930()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ${$test};
    }
    function test10931()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** (yield from $test);
    }
    function test10932()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** (yield $test => $test);
    }
    function test10933()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test &= $test);
    }
    function test10934()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test |= $test);
    }
    function test10935()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test ^= $test);
    }
    function test10936()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test ??= $test);
    }
    function test10937()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test .= $test);
    }
    function test10938()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test /= $test);
    }
    function test10939()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test -= $test);
    }
    function test10940()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test %= $test);
    }
    function test10941()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test *= $test);
    }
    function test10942()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test += $test);
    }
    function test10943()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test **= $test);
    }
    function test10944()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test <<= $test);
    }
    function test10945()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test >>= $test);
    }
    function test10946()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test & $test);
    }
    function test10947()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test | $test);
    }
    function test10948()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test ^ $test);
    }
    function test10949()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test && $test);
    }
    function test10950()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test || $test);
    }
    function test10951()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test ?? $test);
    }
    function test10952()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test . $test);
    }
    function test10953()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test / $test);
    }
    function test10954()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test == $test);
    }
    function test10955()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test > $test);
    }
    function test10956()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test >= $test);
    }
    function test10957()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test === $test);
    }
    function test10958()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test and $test);
    }
    function test10959()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test or $test);
    }
    function test10960()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test xor $test);
    }
    function test10961()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test - $test);
    }
    function test10962()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test % $test);
    }
    function test10963()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test * $test);
    }
    function test10964()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test != $test);
    }
    function test10965()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test !== $test);
    }
    function test10966()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test + $test);
    }
    function test10967()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test ** $test;
    }
    function test10968()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test << $test);
    }
    function test10969()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test >> $test);
    }
    function test10970()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test < $test);
    }
    function test10971()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test <= $test);
    }
    function test10972()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ($test <=> $test);
    }
    function test10973()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ((array) $test);
    }
    function test10974()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ((bool) $test);
    }
    function test10975()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ((double) $test);
    }
    function test10976()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ((int) $test);
    }
    function test10977()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ((object) $test);
    }
    function test10978()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** ((string) $test);
    }
    function test10979()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** 0.0;
    }
    function test10980()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** "{$test}";
    }
    function test10981()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** 0;
    }
    function test10982()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** 'test';
    }
    function test10983()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** __CLASS__;
    }
    function test10984()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** __DIR__;
    }
    function test10985()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** __FILE__;
    }
    function test10986()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** __FUNCTION__;
    }
    function test10987()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** __LINE__;
    }
    function test10988()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** __METHOD__;
    }
    function test10989()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** __NAMESPACE__;
    }
    function test10990()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** __TRAIT__;
    }
    function test10991()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] << $test;
    }
    function test10992()
    {
        $this->assertTrue(0 === 0);
        fn() => [] << $test;
    }
    function test10993()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test = $test) << $test;
    }
    function test10994()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test =& $test) << $test;
    }
    function test10995()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test << $test;
    }
    function test10996()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test << $test;
    }
    function test10997()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test << $test;
    }
    function test10998()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test << $test;
    }
    function test10999()
    {
        $this->assertTrue(0 === 0);
        fn() => function () {
        } << $test;
    }
    function test11000()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test;
    }
    function test11001()
    {
        $this->assertTrue(0 === 0);
        fn() => self << $test;
    }
    function test11002()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test) << $test;
    }
    function test11003()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test << $test;
    }
    function test11004()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test) << $test;
    }
    function test11005()
    {
        $this->assertTrue(0 === 0);
        fn() => $test() << $test;
    }
    function test11006()
    {
        $this->assertTrue(0 === 0);
        fn() => ( $test) << $test;
    }
    function test11007()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof $test << $test;
    }
    function test11008()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test) << $test;
    }
    function test11009()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test) {
        } << $test;
    }
    function test11010()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}() << $test;
    }
    function test11011()
    {
        $this->assertTrue(0 === 0);
        fn() => new $test() << $test;
    }
    function test11012()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}() << $test;
    }
    function test11013()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test} << $test;
    }
    function test11014()
    {
        $this->assertTrue(0 === 0);
        fn() => $test-- << $test;
    }
    function test11015()
    {
        $this->assertTrue(0 === 0);
        fn() => $test++ << $test;
    }
    function test11016()
    {
        $this->assertTrue(0 === 0);
        fn() => --$test << $test;
    }
    function test11017()
    {
        $this->assertTrue(0 === 0);
        fn() => ++$test << $test;
    }
    function test11018()
    {
        $this->assertTrue(0 === 0);
        fn() => (print $test) << $test;
    }
    function test11019()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} << $test;
    }
    function test11020()
    {
        $this->assertTrue(0 === 0);
        fn() => `` << $test;
    }
    function test11021()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test() << $test;
    }
    function test11022()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} << $test;
    }
    function test11023()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ? $test : $test) << $test;
    }
    function test11024()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test << $test;
    }
    function test11025()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test << $test;
    }
    function test11026()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test << $test;
    }
    function test11027()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} << $test;
    }
    function test11028()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield from $test) << $test;
    }
    function test11029()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test) << $test;
    }
    function test11030()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test &= $test) << $test;
    }
    function test11031()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test |= $test) << $test;
    }
    function test11032()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^= $test) << $test;
    }
    function test11033()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ??= $test) << $test;
    }
    function test11034()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test .= $test) << $test;
    }
    function test11035()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test /= $test) << $test;
    }
    function test11036()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test -= $test) << $test;
    }
    function test11037()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test %= $test) << $test;
    }
    function test11038()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test *= $test) << $test;
    }
    function test11039()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test += $test) << $test;
    }
    function test11040()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test **= $test) << $test;
    }
    function test11041()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <<= $test) << $test;
    }
    function test11042()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >>= $test) << $test;
    }
    function test11043()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test & $test) << $test;
    }
    function test11044()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test | $test) << $test;
    }
    function test11045()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^ $test) << $test;
    }
    function test11046()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test && $test) << $test;
    }
    function test11047()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test || $test) << $test;
    }
    function test11048()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ?? $test) << $test;
    }
    function test11049()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test << $test;
    }
    function test11050()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test << $test;
    }
    function test11051()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test == $test) << $test;
    }
    function test11052()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test > $test) << $test;
    }
    function test11053()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >= $test) << $test;
    }
    function test11054()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test === $test) << $test;
    }
    function test11055()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test and $test) << $test;
    }
    function test11056()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test or $test) << $test;
    }
    function test11057()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test xor $test) << $test;
    }
    function test11058()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test << $test;
    }
    function test11059()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test << $test;
    }
    function test11060()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test << $test;
    }
    function test11061()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test != $test) << $test;
    }
    function test11062()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test !== $test) << $test;
    }
    function test11063()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test << $test;
    }
    function test11064()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test << $test;
    }
    function test11065()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test << $test;
    }
    function test11066()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test << $test;
    }
    function test11067()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test < $test) << $test;
    }
    function test11068()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <= $test) << $test;
    }
    function test11069()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <=> $test) << $test;
    }
    function test11070()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test << $test;
    }
    function test11071()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test << $test;
    }
    function test11072()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test << $test;
    }
    function test11073()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test << $test;
    }
    function test11074()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test << $test;
    }
    function test11075()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test << $test;
    }
    function test11076()
    {
        $this->assertTrue(0 === 0);
        fn() => 0.0 << $test;
    }
    function test11077()
    {
        $this->assertTrue(0 === 0);
        fn() => "{$test}" << $test;
    }
    function test11078()
    {
        $this->assertTrue(0 === 0);
        fn() => 0 << $test;
    }
    function test11079()
    {
        $this->assertTrue(0 === 0);
        fn() => 'test' << $test;
    }
    function test11080()
    {
        $this->assertTrue(0 === 0);
        fn() => __CLASS__ << $test;
    }
    function test11081()
    {
        $this->assertTrue(0 === 0);
        fn() => __DIR__ << $test;
    }
    function test11082()
    {
        $this->assertTrue(0 === 0);
        fn() => __FILE__ << $test;
    }
    function test11083()
    {
        $this->assertTrue(0 === 0);
        fn() => __FUNCTION__ << $test;
    }
    function test11084()
    {
        $this->assertTrue(0 === 0);
        fn() => __LINE__ << $test;
    }
    function test11085()
    {
        $this->assertTrue(0 === 0);
        fn() => __METHOD__ << $test;
    }
    function test11086()
    {
        $this->assertTrue(0 === 0);
        fn() => __NAMESPACE__ << $test;
    }
    function test11087()
    {
        $this->assertTrue(0 === 0);
        fn() => __TRAIT__ << $test;
    }
    function test11088()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test[$test];
    }
    function test11089()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << [];
    }
    function test11090()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << ($test = $test);
    }
    function test11091()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << ($test =& $test);
    }
    function test11092()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << ~$test;
    }
    function test11093()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << !$test;
    }
    function test11094()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test::$test;
    }
    function test11095()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << clone $test;
    }
    function test11096()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << function () {
        };
    }
    function test11097()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test;
    }
    function test11098()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << self;
    }
    function test11099()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << empty($test);
    }
    function test11100()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << @$test;
    }
    function test11101()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << eval($test);
    }
    function test11102()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test();
    }
    function test11103()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << ( $test);
    }
    function test11104()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test instanceof $test;
    }
    function test11105()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << isset($test);
    }
    function test11106()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << match ($test) {
        };
    }
    function test11107()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test->{$test}();
    }
    function test11108()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << new $test();
    }
    function test11109()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test?->{$test}();
    }
    function test11110()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test?->{$test};
    }
    function test11111()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test--;
    }
    function test11112()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test++;
    }
    function test11113()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << --$test;
    }
    function test11114()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << ++$test;
    }
    function test11115()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << (print $test);
    }
    function test11116()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test->{$test};
    }
    function test11117()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << ``;
    }
    function test11118()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test::$test();
    }
    function test11119()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test::${$test};
    }
    function test11120()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << ($test ? $test : $test);
    }
    function test11121()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << throw $test;
    }
    function test11122()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << -$test;
    }
    function test11123()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << +$test;
    }
    function test11124()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << ${$test};
    }
    function test11125()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << (yield from $test);
    }
    function test11126()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << (yield $test => $test);
    }
    function test11127()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << ($test &= $test);
    }
    function test11128()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << ($test |= $test);
    }
    function test11129()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << ($test ^= $test);
    }
    function test11130()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << ($test ??= $test);
    }
    function test11131()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << ($test .= $test);
    }
    function test11132()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << ($test /= $test);
    }
    function test11133()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << ($test -= $test);
    }
    function test11134()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << ($test %= $test);
    }
    function test11135()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << ($test *= $test);
    }
    function test11136()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << ($test += $test);
    }
    function test11137()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << ($test **= $test);
    }
    function test11138()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << ($test <<= $test);
    }
    function test11139()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << ($test >>= $test);
    }
    function test11140()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << ($test & $test);
    }
    function test11141()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << ($test | $test);
    }
    function test11142()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << ($test ^ $test);
    }
    function test11143()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << ($test && $test);
    }
    function test11144()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << ($test || $test);
    }
    function test11145()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << ($test ?? $test);
    }
    function test11146()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test . $test;
    }
    function test11147()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test / $test;
    }
    function test11148()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << ($test == $test);
    }
    function test11149()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << ($test > $test);
    }
    function test11150()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << ($test >= $test);
    }
    function test11151()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << ($test === $test);
    }
    function test11152()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << ($test and $test);
    }
    function test11153()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << ($test or $test);
    }
    function test11154()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << ($test xor $test);
    }
    function test11155()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test - $test;
    }
    function test11156()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test % $test;
    }
    function test11157()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test * $test;
    }
    function test11158()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << ($test != $test);
    }
    function test11159()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << ($test !== $test);
    }
    function test11160()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test + $test;
    }
    function test11161()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test ** $test;
    }
    function test11162()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << ($test << $test);
    }
    function test11163()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << ($test >> $test);
    }
    function test11164()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << ($test < $test);
    }
    function test11165()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << ($test <= $test);
    }
    function test11166()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << ($test <=> $test);
    }
    function test11167()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << (array) $test;
    }
    function test11168()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << (bool) $test;
    }
    function test11169()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << (double) $test;
    }
    function test11170()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << (int) $test;
    }
    function test11171()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << (object) $test;
    }
    function test11172()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << (string) $test;
    }
    function test11173()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << 0.0;
    }
    function test11174()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << "{$test}";
    }
    function test11175()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << 0;
    }
    function test11176()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << 'test';
    }
    function test11177()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << __CLASS__;
    }
    function test11178()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << __DIR__;
    }
    function test11179()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << __FILE__;
    }
    function test11180()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << __FUNCTION__;
    }
    function test11181()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << __LINE__;
    }
    function test11182()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << __METHOD__;
    }
    function test11183()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << __NAMESPACE__;
    }
    function test11184()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << __TRAIT__;
    }
    function test11185()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] >> $test;
    }
    function test11186()
    {
        $this->assertTrue(0 === 0);
        fn() => [] >> $test;
    }
    function test11187()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test = $test) >> $test;
    }
    function test11188()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test =& $test) >> $test;
    }
    function test11189()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test >> $test;
    }
    function test11190()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test >> $test;
    }
    function test11191()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test >> $test;
    }
    function test11192()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test >> $test;
    }
    function test11193()
    {
        $this->assertTrue(0 === 0);
        fn() => function () {
        } >> $test;
    }
    function test11194()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test;
    }
    function test11195()
    {
        $this->assertTrue(0 === 0);
        fn() => self >> $test;
    }
    function test11196()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test) >> $test;
    }
    function test11197()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test >> $test;
    }
    function test11198()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test) >> $test;
    }
    function test11199()
    {
        $this->assertTrue(0 === 0);
        fn() => $test() >> $test;
    }
    function test11200()
    {
        $this->assertTrue(0 === 0);
        fn() => ( $test) >> $test;
    }
    function test11201()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof $test >> $test;
    }
    function test11202()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test) >> $test;
    }
    function test11203()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test) {
        } >> $test;
    }
    function test11204()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}() >> $test;
    }
    function test11205()
    {
        $this->assertTrue(0 === 0);
        fn() => new $test() >> $test;
    }
    function test11206()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}() >> $test;
    }
    function test11207()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test} >> $test;
    }
    function test11208()
    {
        $this->assertTrue(0 === 0);
        fn() => $test-- >> $test;
    }
    function test11209()
    {
        $this->assertTrue(0 === 0);
        fn() => $test++ >> $test;
    }
    function test11210()
    {
        $this->assertTrue(0 === 0);
        fn() => --$test >> $test;
    }
    function test11211()
    {
        $this->assertTrue(0 === 0);
        fn() => ++$test >> $test;
    }
    function test11212()
    {
        $this->assertTrue(0 === 0);
        fn() => (print $test) >> $test;
    }
    function test11213()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} >> $test;
    }
    function test11214()
    {
        $this->assertTrue(0 === 0);
        fn() => `` >> $test;
    }
    function test11215()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test() >> $test;
    }
    function test11216()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} >> $test;
    }
    function test11217()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ? $test : $test) >> $test;
    }
    function test11218()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test >> $test;
    }
    function test11219()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test >> $test;
    }
    function test11220()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test >> $test;
    }
    function test11221()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} >> $test;
    }
    function test11222()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield from $test) >> $test;
    }
    function test11223()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test) >> $test;
    }
    function test11224()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test &= $test) >> $test;
    }
    function test11225()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test |= $test) >> $test;
    }
    function test11226()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^= $test) >> $test;
    }
    function test11227()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ??= $test) >> $test;
    }
    function test11228()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test .= $test) >> $test;
    }
    function test11229()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test /= $test) >> $test;
    }
    function test11230()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test -= $test) >> $test;
    }
    function test11231()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test %= $test) >> $test;
    }
    function test11232()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test *= $test) >> $test;
    }
    function test11233()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test += $test) >> $test;
    }
    function test11234()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test **= $test) >> $test;
    }
    function test11235()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <<= $test) >> $test;
    }
    function test11236()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >>= $test) >> $test;
    }
    function test11237()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test & $test) >> $test;
    }
    function test11238()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test | $test) >> $test;
    }
    function test11239()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^ $test) >> $test;
    }
    function test11240()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test && $test) >> $test;
    }
    function test11241()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test || $test) >> $test;
    }
    function test11242()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ?? $test) >> $test;
    }
    function test11243()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test >> $test;
    }
    function test11244()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test >> $test;
    }
    function test11245()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test == $test) >> $test;
    }
    function test11246()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test > $test) >> $test;
    }
    function test11247()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >= $test) >> $test;
    }
    function test11248()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test === $test) >> $test;
    }
    function test11249()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test and $test) >> $test;
    }
    function test11250()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test or $test) >> $test;
    }
    function test11251()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test xor $test) >> $test;
    }
    function test11252()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test >> $test;
    }
    function test11253()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test >> $test;
    }
    function test11254()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test >> $test;
    }
    function test11255()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test != $test) >> $test;
    }
    function test11256()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test !== $test) >> $test;
    }
    function test11257()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test >> $test;
    }
    function test11258()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test >> $test;
    }
    function test11259()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test >> $test;
    }
    function test11260()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test >> $test;
    }
    function test11261()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test < $test) >> $test;
    }
    function test11262()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <= $test) >> $test;
    }
    function test11263()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <=> $test) >> $test;
    }
    function test11264()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test >> $test;
    }
    function test11265()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test >> $test;
    }
    function test11266()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test >> $test;
    }
    function test11267()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test >> $test;
    }
    function test11268()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test >> $test;
    }
    function test11269()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test >> $test;
    }
    function test11270()
    {
        $this->assertTrue(0 === 0);
        fn() => 0.0 >> $test;
    }
    function test11271()
    {
        $this->assertTrue(0 === 0);
        fn() => "{$test}" >> $test;
    }
    function test11272()
    {
        $this->assertTrue(0 === 0);
        fn() => 0 >> $test;
    }
    function test11273()
    {
        $this->assertTrue(0 === 0);
        fn() => 'test' >> $test;
    }
    function test11274()
    {
        $this->assertTrue(0 === 0);
        fn() => __CLASS__ >> $test;
    }
    function test11275()
    {
        $this->assertTrue(0 === 0);
        fn() => __DIR__ >> $test;
    }
    function test11276()
    {
        $this->assertTrue(0 === 0);
        fn() => __FILE__ >> $test;
    }
    function test11277()
    {
        $this->assertTrue(0 === 0);
        fn() => __FUNCTION__ >> $test;
    }
    function test11278()
    {
        $this->assertTrue(0 === 0);
        fn() => __LINE__ >> $test;
    }
    function test11279()
    {
        $this->assertTrue(0 === 0);
        fn() => __METHOD__ >> $test;
    }
    function test11280()
    {
        $this->assertTrue(0 === 0);
        fn() => __NAMESPACE__ >> $test;
    }
    function test11281()
    {
        $this->assertTrue(0 === 0);
        fn() => __TRAIT__ >> $test;
    }
    function test11282()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test[$test];
    }
    function test11283()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> [];
    }
    function test11284()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> ($test = $test);
    }
    function test11285()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> ($test =& $test);
    }
    function test11286()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> ~$test;
    }
    function test11287()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> !$test;
    }
    function test11288()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test::$test;
    }
    function test11289()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> clone $test;
    }
    function test11290()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> function () {
        };
    }
    function test11291()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test;
    }
    function test11292()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> self;
    }
    function test11293()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> empty($test);
    }
    function test11294()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> @$test;
    }
    function test11295()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> eval($test);
    }
    function test11296()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test();
    }
    function test11297()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> ( $test);
    }
    function test11298()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test instanceof $test;
    }
    function test11299()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> isset($test);
    }
    function test11300()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> match ($test) {
        };
    }
    function test11301()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test->{$test}();
    }
    function test11302()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> new $test();
    }
    function test11303()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test?->{$test}();
    }
    function test11304()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test?->{$test};
    }
    function test11305()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test--;
    }
    function test11306()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test++;
    }
    function test11307()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> --$test;
    }
    function test11308()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> ++$test;
    }
    function test11309()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> (print $test);
    }
    function test11310()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test->{$test};
    }
    function test11311()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> ``;
    }
    function test11312()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test::$test();
    }
    function test11313()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test::${$test};
    }
    function test11314()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> ($test ? $test : $test);
    }
    function test11315()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> throw $test;
    }
    function test11316()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> -$test;
    }
    function test11317()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> +$test;
    }
    function test11318()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> ${$test};
    }
    function test11319()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> (yield from $test);
    }
    function test11320()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> (yield $test => $test);
    }
    function test11321()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> ($test &= $test);
    }
    function test11322()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> ($test |= $test);
    }
    function test11323()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> ($test ^= $test);
    }
    function test11324()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> ($test ??= $test);
    }
    function test11325()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> ($test .= $test);
    }
    function test11326()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> ($test /= $test);
    }
    function test11327()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> ($test -= $test);
    }
    function test11328()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> ($test %= $test);
    }
    function test11329()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> ($test *= $test);
    }
    function test11330()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> ($test += $test);
    }
    function test11331()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> ($test **= $test);
    }
    function test11332()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> ($test <<= $test);
    }
    function test11333()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> ($test >>= $test);
    }
    function test11334()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> ($test & $test);
    }
    function test11335()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> ($test | $test);
    }
    function test11336()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> ($test ^ $test);
    }
    function test11337()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> ($test && $test);
    }
    function test11338()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> ($test || $test);
    }
    function test11339()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> ($test ?? $test);
    }
    function test11340()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test . $test;
    }
    function test11341()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test / $test;
    }
    function test11342()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> ($test == $test);
    }
    function test11343()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> ($test > $test);
    }
    function test11344()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> ($test >= $test);
    }
    function test11345()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> ($test === $test);
    }
    function test11346()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> ($test and $test);
    }
    function test11347()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> ($test or $test);
    }
    function test11348()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> ($test xor $test);
    }
    function test11349()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test - $test;
    }
    function test11350()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test % $test;
    }
    function test11351()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test * $test;
    }
    function test11352()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> ($test != $test);
    }
    function test11353()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> ($test !== $test);
    }
    function test11354()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test + $test;
    }
    function test11355()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test ** $test;
    }
    function test11356()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> ($test << $test);
    }
    function test11357()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> ($test >> $test);
    }
    function test11358()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> ($test < $test);
    }
    function test11359()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> ($test <= $test);
    }
    function test11360()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> ($test <=> $test);
    }
    function test11361()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> (array) $test;
    }
    function test11362()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> (bool) $test;
    }
    function test11363()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> (double) $test;
    }
    function test11364()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> (int) $test;
    }
    function test11365()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> (object) $test;
    }
    function test11366()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> (string) $test;
    }
    function test11367()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> 0.0;
    }
    function test11368()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> "{$test}";
    }
    function test11369()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> 0;
    }
    function test11370()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> 'test';
    }
    function test11371()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> __CLASS__;
    }
    function test11372()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> __DIR__;
    }
    function test11373()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> __FILE__;
    }
    function test11374()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> __FUNCTION__;
    }
    function test11375()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> __LINE__;
    }
    function test11376()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> __METHOD__;
    }
    function test11377()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> __NAMESPACE__;
    }
    function test11378()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> __TRAIT__;
    }
    function test11379()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] < $test;
    }
    function test11380()
    {
        $this->assertTrue(0 === 0);
        fn() => [] < $test;
    }
    function test11381()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test = $test) < $test;
    }
    function test11382()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test =& $test) < $test;
    }
    function test11383()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test < $test;
    }
    function test11384()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test < $test;
    }
    function test11385()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test < $test;
    }
    function test11386()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test < $test;
    }
    function test11387()
    {
        $this->assertTrue(0 === 0);
        fn() => function () {
        } < $test;
    }
    function test11388()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test;
    }
    function test11389()
    {
        $this->assertTrue(0 === 0);
        fn() => self < $test;
    }
    function test11390()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test) < $test;
    }
    function test11391()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test < $test;
    }
    function test11392()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test) < $test;
    }
    function test11393()
    {
        $this->assertTrue(0 === 0);
        fn() => $test() < $test;
    }
    function test11394()
    {
        $this->assertTrue(0 === 0);
        fn() => ( $test) < $test;
    }
    function test11395()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof $test < $test;
    }
    function test11396()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test) < $test;
    }
    function test11397()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test) {
        } < $test;
    }
    function test11398()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}() < $test;
    }
    function test11399()
    {
        $this->assertTrue(0 === 0);
        fn() => new $test() < $test;
    }
    function test11400()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}() < $test;
    }
    function test11401()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test} < $test;
    }
    function test11402()
    {
        $this->assertTrue(0 === 0);
        fn() => $test-- < $test;
    }
    function test11403()
    {
        $this->assertTrue(0 === 0);
        fn() => $test++ < $test;
    }
    function test11404()
    {
        $this->assertTrue(0 === 0);
        fn() => --$test < $test;
    }
    function test11405()
    {
        $this->assertTrue(0 === 0);
        fn() => ++$test < $test;
    }
    function test11406()
    {
        $this->assertTrue(0 === 0);
        fn() => (print $test) < $test;
    }
    function test11407()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} < $test;
    }
    function test11408()
    {
        $this->assertTrue(0 === 0);
        fn() => `` < $test;
    }
    function test11409()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test() < $test;
    }
    function test11410()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} < $test;
    }
    function test11411()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ? $test : $test) < $test;
    }
    function test11412()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test < $test;
    }
    function test11413()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test < $test;
    }
    function test11414()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test < $test;
    }
    function test11415()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} < $test;
    }
    function test11416()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield from $test) < $test;
    }
    function test11417()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test) < $test;
    }
    function test11418()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test &= $test) < $test;
    }
    function test11419()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test |= $test) < $test;
    }
    function test11420()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^= $test) < $test;
    }
    function test11421()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ??= $test) < $test;
    }
    function test11422()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test .= $test) < $test;
    }
    function test11423()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test /= $test) < $test;
    }
    function test11424()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test -= $test) < $test;
    }
    function test11425()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test %= $test) < $test;
    }
    function test11426()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test *= $test) < $test;
    }
    function test11427()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test += $test) < $test;
    }
    function test11428()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test **= $test) < $test;
    }
    function test11429()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <<= $test) < $test;
    }
    function test11430()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >>= $test) < $test;
    }
    function test11431()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test & $test) < $test;
    }
    function test11432()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test | $test) < $test;
    }
    function test11433()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^ $test) < $test;
    }
    function test11434()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test && $test) < $test;
    }
    function test11435()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test || $test) < $test;
    }
    function test11436()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ?? $test) < $test;
    }
    function test11437()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test < $test;
    }
    function test11438()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test < $test;
    }
    function test11439()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test == $test) < $test;
    }
    function test11440()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test > $test) < $test;
    }
    function test11441()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >= $test) < $test;
    }
    function test11442()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test === $test) < $test;
    }
    function test11443()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test and $test) < $test;
    }
    function test11444()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test or $test) < $test;
    }
    function test11445()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test xor $test) < $test;
    }
    function test11446()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test < $test;
    }
    function test11447()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test < $test;
    }
    function test11448()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test < $test;
    }
    function test11449()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test != $test) < $test;
    }
    function test11450()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test !== $test) < $test;
    }
    function test11451()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test < $test;
    }
    function test11452()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test < $test;
    }
    function test11453()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test < $test;
    }
    function test11454()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test < $test;
    }
    function test11455()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test < $test) < $test;
    }
    function test11456()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <= $test) < $test;
    }
    function test11457()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <=> $test) < $test;
    }
    function test11458()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test < $test;
    }
    function test11459()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test < $test;
    }
    function test11460()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test < $test;
    }
    function test11461()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test < $test;
    }
    function test11462()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test < $test;
    }
    function test11463()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test < $test;
    }
    function test11464()
    {
        $this->assertTrue(0 === 0);
        fn() => 0.0 < $test;
    }
    function test11465()
    {
        $this->assertTrue(0 === 0);
        fn() => "{$test}" < $test;
    }
    function test11466()
    {
        $this->assertTrue(0 === 0);
        fn() => 0 < $test;
    }
    function test11467()
    {
        $this->assertTrue(0 === 0);
        fn() => 'test' < $test;
    }
    function test11468()
    {
        $this->assertTrue(0 === 0);
        fn() => __CLASS__ < $test;
    }
    function test11469()
    {
        $this->assertTrue(0 === 0);
        fn() => __DIR__ < $test;
    }
    function test11470()
    {
        $this->assertTrue(0 === 0);
        fn() => __FILE__ < $test;
    }
    function test11471()
    {
        $this->assertTrue(0 === 0);
        fn() => __FUNCTION__ < $test;
    }
    function test11472()
    {
        $this->assertTrue(0 === 0);
        fn() => __LINE__ < $test;
    }
    function test11473()
    {
        $this->assertTrue(0 === 0);
        fn() => __METHOD__ < $test;
    }
    function test11474()
    {
        $this->assertTrue(0 === 0);
        fn() => __NAMESPACE__ < $test;
    }
    function test11475()
    {
        $this->assertTrue(0 === 0);
        fn() => __TRAIT__ < $test;
    }
    function test11476()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test[$test];
    }
    function test11477()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < [];
    }
    function test11478()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < ($test = $test);
    }
    function test11479()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < ($test =& $test);
    }
    function test11480()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < ~$test;
    }
    function test11481()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < !$test;
    }
    function test11482()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test::$test;
    }
    function test11483()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < clone $test;
    }
    function test11484()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < function () {
        };
    }
    function test11485()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test;
    }
    function test11486()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < self;
    }
    function test11487()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < empty($test);
    }
    function test11488()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < @$test;
    }
    function test11489()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < eval($test);
    }
    function test11490()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test();
    }
    function test11491()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < ( $test);
    }
    function test11492()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test instanceof $test;
    }
    function test11493()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < isset($test);
    }
    function test11494()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < match ($test) {
        };
    }
    function test11495()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test->{$test}();
    }
    function test11496()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < new $test();
    }
    function test11497()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test?->{$test}();
    }
    function test11498()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test?->{$test};
    }
    function test11499()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test--;
    }
    function test11500()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test++;
    }
    function test11501()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < --$test;
    }
    function test11502()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < ++$test;
    }
    function test11503()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < (print $test);
    }
    function test11504()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test->{$test};
    }
    function test11505()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < ``;
    }
    function test11506()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test::$test();
    }
    function test11507()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test::${$test};
    }
    function test11508()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < ($test ? $test : $test);
    }
    function test11509()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < throw $test;
    }
    function test11510()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < -$test;
    }
    function test11511()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < +$test;
    }
    function test11512()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < ${$test};
    }
    function test11513()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < (yield from $test);
    }
    function test11514()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < (yield $test => $test);
    }
    function test11515()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < ($test &= $test);
    }
    function test11516()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < ($test |= $test);
    }
    function test11517()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < ($test ^= $test);
    }
    function test11518()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < ($test ??= $test);
    }
    function test11519()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < ($test .= $test);
    }
    function test11520()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < ($test /= $test);
    }
    function test11521()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < ($test -= $test);
    }
    function test11522()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < ($test %= $test);
    }
    function test11523()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < ($test *= $test);
    }
    function test11524()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < ($test += $test);
    }
    function test11525()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < ($test **= $test);
    }
    function test11526()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < ($test <<= $test);
    }
    function test11527()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < ($test >>= $test);
    }
    function test11528()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < ($test & $test);
    }
    function test11529()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < ($test | $test);
    }
    function test11530()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < ($test ^ $test);
    }
    function test11531()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < ($test && $test);
    }
    function test11532()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < ($test || $test);
    }
    function test11533()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < ($test ?? $test);
    }
    function test11534()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test . $test;
    }
    function test11535()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test / $test;
    }
    function test11536()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < ($test == $test);
    }
    function test11537()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < ($test > $test);
    }
    function test11538()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < ($test >= $test);
    }
    function test11539()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < ($test === $test);
    }
    function test11540()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < ($test and $test);
    }
    function test11541()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < ($test or $test);
    }
    function test11542()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < ($test xor $test);
    }
    function test11543()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test - $test;
    }
    function test11544()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test % $test;
    }
    function test11545()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test * $test;
    }
    function test11546()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < ($test != $test);
    }
    function test11547()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < ($test !== $test);
    }
    function test11548()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test + $test;
    }
    function test11549()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test ** $test;
    }
    function test11550()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test << $test;
    }
    function test11551()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test >> $test;
    }
    function test11552()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < ($test < $test);
    }
    function test11553()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < ($test <= $test);
    }
    function test11554()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < ($test <=> $test);
    }
    function test11555()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < (array) $test;
    }
    function test11556()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < (bool) $test;
    }
    function test11557()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < (double) $test;
    }
    function test11558()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < (int) $test;
    }
    function test11559()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < (object) $test;
    }
    function test11560()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < (string) $test;
    }
    function test11561()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < 0.0;
    }
    function test11562()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < "{$test}";
    }
    function test11563()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < 0;
    }
    function test11564()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < 'test';
    }
    function test11565()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < __CLASS__;
    }
    function test11566()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < __DIR__;
    }
    function test11567()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < __FILE__;
    }
    function test11568()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < __FUNCTION__;
    }
    function test11569()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < __LINE__;
    }
    function test11570()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < __METHOD__;
    }
    function test11571()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < __NAMESPACE__;
    }
    function test11572()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < __TRAIT__;
    }
    function test11573()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] <= $test;
    }
    function test11574()
    {
        $this->assertTrue(0 === 0);
        fn() => [] <= $test;
    }
    function test11575()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test = $test) <= $test;
    }
    function test11576()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test =& $test) <= $test;
    }
    function test11577()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test <= $test;
    }
    function test11578()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test <= $test;
    }
    function test11579()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test <= $test;
    }
    function test11580()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test <= $test;
    }
    function test11581()
    {
        $this->assertTrue(0 === 0);
        fn() => function () {
        } <= $test;
    }
    function test11582()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test;
    }
    function test11583()
    {
        $this->assertTrue(0 === 0);
        fn() => self <= $test;
    }
    function test11584()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test) <= $test;
    }
    function test11585()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test <= $test;
    }
    function test11586()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test) <= $test;
    }
    function test11587()
    {
        $this->assertTrue(0 === 0);
        fn() => $test() <= $test;
    }
    function test11588()
    {
        $this->assertTrue(0 === 0);
        fn() => ( $test) <= $test;
    }
    function test11589()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof $test <= $test;
    }
    function test11590()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test) <= $test;
    }
    function test11591()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test) {
        } <= $test;
    }
    function test11592()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}() <= $test;
    }
    function test11593()
    {
        $this->assertTrue(0 === 0);
        fn() => new $test() <= $test;
    }
    function test11594()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}() <= $test;
    }
    function test11595()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test} <= $test;
    }
    function test11596()
    {
        $this->assertTrue(0 === 0);
        fn() => $test-- <= $test;
    }
    function test11597()
    {
        $this->assertTrue(0 === 0);
        fn() => $test++ <= $test;
    }
    function test11598()
    {
        $this->assertTrue(0 === 0);
        fn() => --$test <= $test;
    }
    function test11599()
    {
        $this->assertTrue(0 === 0);
        fn() => ++$test <= $test;
    }
    function test11600()
    {
        $this->assertTrue(0 === 0);
        fn() => (print $test) <= $test;
    }
    function test11601()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} <= $test;
    }
    function test11602()
    {
        $this->assertTrue(0 === 0);
        fn() => `` <= $test;
    }
    function test11603()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test() <= $test;
    }
    function test11604()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} <= $test;
    }
    function test11605()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ? $test : $test) <= $test;
    }
    function test11606()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test <= $test;
    }
    function test11607()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test <= $test;
    }
    function test11608()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test <= $test;
    }
    function test11609()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} <= $test;
    }
    function test11610()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield from $test) <= $test;
    }
    function test11611()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test) <= $test;
    }
    function test11612()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test &= $test) <= $test;
    }
    function test11613()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test |= $test) <= $test;
    }
    function test11614()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^= $test) <= $test;
    }
    function test11615()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ??= $test) <= $test;
    }
    function test11616()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test .= $test) <= $test;
    }
    function test11617()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test /= $test) <= $test;
    }
    function test11618()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test -= $test) <= $test;
    }
    function test11619()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test %= $test) <= $test;
    }
    function test11620()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test *= $test) <= $test;
    }
    function test11621()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test += $test) <= $test;
    }
    function test11622()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test **= $test) <= $test;
    }
    function test11623()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <<= $test) <= $test;
    }
    function test11624()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >>= $test) <= $test;
    }
    function test11625()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test & $test) <= $test;
    }
    function test11626()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test | $test) <= $test;
    }
    function test11627()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^ $test) <= $test;
    }
    function test11628()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test && $test) <= $test;
    }
    function test11629()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test || $test) <= $test;
    }
    function test11630()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ?? $test) <= $test;
    }
    function test11631()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test <= $test;
    }
    function test11632()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test <= $test;
    }
    function test11633()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test == $test) <= $test;
    }
    function test11634()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test > $test) <= $test;
    }
    function test11635()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >= $test) <= $test;
    }
    function test11636()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test === $test) <= $test;
    }
    function test11637()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test and $test) <= $test;
    }
    function test11638()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test or $test) <= $test;
    }
    function test11639()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test xor $test) <= $test;
    }
    function test11640()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test <= $test;
    }
    function test11641()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test <= $test;
    }
    function test11642()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test <= $test;
    }
    function test11643()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test != $test) <= $test;
    }
    function test11644()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test !== $test) <= $test;
    }
    function test11645()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test <= $test;
    }
    function test11646()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test <= $test;
    }
    function test11647()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test <= $test;
    }
    function test11648()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test <= $test;
    }
    function test11649()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test < $test) <= $test;
    }
    function test11650()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <= $test) <= $test;
    }
    function test11651()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <=> $test) <= $test;
    }
    function test11652()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test <= $test;
    }
    function test11653()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test <= $test;
    }
    function test11654()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test <= $test;
    }
    function test11655()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test <= $test;
    }
    function test11656()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test <= $test;
    }
    function test11657()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test <= $test;
    }
    function test11658()
    {
        $this->assertTrue(0 === 0);
        fn() => 0.0 <= $test;
    }
    function test11659()
    {
        $this->assertTrue(0 === 0);
        fn() => "{$test}" <= $test;
    }
    function test11660()
    {
        $this->assertTrue(0 === 0);
        fn() => 0 <= $test;
    }
    function test11661()
    {
        $this->assertTrue(0 === 0);
        fn() => 'test' <= $test;
    }
    function test11662()
    {
        $this->assertTrue(0 === 0);
        fn() => __CLASS__ <= $test;
    }
    function test11663()
    {
        $this->assertTrue(0 === 0);
        fn() => __DIR__ <= $test;
    }
    function test11664()
    {
        $this->assertTrue(0 === 0);
        fn() => __FILE__ <= $test;
    }
    function test11665()
    {
        $this->assertTrue(0 === 0);
        fn() => __FUNCTION__ <= $test;
    }
    function test11666()
    {
        $this->assertTrue(0 === 0);
        fn() => __LINE__ <= $test;
    }
    function test11667()
    {
        $this->assertTrue(0 === 0);
        fn() => __METHOD__ <= $test;
    }
    function test11668()
    {
        $this->assertTrue(0 === 0);
        fn() => __NAMESPACE__ <= $test;
    }
    function test11669()
    {
        $this->assertTrue(0 === 0);
        fn() => __TRAIT__ <= $test;
    }
    function test11670()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test[$test];
    }
    function test11671()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= [];
    }
    function test11672()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= ($test = $test);
    }
    function test11673()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= ($test =& $test);
    }
    function test11674()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= ~$test;
    }
    function test11675()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= !$test;
    }
    function test11676()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test::$test;
    }
    function test11677()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= clone $test;
    }
    function test11678()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= function () {
        };
    }
    function test11679()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test;
    }
    function test11680()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= self;
    }
    function test11681()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= empty($test);
    }
    function test11682()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= @$test;
    }
    function test11683()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= eval($test);
    }
    function test11684()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test();
    }
    function test11685()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= ( $test);
    }
    function test11686()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test instanceof $test;
    }
    function test11687()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= isset($test);
    }
    function test11688()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= match ($test) {
        };
    }
    function test11689()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test->{$test}();
    }
    function test11690()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= new $test();
    }
    function test11691()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test?->{$test}();
    }
    function test11692()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test?->{$test};
    }
    function test11693()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test--;
    }
    function test11694()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test++;
    }
    function test11695()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= --$test;
    }
    function test11696()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= ++$test;
    }
    function test11697()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= (print $test);
    }
    function test11698()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test->{$test};
    }
    function test11699()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= ``;
    }
    function test11700()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test::$test();
    }
    function test11701()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test::${$test};
    }
    function test11702()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= ($test ? $test : $test);
    }
    function test11703()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= throw $test;
    }
    function test11704()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= -$test;
    }
    function test11705()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= +$test;
    }
    function test11706()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= ${$test};
    }
    function test11707()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= (yield from $test);
    }
    function test11708()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= (yield $test => $test);
    }
    function test11709()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= ($test &= $test);
    }
    function test11710()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= ($test |= $test);
    }
    function test11711()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= ($test ^= $test);
    }
    function test11712()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= ($test ??= $test);
    }
    function test11713()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= ($test .= $test);
    }
    function test11714()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= ($test /= $test);
    }
    function test11715()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= ($test -= $test);
    }
    function test11716()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= ($test %= $test);
    }
    function test11717()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= ($test *= $test);
    }
    function test11718()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= ($test += $test);
    }
    function test11719()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= ($test **= $test);
    }
    function test11720()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= ($test <<= $test);
    }
    function test11721()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= ($test >>= $test);
    }
    function test11722()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= ($test & $test);
    }
    function test11723()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= ($test | $test);
    }
    function test11724()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= ($test ^ $test);
    }
    function test11725()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= ($test && $test);
    }
    function test11726()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= ($test || $test);
    }
    function test11727()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= ($test ?? $test);
    }
    function test11728()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test . $test;
    }
    function test11729()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test / $test;
    }
    function test11730()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= ($test == $test);
    }
    function test11731()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= ($test > $test);
    }
    function test11732()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= ($test >= $test);
    }
    function test11733()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= ($test === $test);
    }
    function test11734()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= ($test and $test);
    }
    function test11735()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= ($test or $test);
    }
    function test11736()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= ($test xor $test);
    }
    function test11737()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test - $test;
    }
    function test11738()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test % $test;
    }
    function test11739()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test * $test;
    }
    function test11740()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= ($test != $test);
    }
    function test11741()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= ($test !== $test);
    }
    function test11742()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test + $test;
    }
    function test11743()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test ** $test;
    }
    function test11744()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test << $test;
    }
    function test11745()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test >> $test;
    }
    function test11746()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= ($test < $test);
    }
    function test11747()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= ($test <= $test);
    }
    function test11748()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= ($test <=> $test);
    }
    function test11749()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= (array) $test;
    }
    function test11750()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= (bool) $test;
    }
    function test11751()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= (double) $test;
    }
    function test11752()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= (int) $test;
    }
    function test11753()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= (object) $test;
    }
    function test11754()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= (string) $test;
    }
    function test11755()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= 0.0;
    }
    function test11756()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= "{$test}";
    }
    function test11757()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= 0;
    }
    function test11758()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= 'test';
    }
    function test11759()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= __CLASS__;
    }
    function test11760()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= __DIR__;
    }
    function test11761()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= __FILE__;
    }
    function test11762()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= __FUNCTION__;
    }
    function test11763()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= __LINE__;
    }
    function test11764()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= __METHOD__;
    }
    function test11765()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= __NAMESPACE__;
    }
    function test11766()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= __TRAIT__;
    }
    function test11767()
    {
        $this->assertTrue(0 === 0);
        fn() => $test[$test] <=> $test;
    }
    function test11768()
    {
        $this->assertTrue(0 === 0);
        fn() => [] <=> $test;
    }
    function test11769()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test = $test) <=> $test;
    }
    function test11770()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test =& $test) <=> $test;
    }
    function test11771()
    {
        $this->assertTrue(0 === 0);
        fn() => ~$test <=> $test;
    }
    function test11772()
    {
        $this->assertTrue(0 === 0);
        fn() => !$test <=> $test;
    }
    function test11773()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test <=> $test;
    }
    function test11774()
    {
        $this->assertTrue(0 === 0);
        fn() => clone $test <=> $test;
    }
    function test11775()
    {
        $this->assertTrue(0 === 0);
        fn() => function () {
        } <=> $test;
    }
    function test11776()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test;
    }
    function test11777()
    {
        $this->assertTrue(0 === 0);
        fn() => self <=> $test;
    }
    function test11778()
    {
        $this->assertTrue(0 === 0);
        fn() => empty($test) <=> $test;
    }
    function test11779()
    {
        $this->assertTrue(0 === 0);
        fn() => @$test <=> $test;
    }
    function test11780()
    {
        $this->assertTrue(0 === 0);
        fn() => eval($test) <=> $test;
    }
    function test11781()
    {
        $this->assertTrue(0 === 0);
        fn() => $test() <=> $test;
    }
    function test11782()
    {
        $this->assertTrue(0 === 0);
        fn() => ( $test) <=> $test;
    }
    function test11783()
    {
        $this->assertTrue(0 === 0);
        fn() => $test instanceof $test <=> $test;
    }
    function test11784()
    {
        $this->assertTrue(0 === 0);
        fn() => isset($test) <=> $test;
    }
    function test11785()
    {
        $this->assertTrue(0 === 0);
        fn() => match ($test) {
        } <=> $test;
    }
    function test11786()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test}() <=> $test;
    }
    function test11787()
    {
        $this->assertTrue(0 === 0);
        fn() => new $test() <=> $test;
    }
    function test11788()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test}() <=> $test;
    }
    function test11789()
    {
        $this->assertTrue(0 === 0);
        fn() => $test?->{$test} <=> $test;
    }
    function test11790()
    {
        $this->assertTrue(0 === 0);
        fn() => $test-- <=> $test;
    }
    function test11791()
    {
        $this->assertTrue(0 === 0);
        fn() => $test++ <=> $test;
    }
    function test11792()
    {
        $this->assertTrue(0 === 0);
        fn() => --$test <=> $test;
    }
    function test11793()
    {
        $this->assertTrue(0 === 0);
        fn() => ++$test <=> $test;
    }
    function test11794()
    {
        $this->assertTrue(0 === 0);
        fn() => (print $test) <=> $test;
    }
    function test11795()
    {
        $this->assertTrue(0 === 0);
        fn() => $test->{$test} <=> $test;
    }
    function test11796()
    {
        $this->assertTrue(0 === 0);
        fn() => `` <=> $test;
    }
    function test11797()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::$test() <=> $test;
    }
    function test11798()
    {
        $this->assertTrue(0 === 0);
        fn() => $test::${$test} <=> $test;
    }
    function test11799()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ? $test : $test) <=> $test;
    }
    function test11800()
    {
        $this->assertTrue(0 === 0);
        fn() => throw $test <=> $test;
    }
    function test11801()
    {
        $this->assertTrue(0 === 0);
        fn() => -$test <=> $test;
    }
    function test11802()
    {
        $this->assertTrue(0 === 0);
        fn() => +$test <=> $test;
    }
    function test11803()
    {
        $this->assertTrue(0 === 0);
        fn() => ${$test} <=> $test;
    }
    function test11804()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield from $test) <=> $test;
    }
    function test11805()
    {
        $this->assertTrue(0 === 0);
        fn() => (yield $test => $test) <=> $test;
    }
    function test11806()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test &= $test) <=> $test;
    }
    function test11807()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test |= $test) <=> $test;
    }
    function test11808()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^= $test) <=> $test;
    }
    function test11809()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ??= $test) <=> $test;
    }
    function test11810()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test .= $test) <=> $test;
    }
    function test11811()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test /= $test) <=> $test;
    }
    function test11812()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test -= $test) <=> $test;
    }
    function test11813()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test %= $test) <=> $test;
    }
    function test11814()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test *= $test) <=> $test;
    }
    function test11815()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test += $test) <=> $test;
    }
    function test11816()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test **= $test) <=> $test;
    }
    function test11817()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <<= $test) <=> $test;
    }
    function test11818()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test >>= $test) <=> $test;
    }
    function test11819()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test & $test) <=> $test;
    }
    function test11820()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test | $test) <=> $test;
    }
    function test11821()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ^ $test) <=> $test;
    }
    function test11822()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test && $test) <=> $test;
    }
    function test11823()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test || $test) <=> $test;
    }
    function test11824()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test ?? $test) <=> $test;
    }
    function test11825()
    {
        $this->assertTrue(0 === 0);
        fn() => $test . $test <=> $test;
    }
    function test11826()
    {
        $this->assertTrue(0 === 0);
        fn() => $test / $test <=> $test;
    }
    function test11827()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test == $test) <=> $test;
    }
    function test11828()
    {
        $this->assertTrue(0 === 0);
        fn() => $test > $test <=> $test;
    }
    function test11829()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >= $test <=> $test;
    }
    function test11830()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test === $test) <=> $test;
    }
    function test11831()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test and $test) <=> $test;
    }
    function test11832()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test or $test) <=> $test;
    }
    function test11833()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test xor $test) <=> $test;
    }
    function test11834()
    {
        $this->assertTrue(0 === 0);
        fn() => $test - $test <=> $test;
    }
    function test11835()
    {
        $this->assertTrue(0 === 0);
        fn() => $test % $test <=> $test;
    }
    function test11836()
    {
        $this->assertTrue(0 === 0);
        fn() => $test * $test <=> $test;
    }
    function test11837()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test != $test) <=> $test;
    }
    function test11838()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test !== $test) <=> $test;
    }
    function test11839()
    {
        $this->assertTrue(0 === 0);
        fn() => $test + $test <=> $test;
    }
    function test11840()
    {
        $this->assertTrue(0 === 0);
        fn() => $test ** $test <=> $test;
    }
    function test11841()
    {
        $this->assertTrue(0 === 0);
        fn() => $test << $test <=> $test;
    }
    function test11842()
    {
        $this->assertTrue(0 === 0);
        fn() => $test >> $test <=> $test;
    }
    function test11843()
    {
        $this->assertTrue(0 === 0);
        fn() => $test < $test <=> $test;
    }
    function test11844()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <= $test <=> $test;
    }
    function test11845()
    {
        $this->assertTrue(0 === 0);
        fn() => ($test <=> $test) <=> $test;
    }
    function test11846()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test <=> $test;
    }
    function test11847()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test <=> $test;
    }
    function test11848()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test <=> $test;
    }
    function test11849()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test <=> $test;
    }
    function test11850()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test <=> $test;
    }
    function test11851()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test <=> $test;
    }
    function test11852()
    {
        $this->assertTrue(0 === 0);
        fn() => 0.0 <=> $test;
    }
    function test11853()
    {
        $this->assertTrue(0 === 0);
        fn() => "{$test}" <=> $test;
    }
    function test11854()
    {
        $this->assertTrue(0 === 0);
        fn() => 0 <=> $test;
    }
    function test11855()
    {
        $this->assertTrue(0 === 0);
        fn() => 'test' <=> $test;
    }
    function test11856()
    {
        $this->assertTrue(0 === 0);
        fn() => __CLASS__ <=> $test;
    }
    function test11857()
    {
        $this->assertTrue(0 === 0);
        fn() => __DIR__ <=> $test;
    }
    function test11858()
    {
        $this->assertTrue(0 === 0);
        fn() => __FILE__ <=> $test;
    }
    function test11859()
    {
        $this->assertTrue(0 === 0);
        fn() => __FUNCTION__ <=> $test;
    }
    function test11860()
    {
        $this->assertTrue(0 === 0);
        fn() => __LINE__ <=> $test;
    }
    function test11861()
    {
        $this->assertTrue(0 === 0);
        fn() => __METHOD__ <=> $test;
    }
    function test11862()
    {
        $this->assertTrue(0 === 0);
        fn() => __NAMESPACE__ <=> $test;
    }
    function test11863()
    {
        $this->assertTrue(0 === 0);
        fn() => __TRAIT__ <=> $test;
    }
    function test11864()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test[$test];
    }
    function test11865()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> [];
    }
    function test11866()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> ($test = $test);
    }
    function test11867()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> ($test =& $test);
    }
    function test11868()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> ~$test;
    }
    function test11869()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> !$test;
    }
    function test11870()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test::$test;
    }
    function test11871()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> clone $test;
    }
    function test11872()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> function () {
        };
    }
    function test11873()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test;
    }
    function test11874()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> self;
    }
    function test11875()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> empty($test);
    }
    function test11876()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> @$test;
    }
    function test11877()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> eval($test);
    }
    function test11878()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test();
    }
    function test11879()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> ( $test);
    }
    function test11880()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test instanceof $test;
    }
    function test11881()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> isset($test);
    }
    function test11882()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> match ($test) {
        };
    }
    function test11883()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test->{$test}();
    }
    function test11884()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> new $test();
    }
    function test11885()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test?->{$test}();
    }
    function test11886()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test?->{$test};
    }
    function test11887()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test--;
    }
    function test11888()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test++;
    }
    function test11889()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> --$test;
    }
    function test11890()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> ++$test;
    }
    function test11891()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> (print $test);
    }
    function test11892()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test->{$test};
    }
    function test11893()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> ``;
    }
    function test11894()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test::$test();
    }
    function test11895()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test::${$test};
    }
    function test11896()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> ($test ? $test : $test);
    }
    function test11897()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> throw $test;
    }
    function test11898()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> -$test;
    }
    function test11899()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> +$test;
    }
    function test11900()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> ${$test};
    }
    function test11901()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> (yield from $test);
    }
    function test11902()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> (yield $test => $test);
    }
    function test11903()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> ($test &= $test);
    }
    function test11904()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> ($test |= $test);
    }
    function test11905()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> ($test ^= $test);
    }
    function test11906()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> ($test ??= $test);
    }
    function test11907()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> ($test .= $test);
    }
    function test11908()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> ($test /= $test);
    }
    function test11909()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> ($test -= $test);
    }
    function test11910()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> ($test %= $test);
    }
    function test11911()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> ($test *= $test);
    }
    function test11912()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> ($test += $test);
    }
    function test11913()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> ($test **= $test);
    }
    function test11914()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> ($test <<= $test);
    }
    function test11915()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> ($test >>= $test);
    }
    function test11916()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> ($test & $test);
    }
    function test11917()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> ($test | $test);
    }
    function test11918()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> ($test ^ $test);
    }
    function test11919()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> ($test && $test);
    }
    function test11920()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> ($test || $test);
    }
    function test11921()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> ($test ?? $test);
    }
    function test11922()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test . $test;
    }
    function test11923()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test / $test;
    }
    function test11924()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> ($test == $test);
    }
    function test11925()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test > $test;
    }
    function test11926()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test >= $test;
    }
    function test11927()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> ($test === $test);
    }
    function test11928()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> ($test and $test);
    }
    function test11929()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> ($test or $test);
    }
    function test11930()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> ($test xor $test);
    }
    function test11931()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test - $test;
    }
    function test11932()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test % $test;
    }
    function test11933()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test * $test;
    }
    function test11934()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> ($test != $test);
    }
    function test11935()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> ($test !== $test);
    }
    function test11936()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test + $test;
    }
    function test11937()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test ** $test;
    }
    function test11938()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test << $test;
    }
    function test11939()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test >> $test;
    }
    function test11940()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test < $test;
    }
    function test11941()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> $test <= $test;
    }
    function test11942()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> ($test <=> $test);
    }
    function test11943()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> (array) $test;
    }
    function test11944()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> (bool) $test;
    }
    function test11945()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> (double) $test;
    }
    function test11946()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> (int) $test;
    }
    function test11947()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> (object) $test;
    }
    function test11948()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> (string) $test;
    }
    function test11949()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> 0.0;
    }
    function test11950()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> "{$test}";
    }
    function test11951()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> 0;
    }
    function test11952()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> 'test';
    }
    function test11953()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> __CLASS__;
    }
    function test11954()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> __DIR__;
    }
    function test11955()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> __FILE__;
    }
    function test11956()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> __FUNCTION__;
    }
    function test11957()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> __LINE__;
    }
    function test11958()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> __METHOD__;
    }
    function test11959()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> __NAMESPACE__;
    }
    function test11960()
    {
        $this->assertTrue(0 === 0);
        fn() => $test <=> __TRAIT__;
    }
    function test11961()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test[$test];
    }
    function test11962()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) [];
    }
    function test11963()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test = $test);
    }
    function test11964()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test =& $test);
    }
    function test11965()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ~$test;
    }
    function test11966()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) (!$test);
    }
    function test11967()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test::$test;
    }
    function test11968()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) clone $test;
    }
    function test11969()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) function () {
        };
    }
    function test11970()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test;
    }
    function test11971()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) self;
    }
    function test11972()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) empty($test);
    }
    function test11973()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) @$test;
    }
    function test11974()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) eval($test);
    }
    function test11975()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test();
    }
    function test11976()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ( $test);
    }
    function test11977()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test instanceof $test);
    }
    function test11978()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) isset($test);
    }
    function test11979()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) match ($test) {
        };
    }
    function test11980()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test->{$test}();
    }
    function test11981()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) new $test();
    }
    function test11982()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test?->{$test}();
    }
    function test11983()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test?->{$test};
    }
    function test11984()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test--;
    }
    function test11985()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test++;
    }
    function test11986()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) --$test;
    }
    function test11987()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ++$test;
    }
    function test11988()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) (print $test);
    }
    function test11989()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test->{$test};
    }
    function test11990()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ``;
    }
    function test11991()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test::$test();
    }
    function test11992()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test::${$test};
    }
    function test11993()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test ? $test : $test);
    }
    function test11994()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) throw $test;
    }
    function test11995()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) -$test;
    }
    function test11996()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) +$test;
    }
    function test11997()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ${$test};
    }
    function test11998()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) (yield from $test);
    }
    function test11999()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) (yield $test => $test);
    }
    function test12000()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test &= $test);
    }
    function test12001()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test |= $test);
    }
    function test12002()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test ^= $test);
    }
    function test12003()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test ??= $test);
    }
    function test12004()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test .= $test);
    }
    function test12005()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test /= $test);
    }
    function test12006()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test -= $test);
    }
    function test12007()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test %= $test);
    }
    function test12008()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test *= $test);
    }
    function test12009()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test += $test);
    }
    function test12010()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test **= $test);
    }
    function test12011()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test <<= $test);
    }
    function test12012()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test >>= $test);
    }
    function test12013()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test & $test);
    }
    function test12014()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test | $test);
    }
    function test12015()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test ^ $test);
    }
    function test12016()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test && $test);
    }
    function test12017()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test || $test);
    }
    function test12018()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test ?? $test);
    }
    function test12019()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test . $test);
    }
    function test12020()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test / $test);
    }
    function test12021()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test == $test);
    }
    function test12022()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test > $test);
    }
    function test12023()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test >= $test);
    }
    function test12024()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test === $test);
    }
    function test12025()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test and $test);
    }
    function test12026()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test or $test);
    }
    function test12027()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test xor $test);
    }
    function test12028()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test - $test);
    }
    function test12029()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test % $test);
    }
    function test12030()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test * $test);
    }
    function test12031()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test != $test);
    }
    function test12032()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test !== $test);
    }
    function test12033()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test + $test);
    }
    function test12034()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) $test ** $test;
    }
    function test12035()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test << $test);
    }
    function test12036()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test >> $test);
    }
    function test12037()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test < $test);
    }
    function test12038()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test <= $test);
    }
    function test12039()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) ($test <=> $test);
    }
    function test12040()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) (array) $test;
    }
    function test12041()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) (bool) $test;
    }
    function test12042()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) (double) $test;
    }
    function test12043()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) (int) $test;
    }
    function test12044()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) (object) $test;
    }
    function test12045()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) (string) $test;
    }
    function test12046()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) 0.0;
    }
    function test12047()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) "{$test}";
    }
    function test12048()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) 0;
    }
    function test12049()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) 'test';
    }
    function test12050()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) __CLASS__;
    }
    function test12051()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) __DIR__;
    }
    function test12052()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) __FILE__;
    }
    function test12053()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) __FUNCTION__;
    }
    function test12054()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) __LINE__;
    }
    function test12055()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) __METHOD__;
    }
    function test12056()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) __NAMESPACE__;
    }
    function test12057()
    {
        $this->assertTrue(0 === 0);
        fn() => (array) __TRAIT__;
    }
    function test12058()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test[$test];
    }
    function test12059()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) [];
    }
    function test12060()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test = $test);
    }
    function test12061()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test =& $test);
    }
    function test12062()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ~$test;
    }
    function test12063()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) (!$test);
    }
    function test12064()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test::$test;
    }
    function test12065()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) clone $test;
    }
    function test12066()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) function () {
        };
    }
    function test12067()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test;
    }
    function test12068()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) self;
    }
    function test12069()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) empty($test);
    }
    function test12070()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) @$test;
    }
    function test12071()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) eval($test);
    }
    function test12072()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test();
    }
    function test12073()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ( $test);
    }
    function test12074()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test instanceof $test);
    }
    function test12075()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) isset($test);
    }
    function test12076()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) match ($test) {
        };
    }
    function test12077()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test->{$test}();
    }
    function test12078()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) new $test();
    }
    function test12079()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test?->{$test}();
    }
    function test12080()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test?->{$test};
    }
    function test12081()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test--;
    }
    function test12082()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test++;
    }
    function test12083()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) --$test;
    }
    function test12084()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ++$test;
    }
    function test12085()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) (print $test);
    }
    function test12086()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test->{$test};
    }
    function test12087()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ``;
    }
    function test12088()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test::$test();
    }
    function test12089()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test::${$test};
    }
    function test12090()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test ? $test : $test);
    }
    function test12091()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) throw $test;
    }
    function test12092()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) -$test;
    }
    function test12093()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) +$test;
    }
    function test12094()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ${$test};
    }
    function test12095()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) (yield from $test);
    }
    function test12096()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) (yield $test => $test);
    }
    function test12097()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test &= $test);
    }
    function test12098()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test |= $test);
    }
    function test12099()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test ^= $test);
    }
    function test12100()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test ??= $test);
    }
    function test12101()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test .= $test);
    }
    function test12102()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test /= $test);
    }
    function test12103()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test -= $test);
    }
    function test12104()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test %= $test);
    }
    function test12105()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test *= $test);
    }
    function test12106()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test += $test);
    }
    function test12107()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test **= $test);
    }
    function test12108()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test <<= $test);
    }
    function test12109()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test >>= $test);
    }
    function test12110()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test & $test);
    }
    function test12111()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test | $test);
    }
    function test12112()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test ^ $test);
    }
    function test12113()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test && $test);
    }
    function test12114()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test || $test);
    }
    function test12115()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test ?? $test);
    }
    function test12116()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test . $test);
    }
    function test12117()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test / $test);
    }
    function test12118()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test == $test);
    }
    function test12119()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test > $test);
    }
    function test12120()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test >= $test);
    }
    function test12121()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test === $test);
    }
    function test12122()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test and $test);
    }
    function test12123()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test or $test);
    }
    function test12124()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test xor $test);
    }
    function test12125()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test - $test);
    }
    function test12126()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test % $test);
    }
    function test12127()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test * $test);
    }
    function test12128()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test != $test);
    }
    function test12129()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test !== $test);
    }
    function test12130()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test + $test);
    }
    function test12131()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) $test ** $test;
    }
    function test12132()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test << $test);
    }
    function test12133()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test >> $test);
    }
    function test12134()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test < $test);
    }
    function test12135()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test <= $test);
    }
    function test12136()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) ($test <=> $test);
    }
    function test12137()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) (array) $test;
    }
    function test12138()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) (bool) $test;
    }
    function test12139()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) (double) $test;
    }
    function test12140()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) (int) $test;
    }
    function test12141()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) (object) $test;
    }
    function test12142()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) (string) $test;
    }
    function test12143()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) 0.0;
    }
    function test12144()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) "{$test}";
    }
    function test12145()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) 0;
    }
    function test12146()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) 'test';
    }
    function test12147()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) __CLASS__;
    }
    function test12148()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) __DIR__;
    }
    function test12149()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) __FILE__;
    }
    function test12150()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) __FUNCTION__;
    }
    function test12151()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) __LINE__;
    }
    function test12152()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) __METHOD__;
    }
    function test12153()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) __NAMESPACE__;
    }
    function test12154()
    {
        $this->assertTrue(0 === 0);
        fn() => (bool) __TRAIT__;
    }
    function test12155()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test[$test];
    }
    function test12156()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) [];
    }
    function test12157()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test = $test);
    }
    function test12158()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test =& $test);
    }
    function test12159()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ~$test;
    }
    function test12160()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) (!$test);
    }
    function test12161()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test::$test;
    }
    function test12162()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) clone $test;
    }
    function test12163()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) function () {
        };
    }
    function test12164()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test;
    }
    function test12165()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) self;
    }
    function test12166()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) empty($test);
    }
    function test12167()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) @$test;
    }
    function test12168()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) eval($test);
    }
    function test12169()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test();
    }
    function test12170()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ( $test);
    }
    function test12171()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test instanceof $test);
    }
    function test12172()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) isset($test);
    }
    function test12173()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) match ($test) {
        };
    }
    function test12174()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test->{$test}();
    }
    function test12175()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) new $test();
    }
    function test12176()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test?->{$test}();
    }
    function test12177()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test?->{$test};
    }
    function test12178()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test--;
    }
    function test12179()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test++;
    }
    function test12180()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) --$test;
    }
    function test12181()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ++$test;
    }
    function test12182()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) (print $test);
    }
    function test12183()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test->{$test};
    }
    function test12184()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ``;
    }
    function test12185()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test::$test();
    }
    function test12186()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test::${$test};
    }
    function test12187()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test ? $test : $test);
    }
    function test12188()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) throw $test;
    }
    function test12189()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) -$test;
    }
    function test12190()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) +$test;
    }
    function test12191()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ${$test};
    }
    function test12192()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) (yield from $test);
    }
    function test12193()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) (yield $test => $test);
    }
    function test12194()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test &= $test);
    }
    function test12195()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test |= $test);
    }
    function test12196()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test ^= $test);
    }
    function test12197()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test ??= $test);
    }
    function test12198()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test .= $test);
    }
    function test12199()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test /= $test);
    }
    function test12200()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test -= $test);
    }
    function test12201()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test %= $test);
    }
    function test12202()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test *= $test);
    }
    function test12203()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test += $test);
    }
    function test12204()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test **= $test);
    }
    function test12205()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test <<= $test);
    }
    function test12206()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test >>= $test);
    }
    function test12207()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test & $test);
    }
    function test12208()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test | $test);
    }
    function test12209()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test ^ $test);
    }
    function test12210()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test && $test);
    }
    function test12211()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test || $test);
    }
    function test12212()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test ?? $test);
    }
    function test12213()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test . $test);
    }
    function test12214()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test / $test);
    }
    function test12215()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test == $test);
    }
    function test12216()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test > $test);
    }
    function test12217()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test >= $test);
    }
    function test12218()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test === $test);
    }
    function test12219()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test and $test);
    }
    function test12220()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test or $test);
    }
    function test12221()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test xor $test);
    }
    function test12222()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test - $test);
    }
    function test12223()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test % $test);
    }
    function test12224()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test * $test);
    }
    function test12225()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test != $test);
    }
    function test12226()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test !== $test);
    }
    function test12227()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test + $test);
    }
    function test12228()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) $test ** $test;
    }
    function test12229()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test << $test);
    }
    function test12230()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test >> $test);
    }
    function test12231()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test < $test);
    }
    function test12232()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test <= $test);
    }
    function test12233()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) ($test <=> $test);
    }
    function test12234()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) (array) $test;
    }
    function test12235()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) (bool) $test;
    }
    function test12236()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) (double) $test;
    }
    function test12237()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) (int) $test;
    }
    function test12238()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) (object) $test;
    }
    function test12239()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) (string) $test;
    }
    function test12240()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) 0.0;
    }
    function test12241()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) "{$test}";
    }
    function test12242()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) 0;
    }
    function test12243()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) 'test';
    }
    function test12244()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) __CLASS__;
    }
    function test12245()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) __DIR__;
    }
    function test12246()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) __FILE__;
    }
    function test12247()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) __FUNCTION__;
    }
    function test12248()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) __LINE__;
    }
    function test12249()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) __METHOD__;
    }
    function test12250()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) __NAMESPACE__;
    }
    function test12251()
    {
        $this->assertTrue(0 === 0);
        fn() => (double) __TRAIT__;
    }
    function test12252()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test[$test];
    }
    function test12253()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) [];
    }
    function test12254()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test = $test);
    }
    function test12255()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test =& $test);
    }
    function test12256()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ~$test;
    }
    function test12257()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) (!$test);
    }
    function test12258()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test::$test;
    }
    function test12259()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) clone $test;
    }
    function test12260()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) function () {
        };
    }
    function test12261()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test;
    }
    function test12262()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) self;
    }
    function test12263()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) empty($test);
    }
    function test12264()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) @$test;
    }
    function test12265()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) eval($test);
    }
    function test12266()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test();
    }
    function test12267()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ( $test);
    }
    function test12268()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test instanceof $test);
    }
    function test12269()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) isset($test);
    }
    function test12270()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) match ($test) {
        };
    }
    function test12271()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test->{$test}();
    }
    function test12272()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) new $test();
    }
    function test12273()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test?->{$test}();
    }
    function test12274()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test?->{$test};
    }
    function test12275()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test--;
    }
    function test12276()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test++;
    }
    function test12277()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) --$test;
    }
    function test12278()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ++$test;
    }
    function test12279()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) (print $test);
    }
    function test12280()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test->{$test};
    }
    function test12281()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ``;
    }
    function test12282()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test::$test();
    }
    function test12283()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test::${$test};
    }
    function test12284()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test ? $test : $test);
    }
    function test12285()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) throw $test;
    }
    function test12286()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) -$test;
    }
    function test12287()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) +$test;
    }
    function test12288()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ${$test};
    }
    function test12289()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) (yield from $test);
    }
    function test12290()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) (yield $test => $test);
    }
    function test12291()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test &= $test);
    }
    function test12292()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test |= $test);
    }
    function test12293()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test ^= $test);
    }
    function test12294()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test ??= $test);
    }
    function test12295()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test .= $test);
    }
    function test12296()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test /= $test);
    }
    function test12297()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test -= $test);
    }
    function test12298()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test %= $test);
    }
    function test12299()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test *= $test);
    }
    function test12300()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test += $test);
    }
    function test12301()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test **= $test);
    }
    function test12302()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test <<= $test);
    }
    function test12303()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test >>= $test);
    }
    function test12304()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test & $test);
    }
    function test12305()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test | $test);
    }
    function test12306()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test ^ $test);
    }
    function test12307()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test && $test);
    }
    function test12308()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test || $test);
    }
    function test12309()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test ?? $test);
    }
    function test12310()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test . $test);
    }
    function test12311()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test / $test);
    }
    function test12312()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test == $test);
    }
    function test12313()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test > $test);
    }
    function test12314()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test >= $test);
    }
    function test12315()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test === $test);
    }
    function test12316()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test and $test);
    }
    function test12317()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test or $test);
    }
    function test12318()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test xor $test);
    }
    function test12319()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test - $test);
    }
    function test12320()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test % $test);
    }
    function test12321()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test * $test);
    }
    function test12322()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test != $test);
    }
    function test12323()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test !== $test);
    }
    function test12324()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test + $test);
    }
    function test12325()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) $test ** $test;
    }
    function test12326()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test << $test);
    }
    function test12327()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test >> $test);
    }
    function test12328()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test < $test);
    }
    function test12329()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test <= $test);
    }
    function test12330()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) ($test <=> $test);
    }
    function test12331()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) (array) $test;
    }
    function test12332()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) (bool) $test;
    }
    function test12333()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) (double) $test;
    }
    function test12334()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) (int) $test;
    }
    function test12335()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) (object) $test;
    }
    function test12336()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) (string) $test;
    }
    function test12337()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) 0.0;
    }
    function test12338()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) "{$test}";
    }
    function test12339()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) 0;
    }
    function test12340()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) 'test';
    }
    function test12341()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) __CLASS__;
    }
    function test12342()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) __DIR__;
    }
    function test12343()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) __FILE__;
    }
    function test12344()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) __FUNCTION__;
    }
    function test12345()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) __LINE__;
    }
    function test12346()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) __METHOD__;
    }
    function test12347()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) __NAMESPACE__;
    }
    function test12348()
    {
        $this->assertTrue(0 === 0);
        fn() => (int) __TRAIT__;
    }
    function test12349()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test[$test];
    }
    function test12350()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) [];
    }
    function test12351()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test = $test);
    }
    function test12352()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test =& $test);
    }
    function test12353()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ~$test;
    }
    function test12354()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) (!$test);
    }
    function test12355()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test::$test;
    }
    function test12356()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) clone $test;
    }
    function test12357()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) function () {
        };
    }
    function test12358()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test;
    }
    function test12359()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) self;
    }
    function test12360()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) empty($test);
    }
    function test12361()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) @$test;
    }
    function test12362()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) eval($test);
    }
    function test12363()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test();
    }
    function test12364()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ( $test);
    }
    function test12365()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test instanceof $test);
    }
    function test12366()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) isset($test);
    }
    function test12367()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) match ($test) {
        };
    }
    function test12368()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test->{$test}();
    }
    function test12369()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) new $test();
    }
    function test12370()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test?->{$test}();
    }
    function test12371()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test?->{$test};
    }
    function test12372()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test--;
    }
    function test12373()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test++;
    }
    function test12374()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) --$test;
    }
    function test12375()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ++$test;
    }
    function test12376()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) (print $test);
    }
    function test12377()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test->{$test};
    }
    function test12378()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ``;
    }
    function test12379()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test::$test();
    }
    function test12380()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test::${$test};
    }
    function test12381()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test ? $test : $test);
    }
    function test12382()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) throw $test;
    }
    function test12383()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) -$test;
    }
    function test12384()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) +$test;
    }
    function test12385()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ${$test};
    }
    function test12386()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) (yield from $test);
    }
    function test12387()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) (yield $test => $test);
    }
    function test12388()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test &= $test);
    }
    function test12389()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test |= $test);
    }
    function test12390()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test ^= $test);
    }
    function test12391()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test ??= $test);
    }
    function test12392()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test .= $test);
    }
    function test12393()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test /= $test);
    }
    function test12394()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test -= $test);
    }
    function test12395()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test %= $test);
    }
    function test12396()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test *= $test);
    }
    function test12397()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test += $test);
    }
    function test12398()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test **= $test);
    }
    function test12399()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test <<= $test);
    }
    function test12400()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test >>= $test);
    }
    function test12401()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test & $test);
    }
    function test12402()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test | $test);
    }
    function test12403()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test ^ $test);
    }
    function test12404()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test && $test);
    }
    function test12405()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test || $test);
    }
    function test12406()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test ?? $test);
    }
    function test12407()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test . $test);
    }
    function test12408()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test / $test);
    }
    function test12409()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test == $test);
    }
    function test12410()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test > $test);
    }
    function test12411()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test >= $test);
    }
    function test12412()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test === $test);
    }
    function test12413()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test and $test);
    }
    function test12414()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test or $test);
    }
    function test12415()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test xor $test);
    }
    function test12416()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test - $test);
    }
    function test12417()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test % $test);
    }
    function test12418()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test * $test);
    }
    function test12419()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test != $test);
    }
    function test12420()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test !== $test);
    }
    function test12421()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test + $test);
    }
    function test12422()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) $test ** $test;
    }
    function test12423()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test << $test);
    }
    function test12424()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test >> $test);
    }
    function test12425()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test < $test);
    }
    function test12426()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test <= $test);
    }
    function test12427()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) ($test <=> $test);
    }
    function test12428()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) (array) $test;
    }
    function test12429()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) (bool) $test;
    }
    function test12430()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) (double) $test;
    }
    function test12431()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) (int) $test;
    }
    function test12432()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) (object) $test;
    }
    function test12433()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) (string) $test;
    }
    function test12434()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) 0.0;
    }
    function test12435()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) "{$test}";
    }
    function test12436()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) 0;
    }
    function test12437()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) 'test';
    }
    function test12438()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) __CLASS__;
    }
    function test12439()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) __DIR__;
    }
    function test12440()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) __FILE__;
    }
    function test12441()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) __FUNCTION__;
    }
    function test12442()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) __LINE__;
    }
    function test12443()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) __METHOD__;
    }
    function test12444()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) __NAMESPACE__;
    }
    function test12445()
    {
        $this->assertTrue(0 === 0);
        fn() => (object) __TRAIT__;
    }
    function test12446()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test[$test];
    }
    function test12447()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) [];
    }
    function test12448()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test = $test);
    }
    function test12449()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test =& $test);
    }
    function test12450()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ~$test;
    }
    function test12451()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) (!$test);
    }
    function test12452()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test::$test;
    }
    function test12453()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) clone $test;
    }
    function test12454()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) function () {
        };
    }
    function test12455()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test;
    }
    function test12456()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) self;
    }
    function test12457()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) empty($test);
    }
    function test12458()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) @$test;
    }
    function test12459()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) eval($test);
    }
    function test12460()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test();
    }
    function test12461()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ( $test);
    }
    function test12462()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test instanceof $test);
    }
    function test12463()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) isset($test);
    }
    function test12464()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) match ($test) {
        };
    }
    function test12465()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test->{$test}();
    }
    function test12466()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) new $test();
    }
    function test12467()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test?->{$test}();
    }
    function test12468()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test?->{$test};
    }
    function test12469()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test--;
    }
    function test12470()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test++;
    }
    function test12471()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) --$test;
    }
    function test12472()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ++$test;
    }
    function test12473()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) (print $test);
    }
    function test12474()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test->{$test};
    }
    function test12475()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ``;
    }
    function test12476()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test::$test();
    }
    function test12477()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test::${$test};
    }
    function test12478()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test ? $test : $test);
    }
    function test12479()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) throw $test;
    }
    function test12480()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) -$test;
    }
    function test12481()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) +$test;
    }
    function test12482()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ${$test};
    }
    function test12483()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) (yield from $test);
    }
    function test12484()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) (yield $test => $test);
    }
    function test12485()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test &= $test);
    }
    function test12486()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test |= $test);
    }
    function test12487()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test ^= $test);
    }
    function test12488()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test ??= $test);
    }
    function test12489()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test .= $test);
    }
    function test12490()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test /= $test);
    }
    function test12491()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test -= $test);
    }
    function test12492()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test %= $test);
    }
    function test12493()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test *= $test);
    }
    function test12494()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test += $test);
    }
    function test12495()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test **= $test);
    }
    function test12496()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test <<= $test);
    }
    function test12497()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test >>= $test);
    }
    function test12498()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test & $test);
    }
    function test12499()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test | $test);
    }
    function test12500()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test ^ $test);
    }
    function test12501()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test && $test);
    }
    function test12502()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test || $test);
    }
    function test12503()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test ?? $test);
    }
    function test12504()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test . $test);
    }
    function test12505()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test / $test);
    }
    function test12506()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test == $test);
    }
    function test12507()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test > $test);
    }
    function test12508()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test >= $test);
    }
    function test12509()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test === $test);
    }
    function test12510()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test and $test);
    }
    function test12511()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test or $test);
    }
    function test12512()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test xor $test);
    }
    function test12513()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test - $test);
    }
    function test12514()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test % $test);
    }
    function test12515()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test * $test);
    }
    function test12516()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test != $test);
    }
    function test12517()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test !== $test);
    }
    function test12518()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test + $test);
    }
    function test12519()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) $test ** $test;
    }
    function test12520()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test << $test);
    }
    function test12521()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test >> $test);
    }
    function test12522()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test < $test);
    }
    function test12523()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test <= $test);
    }
    function test12524()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) ($test <=> $test);
    }
    function test12525()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) (array) $test;
    }
    function test12526()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) (bool) $test;
    }
    function test12527()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) (double) $test;
    }
    function test12528()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) (int) $test;
    }
    function test12529()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) (object) $test;
    }
    function test12530()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) (string) $test;
    }
    function test12531()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) 0.0;
    }
    function test12532()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) "{$test}";
    }
    function test12533()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) 0;
    }
    function test12534()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) 'test';
    }
    function test12535()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) __CLASS__;
    }
    function test12536()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) __DIR__;
    }
    function test12537()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) __FILE__;
    }
    function test12538()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) __FUNCTION__;
    }
    function test12539()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) __LINE__;
    }
    function test12540()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) __METHOD__;
    }
    function test12541()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) __NAMESPACE__;
    }
    function test12542()
    {
        $this->assertTrue(0 === 0);
        fn() => (string) __TRAIT__;
    }
    function test12543()
    {
        $this->assertTrue(0 === 0);
        fn() => "{$test[$test]}";
    }
    function test12544()
    {
        $this->assertTrue(0 === 0);
        fn() => "{[]}";
    }
    function test12545()
    {
        $this->assertTrue(0 === 0);
        fn() => "{~$test}";
    }
    function test12546()
    {
        $this->assertTrue(0 === 0);
        fn() => "{!$test}";
    }
    function test12547()
    {
        $this->assertTrue(0 === 0);
        fn() => "{$test::$test}";
    }
    function test12548()
    {
        $this->assertTrue(0 === 0);
        fn() => "{clone $test}";
    }
    function test12549()
    {
        $this->assertTrue(0 === 0);
        fn() => "{function () {
        }}";
    }
    function test12550()
    {
        $this->assertTrue(0 === 0);
        fn() => "{$test}";
    }
    function test12551()
    {
        $this->assertTrue(0 === 0);
        fn() => "{self}";
    }
    function test12552()
    {
        $this->assertTrue(0 === 0);
        fn() => "{empty($test)}";
    }
    function test12553()
    {
        $this->assertTrue(0 === 0);
        fn() => "{@$test}";
    }
    function test12554()
    {
        $this->assertTrue(0 === 0);
        fn() => "{eval($test)}";
    }
    function test12555()
    {
        $this->assertTrue(0 === 0);
        fn() => "{$test()}";
    }
    function test12556()
    {
        $this->assertTrue(0 === 0);
        fn() => "{ $test}";
    }
    function test12557()
    {
        $this->assertTrue(0 === 0);
        fn() => "{isset($test)}";
    }
    function test12558()
    {
        $this->assertTrue(0 === 0);
        fn() => "{match ($test) {
        }}";
    }
    function test12559()
    {
        $this->assertTrue(0 === 0);
        fn() => "{$test->{$test}()}";
    }
    function test12560()
    {
        $this->assertTrue(0 === 0);
        fn() => "{new $test()}";
    }
    function test12561()
    {
        $this->assertTrue(0 === 0);
        fn() => "{$test?->{$test}()}";
    }
    function test12562()
    {
        $this->assertTrue(0 === 0);
        fn() => "{$test?->{$test}}";
    }
    function test12563()
    {
        $this->assertTrue(0 === 0);
        fn() => "{--$test}";
    }
    function test12564()
    {
        $this->assertTrue(0 === 0);
        fn() => "{++$test}";
    }
    function test12565()
    {
        $this->assertTrue(0 === 0);
        fn() => "{print $test}";
    }
    function test12566()
    {
        $this->assertTrue(0 === 0);
        fn() => "{$test->{$test}}";
    }
    function test12567()
    {
        $this->assertTrue(0 === 0);
        fn() => "{``}";
    }
    function test12568()
    {
        $this->assertTrue(0 === 0);
        fn() => "{$test::$test()}";
    }
    function test12569()
    {
        $this->assertTrue(0 === 0);
        fn() => "{$test::${$test}}";
    }
    function test12570()
    {
        $this->assertTrue(0 === 0);
        fn() => "{throw $test}";
    }
    function test12571()
    {
        $this->assertTrue(0 === 0);
        fn() => "{-$test}";
    }
    function test12572()
    {
        $this->assertTrue(0 === 0);
        fn() => "{+$test}";
    }
    function test12573()
    {
        $this->assertTrue(0 === 0);
        fn() => "{${$test}}";
    }
    function test12574()
    {
        $this->assertTrue(0 === 0);
        fn() => "{yield from $test}";
    }
    function test12575()
    {
        $this->assertTrue(0 === 0);
        fn() => "{(yield $test => $test)}";
    }
    function test12576()
    {
        $this->assertTrue(0 === 0);
        fn() => "{(array) $test}";
    }
    function test12577()
    {
        $this->assertTrue(0 === 0);
        fn() => "{(bool) $test}";
    }
    function test12578()
    {
        $this->assertTrue(0 === 0);
        fn() => "{(double) $test}";
    }
    function test12579()
    {
        $this->assertTrue(0 === 0);
        fn() => "{(int) $test}";
    }
    function test12580()
    {
        $this->assertTrue(0 === 0);
        fn() => "{(object) $test}";
    }
    function test12581()
    {
        $this->assertTrue(0 === 0);
        fn() => "{(string) $test}";
    }
    function test12582()
    {
        $this->assertTrue(0 === 0);
        fn() => "{0.0}";
    }
    function test12583()
    {
        $this->assertTrue(0 === 0);
        fn() => "{0}";
    }
    function test12584()
    {
        $this->assertTrue(0 === 0);
        fn() => "{'test'}";
    }
    function test12585()
    {
        $this->assertTrue(0 === 0);
        fn() => "{__CLASS__}";
    }
    function test12586()
    {
        $this->assertTrue(0 === 0);
        fn() => "{__DIR__}";
    }
    function test12587()
    {
        $this->assertTrue(0 === 0);
        fn() => "{__FILE__}";
    }
    function test12588()
    {
        $this->assertTrue(0 === 0);
        fn() => "{__FUNCTION__}";
    }
    function test12589()
    {
        $this->assertTrue(0 === 0);
        fn() => "{__LINE__}";
    }
    function test12590()
    {
        $this->assertTrue(0 === 0);
        fn() => "{__METHOD__}";
    }
    function test12591()
    {
        $this->assertTrue(0 === 0);
        fn() => "{__NAMESPACE__}";
    }
    function test12592()
    {
        $this->assertTrue(0 === 0);
        fn() => "{__TRAIT__}";
    }
}